<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX9BAB2353FD5048B5B86EB7B810A97455">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">ROBLOXWorldTourLightningGuitar</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=115985616</url></Content>
			<string name="ToolTip">TARANCHULA 4 LIFE!</string>
		</Properties>
		<Item class="Part" referent="RBX7CF842DD335249BE8C50EEB026AB0852">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0.122891426</X>
					<Y>5.50438976</Y>
					<Z>-0.347362995</Z>
					<R00>0.707106769</R00>
					<R01>0.707106769</R01>
					<R02>3.78637246e-008</R02>
					<R10>-0.707106769</R10>
					<R11>0.707106769</R11>
					<R12>9.14111098e-008</R12>
					<R20>3.78637246e-008</R20>
					<R21>-9.14111098e-008</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>3.60000014</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX642F0378D19C490BB80AE533593B4062">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=115984912</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.29999995</X>
						<Y>1.29999995</Y>
						<Z>1.29999995</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=115984608</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX7A0FBB35FC804C9EAFAD06B4357C0AA2">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">ChordSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=99170481</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX27CEC7D39DEF4568BF933C8AC3503077">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Thunder</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=116041137</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBX1D111648373D475C909E07BBF2E1F22D">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=99198989</url></Content>
				<string name="Name">Pluck</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX6A65749012EF4B18B10842FD0AEDF62F">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=99200153</url></Content>
				<string name="Name">Hold</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX736A1C4A8E8049FAB4BAA2833CAD6DB5">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
ContentProvider = game:GetService(&quot;ContentProvider&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Animations = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ClientControl.OnClientInvoke = (function(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;elseif Mode == &quot;Preload&quot; and Value then
&#9;&#9;ContentProvider:Preload(Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;elseif Mode == &quot;DisableJump&quot; then
&#9;&#9;DisableJump(Value)
&#9;elseif Mode == &quot;SetCamera&quot; and Value then
&#9;&#9;if Value.Subject and Value.Type then
&#9;&#9;&#9;Camera.CameraSubject = Value.Subject
&#9;&#9;&#9;Camera.CameraType = Value.Type
&#9;&#9;end
&#9;end
end)

function InvokeServer(Mode, Value)
&#9;local ServerReturn = nil
&#9;pcall(function()
&#9;&#9;ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;end)
&#9;return ServerReturn
end

function DisableJump(Boolean)
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;if Boolean then
&#9;&#9;PreventJump = Humanoid.Changed:connect(function(Property)
&#9;&#9;&#9;if Property ==  &quot;Jump&quot; then
&#9;&#9;&#9;&#9;Humanoid.Jump = false
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.Button1Up:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = false})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
end

function Unequipped()
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX23309204C5D946A5994CE625C202C046">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

Module = require(185791213)

NoteData = {
&#9;Chords = {
&#9;&#9;{Key = &quot;z&quot;, Sound = {Normal = 99170172, Sharp = 99189531}},
&#9;&#9;{Key = &quot;x&quot;, Sound = {Normal = 99170311, Sharp = 99189711}},
&#9;&#9;{Key = &quot;c&quot;, Sound = {Normal = 99170354, Sharp = 99189785}},
&#9;&#9;{Key = &quot;v&quot;, Sound = {Normal = 99170403, Sharp = 99190216}},
&#9;&#9;{Key = &quot;b&quot;, Sound = {Normal = 99170481, Sharp = 99189905}},
&#9;&#9;{Key = &quot;n&quot;, Sound = {Normal = 99170537, Sharp = 99190021}},
&#9;&#9;{Key = &quot;m&quot;, Sound = {Normal = 99170583, Sharp = 99190550}}
&#9;},
&#9;Pitches = {
&#9;&#9;{Key = &quot;g&quot;, Pitch = 0.5},
&#9;&#9;{Key = &quot;h&quot;, Pitch = 0.75},
&#9;&#9;{Key = &quot;j&quot;, Pitch = 1},
&#9;&#9;{Key = &quot;k&quot;, Pitch = 1.25},
&#9;&#9;{Key = &quot;l&quot;, Pitch = 1.5},
&#9;}
}

Animations = {
&#9;Hold = {Animation = Tool:WaitForChild(&quot;Hold&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
&#9;Pluck = {Animation = Tool:WaitForChild(&quot;Pluck&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil}
}

Sounds = {
&#9;ChordSound = Handle:WaitForChild(&quot;ChordSound&quot;),
}

Grips = {
&#9;Unequipped = CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),
&#9;Equipped = CFrame.new(0.01923877, 1.19116962, 0.313162446, 0.49999997, 0.707106769, 0.49999997, 0.0564237535, 0.549525201, -0.833569586, -0.864185274, 0.444996685, 0.23486498)
}

ChordDuration = 0.25

ShiftDown = false
IsPlayingMusic = false
CurrentNote = 1
CurrentPitch = NoteData.Pitches[3] --((NoteData.Pitches[1] and NoteData.Pitches[1]) or nil)

ThunderSound = Handle:WaitForChild(&quot;Thunder&quot;)
Gui = script:WaitForChild(&quot;Gui&quot;)
MainFrame = Gui:WaitForChild(&quot;MainFrame&quot;)
Marker = MainFrame:WaitForChild(&quot;Marker&quot;)
TemplateNote = MainFrame:WaitForChild(&quot;TemplateNote&quot;)
WinFrame = MainFrame:WaitForChild(&quot;WinText&quot;)

ValidKeys = {&quot;z&quot;, &quot;x&quot;, &quot;c&quot;, &quot;v&quot;, &quot;b&quot;, &quot;n&quot;, &quot;m&quot;}
WinText = {116037822, 116037835, 116037848, 116037852}
MetalSounds = {116040999, 116041034, 116041059, 116041079, 116041100, 116041137}

MinNotes = 2
MaxNotes = 8
NumSlots = 12

MarkerSpeed = 6.0666

CurrentString = {}

MarkerPos = UDim2.new()

LightningRadius = 60

InRiff = false
LastPos = 0

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Locked = true
BasePart.CanCollide = true
BasePart.Anchored = false

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ServerControl.OnServerInvoke = (function(player, Mode, Value)
&#9;if Mode == &quot;KeyPress&quot; and Value then
&#9;&#9;local Key = string.lower(Value.Key)
&#9;&#9;local ByteKey = string.byte(Key)
&#9;&#9;local Down = Value.Down
&#9;&#9;if Key == &quot;0&quot; or ByteKey == 48 then
&#9;&#9;&#9;ShiftDown = Down
&#9;&#9;else
&#9;&#9;&#9;if Value.Down then
&#9;&#9;&#9;&#9;if IsPlayingMusic then
&#9;&#9;&#9;&#9;&#9;for i, v in pairs(NoteData.Chords) do
&#9;&#9;&#9;&#9;&#9;&#9;if v.Key == Key then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Duration = 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Chord = v
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local SoundId = ((not ShiftDown and v.Sound.Normal) or v.Sound.Sharp)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Pitch = CurrentPitch.Pitch
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Module.PlaySound(Handle, {Sound = Sounds.ChordSound, SoundId = SoundId}, ((Chord.Pitch and Chord.Pitch) or (CurrentPitch and CurrentPitch.Pitch) or nil), ChordDuration)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.Pluck)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;for i, v in pairs(NoteData.Pitches) do
&#9;&#9;&#9;&#9;&#9;if v.Key == Key then
&#9;&#9;&#9;&#9;&#9;&#9;CurrentPitch = v
&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if InRiff then
&#9;&#9;&#9;&#9;&#9;local Index = (math.floor(LastPos / (40)) + 1)
&#9;&#9;&#9;&#9;&#9;if CurrentString[Index] then
&#9;&#9;&#9;&#9;&#9;&#9;if not CurrentString[Index].Missed and CurrentString[Index].Key == Key then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;CurrentString[Index].Hit = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;CurrentString[Index].Frame.BackgroundColor3 = Color3.new(0, 0.8, 0)
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;CurrentString[Index].Missed = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;CurrentString[Index].Frame.BackgroundColor3 = Color3.new(0.8, 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;if Key == CurrentString[1].Key then
&#9;&#9;&#9;&#9;&#9;&#9;Spawn(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if StartRiff() then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ThunderSound.SoundId = (&quot;http://www.roblox.com/asset/?id=&quot; .. MetalSounds[math.random(#MetalSounds)])
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ThunderSound:Play()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CurrentGui.MainFrame.WinText.Image = (&quot;http://www.roblox.com/asset/?id=&quot; .. WinText[math.random(#WinText)])
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CurrentGui.MainFrame.WinText.Visible = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Delay(3, function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CurrentGui.MainFrame.WinText.Visible = false
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local HitPlayers = {}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not DoLightning(Handle.Position, HitPlayers) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i = 1, 6, 1 do&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Spawn(function()&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;LightningStrike(Handle.Position, (Handle.Position +(Vector3.new(((math.random() - 0.5) * 2),((math.random() - 0.5) * 2),((math.random() - 0.5) * 2)) * 45)))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end)&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end)

Tool.Grip = Grips.Unequipped
Tool.Enabled = true

function MakeNote(Index)
&#9;local NewNote = {}
&#9;NewNote.Key = ValidKeys[math.random(#ValidKeys)]
&#9;local Frame = TemplateNote:Clone()
&#9;Frame = TemplateNote:Clone()
&#9;Frame.Text = string.upper(NewNote.Key)
&#9;Frame.Position = UDim2.new(0,(((Index - 1) * 30) + (10 * Index)), 0.5, -15)
&#9;Frame.Parent = CurrentGui.MainFrame
&#9;Frame.Visible = true
&#9;NewNote.Frame = Frame
&#9;NewNote.Hit = false
&#9;NewNote.Missed = false
&#9;return NewNote
end

function SetupNoteString()
&#9;for i = 1, NumSlots, 1 do
&#9;&#9;if CurrentString[i] and CurrentString[i].Frame and CurrentString[i].Frame.Parent then
&#9;&#9;&#9;CurrentString[i].Frame:Destroy()
&#9;&#9;end
&#9;end
&#9;CurrentString = {}
&#9;local NumNotes = math.random(MinNotes, MaxNotes)
&#9;CurrentString[1] = MakeNote(1)
&#9;for i=1, NumNotes, 1 do
&#9;&#9;local Index = math.random(2, NumSlots)
&#9;&#9;while CurrentString[Index] do
&#9;&#9;&#9;Index = math.random(2, NumSlots)
&#9;&#9;end
&#9;&#9;CurrentString[Index] = MakeNote(Index)
&#9;end
&#9;CurrentGui.MainFrame.Marker.Position = UDim2.new(0, 0, 0, 0)
end

function StartRiff()
&#9;
&#9;InRiff=true
&#9;CurrentGui.MainFrame.Marker.Position = UDim2.new(0, 0, 0, 0)
&#9;LastPos = 0
&#9;CurrentString[1].Hit = true
&#9;CurrentString[1].Frame.BackgroundColor3 = Color3.new(0, 0.8, 0)
&#9;local StartTime = tick()
&#9;while (tick() - StartTime) &lt; MarkerSpeed and CurrentGui.Parent do
&#9;&#9;LastPos = (500 * ((tick() - StartTime) / MarkerSpeed))
&#9;&#9;CurrentGui.MainFrame.Marker.Position = UDim2.new(0, LastPos, 0, 0)
&#9;&#9;wait()
&#9;end
&#9;
&#9;for i = 1, NumSlots, 1 do
&#9;&#9;if CurrentString[i] and not CurrentString[i].Hit then
&#9;&#9;&#9;InRiff=false
&#9;&#9;&#9;for j = 1, NumSlots, 1 do
&#9;&#9;&#9;&#9;if CurrentString[j] then
&#9;&#9;&#9;&#9;&#9;CurrentString[j].Hit = false
&#9;&#9;&#9;&#9;&#9;CurrentString[j].Missed = false
&#9;&#9;&#9;&#9;&#9;CurrentString[j].Frame.BackgroundColor3 = TemplateNote.BackgroundColor3
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;return false
&#9;&#9;end
&#9;end
&#9;SetupNoteString()
&#9;InRiff = false
&#9;return true
end

function LightningStrike(Source, Destination)
&#9;local MaxSegLength = 7
&#9;local MinSegLength = 3
&#9;local MaxOffset = 4
&#9;local Direction = (Destination - Source).unit
&#9;local Distance = (Source - Destination).magnitude
&#9;
&#9;local Points = {}&#9;
&#9;Points[1] = Source
&#9;local LastDist = 0
&#9;
&#9;while (Distance - LastDist) &gt; MaxSegLength do
&#9;&#9;LastDist = (LastDist + ((math.random() * (MaxSegLength - MinSegLength)) + MinSegLength))
&#9;&#9;local NewVector = (Source + (LastDist * Direction) + Vector3.new(math.random(), math.random(), math.random()))
&#9;&#9;table.insert(Points, NewVector)
&#9;&#9;wait()
&#9;end&#9;
&#9;table.insert(Points, Destination)
&#9;
&#9;local Parts = {}
&#9;
&#9;for Index, i in ipairs(Points) do
&#9;&#9;local LastPart = BasePart:Clone()
&#9;&#9;LastPart.BrickColor = BrickColor.new(&quot;New Yeller&quot;)
&#9;&#9;LastPart.Transparency = 0.3
&#9;&#9;LastPart.Anchored = true
&#9;&#9;LastPart.CanCollide = false
&#9;&#9;local Mesh = Instance.new(&quot;CylinderMesh&quot;)
&#9;&#9;Mesh.Scale = Vector3.new(0.1, 1, 0.1)
&#9;&#9;Mesh.Parent = LastPart
&#9;&#9;if Points[Index + 1] then&#9;&#9;
&#9;&#9;&#9;LastPart.Size = Vector3.new(0.02, (i - Points[Index + 1]).magnitude, 0.02)
&#9;&#9;&#9;LastPart.CFrame = CFrame.new(((i + Points[Index + 1]) / 2), Points[Index + 1]) * CFrame.Angles((math.pi / 2), 0, 0)
&#9;&#9;&#9;LastPart.Parent = Tool
&#9;&#9;&#9;Debris:AddItem(LastPart, 1)
&#9;&#9;&#9;wait()
&#9;&#9;end
&#9;&#9;
&#9;end
end

function DoLightning(Root, HitPlayers)
&#9;for i, v in pairs(Players:GetChildren()) do
&#9;&#9;if v:IsA(&quot;Player&quot;) and not HitPlayers[v] and v ~= Player then
&#9;&#9;&#9;local character = v.Character
&#9;&#9;&#9;if character then
&#9;&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;&#9;local torso = character:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;&#9;&#9;if humanoid and humanoid.Health &gt; 0 and torso and (torso.Position - Root).magnitude &lt; LightningRadius then
&#9;&#9;&#9;&#9;&#9;HitPlayers[v] = true
&#9;&#9;&#9;&#9;&#9;Spawn(function()
&#9;&#9;&#9;&#9;&#9;&#9;LightningStrike(Root, torso.Position)
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(100)
&#9;&#9;&#9;&#9;&#9;DoLightning(Torso.Position, HitPlayers)
&#9;&#9;&#9;&#9;&#9;return true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;return false
end

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

function Activated()
&#9;if not Tool.Enabled or not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;Tool.Enabled = false
&#9;IsPlayingMusic = not IsPlayingMusic
&#9;if IsPlayingMusic then
&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.Hold)
&#9;else
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;&#9;end
&#9;end
&#9;Tool.Enabled = true
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and PlayerGui and PlayerGui.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent)
end

function Equipped(Mouse)
&#9;Equipped = true
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;PlayerGui = Player:FindFirstChild(&quot;PlayerGui&quot;)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;Tool.Grip = Grips.Equipped
&#9;ControlGui = Module.DisplayControls(Player, &quot;Keys H, J, K, and L change pitch Keys Z, X, C, V, B, N, M play notes Click to equip&quot;, Color3.new(217, 36, 60), {Position = UDim2.new(0, 0, 1, -300)})
&#9;Activated()
&#9;Spawn(function()
&#9;&#9;CurrentGui = Gui:Clone()
&#9;&#9;CurrentGui.Parent = PlayerGui
&#9;&#9;SetupNoteString()
&#9;end)
end

function Unequipped()
&#9;Equipped = false
&#9;ShiftDown = false
&#9;IsPlayingMusic = false
&#9;for i, v in pairs({ControlGui, CurrentGui}) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(Animations) do
&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;end
&#9;Tool.Grip = Grips.Unequipped
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
			<Item class="ScreenGui" referent="RBXA8FB313C89654BD981C14A59F8ADC495">
				<Properties>
					<string name="Name">Gui</string>
				</Properties>
				<Item class="Frame" referent="RBX929F5815296340DAB6A15A588B23A907">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">MainFrame</string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-250</XO>
							<YS>1</YS>
							<YO>-170</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>500</XO>
							<YS>0</YS>
							<YO>55</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBXEE2F057AC15B4AB79F0BDEABB2947396">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">8</token>
							<string name="Name">TemplateNote</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>10</XO>
								<YS>0.5</YS>
								<YO>-15</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">C</string>
							<Color3 name="TextColor3">4278190080</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX143ED9B3B51D497599A46F4DD03EAE5A">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294704908</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Marker</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>50</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>5</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBX41950180B93C449DA03E909DF2E98D07">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=116037822</url></Content>
							<Color3 name="ImageColor3">4294967295</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">WinText</string>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>-100</XO>
								<YS>0</YS>
								<YO>-115</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>200</XO>
								<YS>0</YS>
								<YO>115</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX1CA3C4AEBCB043D29101308FBD27E8ED">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-0.319687486</X>
					<Y>5.51647806</Y>
					<Z>-3.23784018</Z>
					<R00>-0.996492803</R00>
					<R01>0.00612872187</R01>
					<R02>-0.0834534466</R02>
					<R10>-4.65661287e-010</R10>
					<R11>0.997314155</R11>
					<R12>0.0732415766</R12>
					<R20>0.0836781859</R20>
					<R21>0.0729847029</R21>
					<R22>-0.993816435</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-0.19450736</X>
					<Y>5.40661573</Y>
					<Z>-1.74711609</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>