<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0.300000012</Y>
				<Z>0.300000012</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">Wizard Staff</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=128851111 </url></Content>
			<string name="ToolTip">A WIZARD IS NEVER LATE</string>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">199</int>
				<CoordinateFrame name="CFrame">
					<X>17.3860016</X>
					<Y>35.6300201</Y>
					<Z>-26.1170006</Z>
					<R00>0</R00>
					<R01>0.69571197</R01>
					<R02>-0.718320668</R02>
					<R10>0</R10>
					<R11>0.718320668</R11>
					<R12>0.69571197</R12>
					<R20>1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>6.57999563</Y>
					<Z>0.829999506</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=128847294</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.800000012</X>
						<Y>0.800000012</Y>
						<Z>0.800000012</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=128847490</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX3">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">MacheteScript</string>
					<ProtectedString name="Source">------------------------
--[[UTIL Functions]]--
------------------------
--Global functions used by all classes are wrapped in UTIL
--deal with it.
local UTIL = {}
 
function UTIL.Class(tableIn,template)
        tableIn = tableIn or {}
        local mt = {
        __metatable = UTIL.DeepCopy(template);
        __index     = UTIL.DeepCopy(template);
        }
        return setmetatable(tableIn, mt)
end
function UTIL.MakeClass(...)
        local arg = {...}
        assert(#arg&gt;0, &apos;ERROR: class needs 1 argument or more&apos;)
        local members = arg[1]
        for i=2,#arg,1 do
                if type(arg[i])==&apos;table&apos; then
                        for key,val in pairs(arg[i]) do
                                if not members[key] then
                                        members[key] = val
                                end
                        end
                end
        end
        local function New(init)
                return UTIL.Class(init or {},members)
        end
        local function Copy(obj, ...)
                local newobj = obj:New(unpack(arg))
                for n,v in pairs(obj) do newobj[n] = v end
                return newobj
        end
        members.New  = New
        members.Copy = Copy
        return mt
end
 
function UTIL.DeepCopy(orig)
    local orig_type = type(orig)
    local copy
    if orig_type == &apos;table&apos; then
        copy = {}
        for orig_key, orig_value in next, orig, nil do
            copy[UTIL.DeepCopy(orig_key)] = UTIL.DeepCopy(orig_value)
        end
        setmetatable(copy, UTIL.DeepCopy(getmetatable(orig)))
    else -- number, string, boolean, etc
        copy = orig
    end
    return copy
end

function UTIL.Instantiate(guiType)
&#9;return function(data)
&#9;&#9;local obj = Instance.new(guiType)
&#9;&#9;for k, v in pairs(data) do
&#9;&#9;&#9;if type(k) == &apos;number&apos; then
&#9;&#9;&#9;&#9;v.Parent = obj
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;obj[k] = v
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;return obj
&#9;end
end 

function UTIL.RetroRegister(func,...)
&#9;func()
&#9;for _,i in ipairs({...}) do
&#9;&#9;i:connect(func)
&#9;end
end

-- Waits for a new character to be added if the current one is invalid
-- (Ensures that you don&apos;t have the old dead character after a respawn)
function UTIL.WaitForValidCharacter(player)
&#9;local character = player.Character
&#9;if not character or not character.Parent or not character:FindFirstChild(&apos;Humanoid&apos;) or character.Humanoid.Health &lt;= 0 then
&#9;&#9;player.CharacterAdded:wait()
&#9;&#9;wait(0) --NOTE: Necessary for server scripts executing on the same event
&#9;&#9;character = player.Character
&#9;end
&#9;return character
end


-- Returns a character ancestor and its Humanoid, or nil
function UTIL.FindCharacterAncestor(subject)
&#9;if subject and subject ~= Workspace then
&#9;&#9;local humanoid = subject:FindFirstChild(&apos;Humanoid&apos;)
&#9;&#9;if humanoid then
&#9;&#9;&#9;return subject, humanoid
&#9;&#9;else
&#9;&#9;&#9;return UTIL.FindCharacterAncestor(subject.Parent)
&#9;&#9;end
&#9;end
&#9;return nil
end

UTIL.AssetURL = &apos;http://www.roblox.com/asset/?id=&apos;


UTIL.TouchEnabled = game:GetService(&quot;UserInputService&quot;).TouchEnabled 
do
&#9;local suceeded,_ =pcall(function() game.Workspace.CurrentCamera:GetPanSpeed() end)
&#9;UTIL.CanCheckPanSpeed = suceeded
end


local DebrisService = Game:GetService(&apos;Debris&apos;)
local DebugPrintOffset = 0
function UTIL.Dprint(...)
&#9;local line = &apos;&apos;
&#9;for _, segment in pairs({...}) do
&#9;&#9;line = line .. (line and &apos; &apos; or &apos;&apos;) .. tostring(segment)
&#9;end
&#9;local gui = Instance.new(&apos;ScreenGui&apos;)
&#9;local label = Instance.new(&apos;TextLabel&apos;)
&#9;label.Text = line
&#9;label.Size = UDim2.new(0.25, 0, 0.05, 0)
&#9;label.BackgroundTransparency = 0.5
&#9;label.Position = UDim2.new(0, 0, 0, DebugPrintOffset)
&#9;label.TextWrapped = true
&#9;label.Parent = gui
&#9;DebrisService:AddItem(gui, 30)
&#9;gui.Parent = script.Parent
&#9;DebugPrintOffset = (DebugPrintOffset &lt;= 600) and DebugPrintOffset + 30 or 0
end
--
--All Welding Related Utility functions should be put here
--
WeldUtil = {}


do


&#9;function WeldUtil.WeldBetween(a, b)
&#9;&#9;local weld = Instance.new(&quot;Weld&quot;)
&#9;&#9;weld.Part0 = a
&#9;&#9;weld.Part1 = b
&#9;&#9;weld.C0 = CFrame.new()
&#9;&#9;weld.C1 = b.CFrame:inverse() * a.CFrame

&#9;&#9;weld.Parent = a
&#9;&#9;return weld
&#9;end
&#9;
&#9;function WeldUtil:PermaWeld(weld)
&#9;&#9;local OriginalParent = weld.Parent
&#9;&#9;weld.Changed:connect(function()
&#9;&#9;&#9;Delay(0,function() weld.Parent = OriginalParent end)
&#9;&#9;end)
&#9;end

end

local InternalEvent =
{
&#9;Listeners = nil,
}
do
&#9;UTIL.MakeClass(InternalEvent)
&#9;function InternalEvent:Connect(func)
&#9;&#9;if not self.Listeners then self.Listeners = {} end
&#9;&#9;table.insert(self.Listeners,func)
&#9;end
&#9;function InternalEvent:Fire(...)
&#9;&#9;if not self.Listeners then return end
&#9;&#9;local args = {...}
&#9;&#9;for _,i in ipairs(self.Listeners) do
&#9;&#9;&#9;Spawn(function() i(unpack(args)) end)
&#9;&#9;end
&#9;end
end

--[[Sword Part Class]]--
&#9;
local SwordPart =
{
&#9;Damage = 20,
&#9;AttackTime = 1,
&#9;CoolDown = 2,
&#9;
&#9;LastSwing = 0,
&#9;LastHit = 0,

&#9;Part= nil,
&#9;Owner = nil,--player object that owns this sword
&#9;
&#9;OnHit = nil,
&#9;OnHitHumanoid = nil,
&#9;OnAttackReady = nil,
&#9;OnAttack = nil,
&#9;
&#9;
&#9;SwingSound = nil,
&#9;HitSound = nil,
&#9;SwingAnimation = nil, --animation track!
&#9;
&#9;ActiveConnections = {},
&#9;
}
do
&#9;UTIL.MakeClass(SwordPart)
&#9;function SwordPart.New(npart,nowner)
&#9;&#9;local init= UTIL.DeepCopy(SwordPart)
&#9;&#9;init.Part= npart
&#9;&#9;init.Owner = nowner
&#9;&#9;table.insert(init.ActiveConnections,init.Part.Touched:connect(function(hit) init:SwordTouch(hit) end))
&#9;&#9;
&#9;&#9;init.OnHit = InternalEvent.New()
&#9;&#9;init.OnHitHumanoid = InternalEvent.New()
&#9;&#9;init.OnAttackReady = InternalEvent.New()
&#9;&#9;init.OnAttack = InternalEvent.New()
&#9;&#9;
&#9;&#9;return init
&#9;end
&#9;
&#9;function SwordPart:SwordTouch(hit)
&#9;&#9;if tick()-self.LastSwing &gt;self.AttackTime or tick()-self.LastHit&lt;self.AttackTime then return end
&#9;&#9;self.OnHit:Fire(hit)
&#9;&#9;local character,humanoid = UTIL.FindCharacterAncestor(hit)
&#9;&#9;if character and character ~= self.Owner.Character then
&#9;&#9;&#9;humanoid:TakeDamage(self.Damage)
&#9;&#9;&#9;self.OnHitHumanoid:Fire(humanoid,hit)
&#9;&#9;&#9;self.LastHit = tick()
&#9;&#9;&#9;if self.HitSound then
&#9;&#9;&#9;&#9;self.HitSound:Play()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;
&#9;end
&#9;
&#9;function SwordPart:DoSwing()
&#9;&#9;if tick()-self.LastSwing&lt;self.AttackTime+self.CoolDown then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;
&#9;&#9;if self.SwingAnimation then
&#9;&#9;&#9;self.SwingAnimation:Play()
&#9;&#9;end
&#9;&#9;if self.SwingSound then
&#9;&#9;&#9;self.SwingSound:Play()
&#9;&#9;end
&#9;&#9;self.LastSwing = tick()
&#9;&#9;self.OnAttack:Fire()
&#9;end
&#9;
&#9;function SwordPart:Destroy()
&#9;&#9;for _,i in pairs(self.ActiveConnections) do
&#9;&#9;&#9;i:disconnect()
&#9;&#9;end
&#9;end
end
do
&#9;local Handle = script.Parent
&#9;local Tool = Handle.Parent
&#9;
&#9;local Player = game.Players.LocalPlayer
&#9;local Character = UTIL.WaitForValidCharacter(Player)
&#9;local SwingAni = UTIL.Instantiate&quot;Animation&quot;
&#9;{AnimationId = &quot;http://www.roblox.com/Asset?ID=89289879&quot;}
&#9;
&#9;local HitSound = Handle:WaitForChild(&apos;Hit&apos;)
&#9;local SwingSound = Handle:WaitForChild(&apos;Swing&apos;)
&#9;
&#9;local ShockScript = script:WaitForChild(&apos;ShockScript&apos;)
&#9;
&#9;local SwingAniTrack
&#9;
&#9;local Sword
&#9;
&#9;local function DoEffect(pstart,target,humanoid)
&#9;&#9;local stime = tick()
&#9;&#9;local length = 2
&#9;&#9;local rootPart = UTIL.Instantiate&apos;Part&apos;
&#9;&#9;{
&#9;&#9;&#9;FormFactor = &apos;Custom&apos;,
&#9;&#9;&#9;Size = Vector3.new(1,1,1),
&#9;&#9;&#9;Transparency = .4,
&#9;&#9;&#9;Anchored = false,
&#9;&#9;&#9;Parent = Character,
&#9;&#9;&#9;CFrame = CFrame.new(pstart),
&#9;&#9;&#9;BrickColor = BrickColor.new(&apos;Deep blue&apos;),
&#9;&#9;&#9;UTIL.Instantiate&apos;SpecialMesh&apos;
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;MeshId=&apos;http://www.roblox.com/Asset/?id=9756362&apos;,
&#9;&#9;&#9;&#9;Scale = Vector3.new(.75,1.5,.75)
&#9;&#9;&#9;},
&#9;&#9;&#9;UTIL.Instantiate&apos;BodyGyro&apos;{},
&#9;&#9;&#9;UTIL.Instantiate&apos;BodyAngularVelocity&apos;
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;angularvelocity = Vector3.new(0,4,0),
&#9;&#9;&#9;},
&#9;&#9;&#9;UTIL.Instantiate&apos;PointLight&apos;
&#9;&#9;&#9;{}
&#9;&#9;}
&#9;&#9;local Sound = UTIL.Instantiate&apos;Sound&apos;
&#9;&#9;{
&#9;&#9;&#9;SoundId = &apos;http://www.roblox.com/asset/?id=128911690&apos;,
&#9;&#9;&#9;Parent = rootPart,
&#9;&#9;}
&#9;&#9;local bodyPos = UTIL.Instantiate&apos;BodyPosition&apos;
&#9;&#9;{
&#9;&#9;&#9;maxForce = Vector3.new(math.huge,math.huge,math.huge),
&#9;&#9;&#9;position = pstart,
&#9;&#9;&#9;
&#9;&#9;}
&#9;&#9;bodyPos.Parent = rootPart
&#9;&#9;for i=1,4,1 do
&#9;&#9;&#9;local satalight = UTIL.Instantiate&apos;Part&apos;
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;FormFactor = &apos;Custom&apos;,
&#9;&#9;&#9;&#9;CanCollide = false,
&#9;&#9;&#9;&#9;CFrame = CFrame.new(pstart),
&#9;&#9;&#9;&#9;Transparency = .4,
&#9;&#9;&#9;&#9;Anchored = false,
&#9;&#9;&#9;&#9;BrickColor = BrickColor.new(&apos;Bright blue&apos;),
&#9;&#9;&#9;&#9;UTIL.Instantiate&apos;SpecialMesh&apos;
&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;MeshId=&apos;http://www.roblox.com/Asset/?id=9756362&apos;,
&#9;&#9;&#9;&#9;&#9;Scale = Vector3.new(.35,.75,.35)
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;}
&#9;&#9;&#9;satalight.Size = Vector3.new(.2,.2,.2)
&#9;&#9;&#9;local weld = UTIL.Instantiate&apos;Weld&apos;
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;Part0 =rootPart,
&#9;&#9;&#9;&#9;Part1 = satalight,
&#9;&#9;&#9;}
&#9;&#9;&#9;weld.C0 = CFrame.Angles(0,(math.pi*2/(4))*(i-1),0)
&#9;&#9;&#9;weld.C1=CFrame.new(1,0,0)--math.sin((math.pi*2)/i),0,math.cos((math.pi*2)/i)
&#9;&#9;&#9;weld.Parent = rootPart
&#9;&#9;&#9;satalight.Parent = rootPart
&#9;&#9;end&#9;
&#9;&#9;while tick()-stime&lt;length do
&#9;&#9;&#9;local tloc = ((target.CFrame.p-pstart)*((tick()-stime)/length))+pstart
&#9;&#9;&#9;bodyPos.position = Vector3.new(tloc.x,tloc.y+(math.sin(tick()*5)*2),tloc.z)
&#9;&#9;&#9;wait()
&#9;&#9;end
&#9;&#9;if not game.Players:GetPlayerFromCharacter(target.Parent) then
&#9;&#9;&#9;humanoid:TakeDamage(20)
&#9;&#9;else
&#9;&#9;&#9;if not target.Parent:FindFirstChild(&apos;ShockScript&apos;) then
&#9;&#9;&#9;&#9;local tscript = ShockScript:clone()
&#9;&#9;&#9;&#9;tscript.Parent = target.Parent
&#9;&#9;&#9;&#9;tscript.Disabled = false
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;Sound:Play()
&#9;&#9;wait(2)
&#9;&#9;rootPart.Parent = nil
&#9;end
&#9;
&#9;Tool.Equipped:connect(function(mouse)
&#9;&#9;Sword = SwordPart.New(Handle,Player)
&#9;&#9;Sword.Damage = 10
&#9;&#9;Sword.HitSound = HitSound
&#9;&#9;Sword.SwingSound = SwingSound
&#9;&#9;Character = UTIL.WaitForValidCharacter(Player)
&#9;&#9;local Humanoid = Character:FindFirstChild(&apos;Humanoid&apos;)

&#9;&#9;SwingAniTrack = Humanoid:LoadAnimation(SwingAni)
&#9;&#9;Sword.SwingAnimation = SwingAniTrack
&#9;&#9;
&#9;&#9;Sword.OnAttack:Connect(function()
&#9;&#9;&#9;if not mouse.Target then return end
&#9;&#9;&#9;local otherChar = UTIL.FindCharacterAncestor(mouse.Target)
&#9;&#9;&#9;if not otherChar then return end
&#9;&#9;&#9;local otherHumanoid = otherChar:FindFirstChild(&apos;Humanoid&apos;)
&#9;&#9;&#9;if not otherHumanoid then return end
&#9;&#9;&#9;local torso = otherChar:FindFirstChild(&apos;Torso&apos;)
&#9;&#9;&#9;if not torso or not Handle then return end
&#9;&#9;&#9;DoEffect(Handle.CFrame.p,torso,otherHumanoid)
&#9;&#9;&#9;
&#9;&#9;end)
&#9;&#9;
&#9;&#9;mouse.Button1Down:connect(function()
&#9;&#9;&#9;Sword:DoSwing()
&#9;&#9;end)
&#9;end)
&#9;Tool.Unequipped:connect(function()
&#9;&#9;Sword:Destroy()
&#9;end)

end
</ProtectedString>
				</Properties>
				<Item class="LocalScript" referent="RBX4">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ShockScript</string>
						<ProtectedString name="Source">local Character = script.Parent
local Humanoid = Character:WaitForChild(&apos;Humanoid&apos;)
local Torso = Character:WaitForChild(&apos;Torso&apos;)

local Sparkles = Instance.new(&apos;Sparkles&apos;)
Sparkles.Parent = Torso

--[[local controllerService = game:GetService(&quot;ControllerService&quot;)
local controller = controllerService:GetChildren()[1]
controller.Parent = nil]]

Humanoid.WalkSpeed=0

Humanoid.Changed:connect(function()
&#9;if Humanoid.Jump and Humanoid.WalkSpeed==0 then
&#9;&#9;Humanoid.Jump=false
&#9;end
end)

for i=1,10,1 do
&#9;Humanoid:TakeDamage(5)
&#9;wait(1)
end

--controller.Parent = controllerService

Humanoid.WalkSpeed=16


Sparkles.Parent = nil

script.Parent = nil

</ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="Sound" referent="RBX5">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Hit</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/Asset?ID=123252378</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX6">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Swing</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/Asset?ID=119888724</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBX7">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=49763871</url></Content>
				<string name="Name">ShieldWalk</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX8">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=49815113</url></Content>
				<string name="Name">QuickSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX9">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=49907410</url></Content>
				<string name="Name">ShieldBash</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX10">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>17.7945118</X>
					<Y>37.5832367</Y>
					<Z>-22.1776047</Z>
					<R00>0.999985456</R00>
					<R01>-0.00191335462</R01>
					<R02>0.00504302792</R02>
					<R10>-1.16415308e-010</R10>
					<R11>0.934967875</R11>
					<R12>0.354732394</R12>
					<R20>-0.00539379753</R20>
					<R21>-0.354727238</R21>
					<R22>0.934954286</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>17.7844257</X>
					<Y>36.8737717</Y>
					<Z>-24.047514</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>