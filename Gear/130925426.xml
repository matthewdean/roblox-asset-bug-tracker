<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>1.5</X>
				<Y>0.800000012</Y>
				<Z>-1.92499995</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>0.997256815</R11>
				<R12>-0.074019067</R12>
				<R20>0</R20>
				<R21>0.074019067</R21>
				<R22>0.997256815</R22>
			</CoordinateFrame>
			<string name="Name">ToneCape</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=124547756</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Script" referent="RBX1">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">SoundManager</string>
				<ProtectedString name="Source">local Tool = script.Parent
local Handle = Tool:WaitForChild(&quot;Handle&quot;)

local Sounds = {
&#9;Laser = {
&#9;&#9;Sound = Handle:WaitForChild(&quot;LaserSound&quot;),
&#9;&#9;Playing = 0
&#9;},
&#9;SpeedBoost = {
&#9;&#9;Sound = Handle:WaitForChild(&quot;SpeedBoostSound&quot;),
&#9;&#9;Playing = 0
&#9;}
}

for i, v in pairs(Sounds) do
&#9;v.Sound.ChildAdded:connect(function(Child)
&#9;&#9;if Child:IsA(&quot;StringValue&quot;) then
&#9;&#9;&#9;if Child.Name == &quot;Play&quot; then
&#9;&#9;&#9;&#9;v.Sound:Play()
&#9;&#9;&#9;&#9;v.Playing = v.Playing + 1
&#9;&#9;&#9;elseif Child.Name == &quot;Stop&quot; then
&#9;&#9;&#9;&#9;v.Playing = v.Playing - 1
&#9;&#9;&#9;&#9;if v.Playing &lt;= 0 then
&#9;&#9;&#9;&#9;&#9;v.Sound:Stop()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;Delay(0, function()
&#9;&#9;&#9;if Child and Child.Parent then
&#9;&#9;&#9;&#9;Child:Destroy()
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end)
end</ProtectedString>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX2">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">21</int>
				<CoordinateFrame name="CFrame">
					<X>-0.400000006</X>
					<Y>1.9000001</Y>
					<Z>0</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>-0</R02>
					<R10>-0</R10>
					<R11>1</R11>
					<R12>-0</R12>
					<R20>-0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1.29999995</X>
					<Y>1.29999995</Y>
					<Z>2.4000001</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX3">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=114046169</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.29999995</X>
						<Y>1.29999995</Y>
						<Z>1.29999995</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=124503221</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX4">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">LaserSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=1369158</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX5">
				<Properties>
					<bool name="Looped">true</bool>
					<string name="Name">SpeedBoostSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=31760113</url></Content>
					<float name="Volume">0.400000006</float>
				</Properties>
			</Item>
			<Item class="Configuration" referent="RBX6">
				<Properties>
					<string name="Name">ObjectsBin</string>
				</Properties>
				<Item class="SpecialMesh" referent="RBX7">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=4770583</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">SkullMesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>3.20000005</X>
							<Y>3.20000005</Y>
							<Z>3.20000005</Z>
						</Vector3>
						<Content name="TextureId"><url>http://www.roblox.com/asset/?id=4770560</url></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX8">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=90828653</url></Content>
						<string name="Name">FlyAnimation</string>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX9">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">local Tool = script.Parent
local Handle = Tool:WaitForChild(&quot;Handle&quot;)

local Sounds = {
&#9;Laser = Handle:WaitForChild(&quot;LaserSound&quot;),
&#9;SpeedBoost = Handle:WaitForChild(&quot;SpeedBoostSound&quot;)
}

local ObjectsBin = Handle:WaitForChild(&quot;ObjectsBin&quot;)

local Anim = ObjectsBin:WaitForChild(&quot;FlyAnimation&quot;)
local SkullMesh = ObjectsBin:WaitForChild(&quot;SkullMesh&quot;)

local Speed = {
&#9;CurrentSpeed = 2,
&#9;MaxSpeed = 50
}

local Speeds = {
&#9;NormalSpeed = Speed.MaxSpeed,
&#9;SpeedBoost = (Speed.MaxSpeed + 25)
}

local Laser = {
&#9;ReloadTime = 3,
&#9;Damage = 15,
&#9;Duration = 0.5,
&#9;MaxDistance = 100
}

local SpeedBoost = {
&#9;Debounce = false,
&#9;Duration = 15,
&#9;ReloadTime = 10,
}

local Jumping = {
&#9;JumpTick = 0,
&#9;Jumps = 0,
&#9;JumpTime = 0.25,
&#9;JumpsRequired = 2
}

local Controls = {
&#9;Forward = {
&#9;&#9;Number = 0,
&#9;&#9;Numbers = {
&#9;&#9;&#9;On = -1,
&#9;&#9;&#9;Off = 0
&#9;&#9;},
&#9;&#9;Keys = {&quot;W&quot;, 17}
&#9;},
&#9;Backward = {
&#9;&#9;Number = 0,
&#9;&#9;Numbers = {
&#9;&#9;&#9;On = 1,
&#9;&#9;&#9;Off = 0
&#9;&#9;},
&#9;&#9;Keys = {&quot;S&quot;, 18}
&#9;},
&#9;Left = {
&#9;&#9;Number = 0,
&#9;&#9;Numbers = {
&#9;&#9;&#9;On = -1,
&#9;&#9;&#9;Off = 0
&#9;&#9;},
&#9;&#9;Keys = {&quot;A&quot;, 20}
&#9;},
&#9;Right = {
&#9;&#9;Number = 0,
&#9;&#9;Numbers = {
&#9;&#9;&#9;On = 1,
&#9;&#9;&#9;Off = 0
&#9;&#9;},
&#9;&#9;Keys = {&quot;D&quot;, 19}
&#9;}
}

local FlyRate = (1 / 30)

local Debounce = Instance.new(&quot;BoolValue&quot;)
Debounce.Value = false

local Debris = game:GetService(&quot;Debris&quot;)

local Fires = {}
local NeckChangedConnections = {}
local IgnoreHeadChange = false
local Flying = false
local FlyAnim
local DebounceChanged
local Cape

local Player
local Humanoid
local Head
local HumanoidDied
local Torso
local Neck
local NeckOrigin

function DisconnectConnections(Connections)
&#9;for i, v in pairs(Connections) do
&#9;&#9;if v and string.lower(tostring(v)) == string.lower(&quot;Connection&quot;) and string.lower(type(v)) == string.lower(&quot;Userdata&quot;) and v.connected then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
end

function RemoveFlyStuff()
&#9;
&#9;if Player and Torso then
&#9;&#9;for i, v in pairs(Torso:GetChildren()) do
&#9;&#9;&#9;if v and v.Name == &quot;FlightGyro&quot; or v.Name == &quot;FlightVelocity&quot; then
&#9;&#9;&#9;&#9;v:Destroy()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;
&#9;if FlyAnim then
&#9;&#9;FlyAnim:Stop()
&#9;end
&#9;
end

function Fly()
&#9;
&#9;if Flying and Player and Torso and Humanoid and Humanoid.Health &gt; 0 then
&#9;&#9;
&#9;&#9;local Gyro = Instance.new(&quot;BodyGyro&quot;)
&#9;&#9;Gyro.Name = &quot;FlightGyro&quot;
&#9;&#9;Gyro.P = (10 ^ 6)
&#9;&#9;Gyro.maxTorque = Vector3.new(Gyro.P, Gyro.P, Gyro.P)
&#9;&#9;Gyro.cframe = Torso.CFrame
&#9;&#9;Gyro.Parent = Torso
&#9;&#9;
&#9;&#9;local Velocity = Instance.new(&quot;BodyVelocity&quot;)
&#9;&#9;Velocity.Name = &quot;FlightVelocity&quot;
&#9;&#9;Velocity.velocity = Vector3.new(0, 0, 0)
&#9;&#9;Velocity.P = (10 ^ 4)
&#9;&#9;Velocity.maxForce = Vector3.new(1, 1, 1) * (10 ^ 6)
&#9;&#9;Velocity.Parent = Torso
&#9;&#9;
&#9;&#9;if FlyAnim then
&#9;&#9;&#9;FlyAnim:Stop()
&#9;&#9;end
&#9;&#9;
&#9;&#9;FlyAnim = Humanoid:LoadAnimation(Anim)
&#9;&#9;FlyAnim:Play()
&#9;&#9;
&#9;&#9;local Momentum = Vector3.new(0, 0, 0)
&#9;&#9;local LastMomentum = Vector3.new(0, 0, 0)
&#9;&#9;local LastTilt = 0
&#9;&#9;local CurrentSpeed = Speed.MaxSpeed
&#9;&#9;local Inertia = (1 - (Speed.CurrentSpeed / CurrentSpeed))
&#9;&#9;
&#9;&#9;while Flying and Torso and Humanoid and Humanoid.Health &gt; 0 do
&#9;&#9;&#9;
&#9;&#9;&#9;if CurrentSpeed ~= Speed.MaxSpeed then
&#9;&#9;&#9;&#9;CurrentSpeed = Speed.MaxSpeed
&#9;&#9;&#9;&#9;Inertia = (1 - (Speed.CurrentSpeed / CurrentSpeed))
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;local Direction = game:GetService(&quot;Workspace&quot;).CurrentCamera.CoordinateFrame:vectorToWorldSpace(Vector3.new(Controls.Left.Number + Controls.Right.Number, math.abs(Controls.Forward.Number) * 0.2, Controls.Forward.Number + Controls.Backward.Number))
&#9;&#9;&#9;local Movement = Direction * Speed.CurrentSpeed
&#9;&#9;&#9;
&#9;&#9;&#9;Momentum = (Momentum * Inertia) + Movement
&#9;&#9;&#9;
&#9;&#9;&#9;local TotalMomentum = Momentum.magnitude
&#9;&#9;&#9;
&#9;&#9;&#9;if TotalMomentum &gt; CurrentSpeed then
&#9;&#9;&#9;&#9;TotalMomentum = CurrentSpeed
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;local Tilt = ((Momentum * Vector3.new(1, 0, 1)).unit:Cross(((LastMomentum * Vector3.new(1, 0, 1)).unit))).y
&#9;&#9;&#9;local StringTilt = tostring(Tilt)
&#9;&#9;&#9;
&#9;&#9;&#9;if StringTilt == &quot;-1.#IND&quot; or StringTilt == &quot;1.#IND&quot; or Tilt == math.huge or Tilt == -math.huge or StringTilt == tostring(0 / 0) then
&#9;&#9;&#9;&#9;Tilt = 0
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;local AbsoluteTilt = math.abs(Tilt)
&#9;&#9;&#9;
&#9;&#9;&#9;if AbsoluteTilt &gt; 0.06 or AbsoluteTilt &lt; 0.0001 then
&#9;&#9;&#9;&#9;if math.abs(LastTilt) &gt; 0.0001 then
&#9;&#9;&#9;&#9;&#9;Tilt = (LastTilt * 0.9)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Tilt = 0
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Tilt = ((LastTilt * 0.77) + (Tilt * 0.25))
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;LastTilt = Tilt

&#9;&#9;&#9;if TotalMomentum &lt; 0.5 then
&#9;&#9;&#9;&#9;Momentum = Vector3.new(0, 0, 0)
&#9;&#9;&#9;&#9;TotalMomentum = 0
&#9;&#9;&#9;&#9;Gyro.cframe = game:GetService(&quot;Workspace&quot;).CurrentCamera.CoordinateFrame
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Gyro.cframe = CFrame.new(Vector3.new(0, 0, 0), Momentum) * CFrame.Angles(0, 0, (Tilt * -20)) * CFrame.Angles((math.pi * -0.5 * (TotalMomentum / CurrentSpeed)), 0, 0)
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;Velocity.velocity = Momentum
&#9;&#9;&#9;LastMomentum = Momentum
&#9;&#9;&#9;Wait(FlyRate)
&#9;&#9;&#9;
&#9;&#9;end
&#9;&#9;
&#9;&#9;RemoveFlyStuff()
&#9;&#9;
&#9;end
end

function CastLaser(StartPosition, Direction, MaxDistance, Ignore)
&#9;
&#9;local function RayCast(Pos, Dir, Max, IgnoreList)
&#9;&#9;return game:GetService(&quot;Workspace&quot;):FindPartOnRayWithIgnoreList(Ray.new(Pos, Dir.unit * (Max or 999.999)), IgnoreList) 
&#9;end
&#9;&#9;
&#9;local Hit, EndPosition = RayCast(StartPosition, Direction, MaxDistance, Ignore)
&#9;local Distance = (StartPosition - EndPosition).magnitude
&#9;local LaserPart = Instance.new(&quot;Part&quot;)
&#9;LaserPart.Name = &quot;Laser&quot;
&#9;LaserPart.BrickColor = BrickColor.new(&quot;Bright red&quot;)
&#9;LaserPart.Transparency = 0.5
&#9;LaserPart.FormFactor = &quot;Custom&quot; 
&#9;LaserPart.CanCollide = false
&#9;LaserPart.Anchored = true
&#9;LaserPart.Locked = true
&#9;LaserPart.Size = Vector3.new(0.2, 0.2, Distance)
&#9;LaserPart.CFrame = CFrame.new(StartPosition, EndPosition) * CFrame.new(0, 0, (-Distance / 2))
&#9;Debris:AddItem(LaserPart, Laser.Duration)
&#9;LaserPart.Parent = Player
&#9;
&#9;return Hit, EndPosition
&#9;
end

function SetMouseIcon(Mouse)
&#9;Mouse.Icon = ((not Debounce.Value and &quot;rbxasset://textures\\GunCursor.png&quot;) or (Debounce.Value and &quot;rbxasset://textures\\GunWaitCursor.png&quot;))
end

function ResetStuff()
&#9;
&#9;DisconnectConnections({HumanoidDied})
&#9;
&#9;if Flying then
&#9;&#9;RemoveFlyStuff()
&#9;end
&#9;
&#9;for i, v in pairs(Fires) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
&#9;
&#9;for i, v in pairs(Controls) do
&#9;&#9;v.Number = 0
&#9;end
&#9;
&#9;Speed.MaxSpeed = Speeds.NormalSpeed
&#9;Flying = false
&#9;Neck.C1 = NeckOrigin
&#9;
&#9;if Cape and Cape.Parent then
&#9;&#9;Cape:Destroy()
&#9;&#9;Cape = nil
&#9;end

&#9;local StopSound = Instance.new(&quot;StringValue&quot;)
&#9;StopSound.Name = &quot;Stop&quot;
&#9;StopSound.Parent = Sounds.SpeedBoost
&#9;
&#9;DisconnectConnections({DebounceChanged})
&#9;Handle.Transparency = 0
&#9;
end

Tool.Equipped:connect(function(Mouse)

&#9;SetMouseIcon(Mouse)
&#9;
&#9;Player = Tool.Parent
&#9;Humanoid = Player:WaitForChild(&quot;Humanoid&quot;)
&#9;Head = Player:WaitForChild(&quot;Head&quot;)
&#9;Torso = Player:WaitForChild(&quot;Torso&quot;)
&#9;Neck = Torso:WaitForChild(&quot;Neck&quot;)
&#9;NeckOrigin = Neck.C1
&#9;
&#9;HumanoidDied = Humanoid.Died:connect(function()
&#9;&#9;ResetStuff()
&#9;&#9;Mouse:Destroy()
&#9;&#9;Mouse = nil
&#9;end)
&#9;
&#9;Handle.Transparency = 1
&#9;
&#9;if not Cape or not Cape.Parent then
&#9;&#9;Cape = Handle:Clone()
&#9;&#9;Cape.Name = &quot;Cape&quot;
&#9;&#9;Cape.Transparency = 0
&#9;&#9;local Weld = Instance.new(&quot;Weld&quot;)
&#9;&#9;Weld.Name = &quot;CapeWeld&quot;
&#9;&#9;Weld.Part0 = Torso
&#9;&#9;Weld.Part1 = Cape
&#9;&#9;Weld.C0 = CFrame.Angles(-0.07, 0.01, 0) + Vector3.new(0, -0.15, 0.5)
&#9;&#9;Weld.Parent = Cape
&#9;&#9;Cape.Parent = Tool.Parent
&#9;end
&#9;
&#9;DebounceChangedConnection = Debounce.Changed:connect(function()
&#9;&#9;SetMouseIcon(Mouse)
&#9;end)
&#9;
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;if Humanoid.Health &gt; 0 then
&#9;&#9;&#9;IgnoreHeadChange = true
&#9;&#9;&#9;local LastHeadRotation = Neck.C1
&#9;&#9;&#9;Neck.C1 = NeckOrigin
&#9;&#9;&#9;local HeadOrigin = Head:Clone()
&#9;&#9;&#9;local Base = Neck.Part0.Position + (Neck.C0.p * 1)
&#9;&#9;&#9;local YVector = (Mouse.Hit.p + Mouse.Hit.lookVector)
&#9;&#9;&#9;local Set = CFrame.new(Base, YVector)
&#9;&#9;&#9;local Offset = Set:toObjectSpace(Torso.CFrame * Neck.C0)
&#9;&#9;&#9;local PosX, PosY, PosZ, R00, R01, R02, R10, R11, R12, R20, R21, R22 = Offset:components()
&#9;&#9;&#9;Neck.C1 = CFrame.new(NeckOrigin.p.x, NeckOrigin.p.y, NeckOrigin.p.z, R00, R01, R02, R10, R11, R12, R20, R21, R22)
&#9;&#9;&#9;local HeadClone = Head:Clone()
&#9;&#9;&#9;local HeadCloneY = HeadClone:Clone()
&#9;&#9;&#9;HeadCloneY.CFrame = HeadCloneY.CFrame * CFrame.Angles(math.rad(90), 0, 0)&#9;&#9;
&#9;&#9;&#9;HeadCloneY.CFrame = HeadCloneY.CFrame + HeadCloneY.CFrame.lookVector * 0.2
&#9;&#9;&#9;local HeadCloneZ = HeadCloneY:Clone()
&#9;&#9;&#9;HeadCloneZ.CFrame = HeadCloneZ.CFrame + HeadClone.CFrame.lookVector * (HeadClone.Size.z / 2)
&#9;&#9;&#9;local HeadRotationCheck = false
&#9;&#9;&#9;if math.abs((Head.Position - Torso.Position).magnitude) &gt;= 1.25 then
&#9;&#9;&#9;&#9;HeadRotationCheck = true
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Neck.C1 = LastHeadRotation
&#9;&#9;&#9;end
&#9;&#9;&#9;IgnoreHeadChange = false
&#9;&#9;&#9;if HeadRotationCheck and not Debounce.Value and (math.acos((Mouse.Hit.p - HeadOrigin.Position).unit:Dot(HeadOrigin.CFrame.lookVector)) &lt;= (math.pi / 2)) then
&#9;&#9;&#9;&#9;DisconnectConnections(NeckChangedConnections)
&#9;&#9;&#9;&#9;NeckChangedConnections = {}
&#9;&#9;&#9;&#9;Debounce.Value = true
&#9;&#9;&#9;&#9;local PlaySound = Instance.new(&quot;StringValue&quot;)
&#9;&#9;&#9;&#9;PlaySound.Name = &quot;Play&quot;
&#9;&#9;&#9;&#9;PlaySound.Parent = Sounds.Laser
&#9;&#9;&#9;&#9;for i = 1, 2 do
&#9;&#9;&#9;&#9;&#9;local HeadCloneX = HeadCloneZ:Clone()
&#9;&#9;&#9;&#9;&#9;HeadCloneX.CFrame = HeadCloneZ.CFrame * CFrame.Angles(0, math.rad(((i == 1 and 90) or (i == 2 and -90))), 0)
&#9;&#9;&#9;&#9;&#9;HeadCloneX.CFrame = HeadCloneX.CFrame + HeadCloneX.CFrame.lookVector * 0.2
&#9;&#9;&#9;&#9;&#9;local Hit, Position = CastLaser(HeadCloneX.Position, (Mouse.Hit.p - HeadCloneX.Position), Laser.MaxDistance, {Player})
&#9;&#9;&#9;&#9;&#9;Hit = (((Hit and Hit.Parent and (Hit.Parent:IsA(&quot;Hat&quot;) or Hit.Parent:IsA(&quot;Tool&quot;))) and Hit.Parent) or Hit)
&#9;&#9;&#9;&#9;&#9;if Hit and Hit.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;for i, v in pairs(Hit.Parent:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if v:IsA(&quot;Humanoid&quot;) and v.Health &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local CreatorTag = Instance.new(&quot;ObjectValue&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CreatorTag.Value = game:GetService(&quot;Players&quot;):GetPlayerFromCharacter(Player)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CreatorTag.Name = &quot;creator&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Debris:AddItem(CreatorTag, 1)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CreatorTag.Parent = v
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v:TakeDamage(Laser.Damage)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if Hit and Hit.Parent and v and v.Health &lt;= 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for ii, vv in pairs(Hit.Parent:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if vv:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if vv.Name ~= &quot;Head&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for iii = 1, 2 do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Ashes = Instance.new(&quot;Part&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Ashes.Name = &quot;Ashes&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Ashes.Locked = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Ashes.CanCollide = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Ashes.Anchored = false
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Ashes.FormFactor = Enum.FormFactor.Custom
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Ashes.TopSurface = Enum.SurfaceType.Smooth
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Ashes.BottomSurface = Enum.SurfaceType.Smooth
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Ashes.Size = Vector3.new(1, 0.4, 1)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Ashes.Material = Enum.Material.Concrete
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Ashes.BrickColor = BrickColor.new(&quot;Really black&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;game:GetService(&quot;Debris&quot;):AddItem(Ashes, 5)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Ashes.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Ashes.CFrame = vv.CFrame + Vector3.new(0, (iii * Ashes.Size.y), 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local HeadClone = vv:Clone()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for iii, vvv in pairs(HeadClone:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;vvv:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Skull = SkullMesh:Clone()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Skull.Parent = HeadClone
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;game:GetService(&quot;Debris&quot;):AddItem(HeadClone, 5)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;HeadClone.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;vv:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;local NeckChanged
&#9;&#9;&#9;&#9;NeckChanged = Neck.Changed:connect(function(Property)
&#9;&#9;&#9;&#9;&#9;if Property == &quot;C0&quot; or Property == &quot;C1&quot; and not IgnoreHeadChange then
&#9;&#9;&#9;&#9;&#9;&#9;DisconnectConnections({NeckChanged})
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;table.insert(NeckChangedConnections, NeckChanged)
&#9;&#9;&#9;&#9;Delay((Laser.Duration * 2), function()
&#9;&#9;&#9;&#9;&#9;local StopSound = Instance.new(&quot;StringValue&quot;)
&#9;&#9;&#9;&#9;&#9;StopSound.Name = &quot;Stop&quot;
&#9;&#9;&#9;&#9;&#9;StopSound.Parent = Sounds.Laser
&#9;&#9;&#9;&#9;&#9;if NeckChanged.connected then
&#9;&#9;&#9;&#9;&#9;&#9;Neck.C1 = NeckOrigin
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;Wait(Laser.ReloadTime)
&#9;&#9;&#9;&#9;Debounce.Value = false
&#9;&#9;&#9;&#9;SetMouseIcon(Mouse)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;IgnoreHeadChange = true
&#9;&#9;&#9;&#9;Neck.C1 = LastHeadRotation
&#9;&#9;&#9;&#9;IgnoreHeadChange = false
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;if Humanoid.Health &gt; 0 then
&#9;&#9;&#9;local Key = string.lower(Key)
&#9;&#9;&#9;local ByteKey = string.byte(Key)
&#9;&#9;&#9;if ByteKey == string.byte(&quot; &quot;) then
&#9;&#9;&#9;&#9;if Flying then
&#9;&#9;&#9;&#9;&#9;Flying = false
&#9;&#9;&#9;&#9;&#9;RemoveFlyStuff()
&#9;&#9;&#9;&#9;elseif not Flying then
&#9;&#9;&#9;&#9;&#9;if (tick() - Jumping.JumpTick) &lt;= Jumping.JumpTime or Jumping.JumpTick == 0 then
&#9;&#9;&#9;&#9;&#9;&#9;Jumping.JumpTick = tick()
&#9;&#9;&#9;&#9;&#9;&#9;Jumping.Jumps = Jumping.Jumps + 1
&#9;&#9;&#9;&#9;&#9;&#9;if Jumping.Jumps &gt;= Jumping.JumpsRequired then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Jumping.JumpTick = 0
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Jumping.Jumps = 0
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Flying = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Fly()
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Jumping.JumpTick = tick()
&#9;&#9;&#9;&#9;&#9;&#9;Jumping.Jumps = 1
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif Key == string.lower(&quot;E&quot;) and not SpeedBoost.Debounce then
&#9;&#9;&#9;&#9;SpeedBoost.Debounce = true
&#9;&#9;&#9;&#9;Speed.MaxSpeed = Speeds.SpeedBoost
&#9;&#9;&#9;&#9;Fires = {}
&#9;&#9;&#9;&#9;for i = 1, 2 do
&#9;&#9;&#9;&#9;&#9;local Fire = Instance.new(&quot;Fire&quot;)
&#9;&#9;&#9;&#9;&#9;Fire.Heat = -25
&#9;&#9;&#9;&#9;&#9;Fire.Parent = ((((i == 1 and Player:FindFirstChild(&quot;Right Leg&quot;)) and Player:FindFirstChild(&quot;Right Leg&quot;)) or ((i == 2 and Player:FindFirstChild(&quot;Left Leg&quot;)) and Player:FindFirstChild(&quot;Left Leg&quot;))) or nil)
&#9;&#9;&#9;&#9;&#9;table.insert(Fires, Fire)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;local PlaySound = Instance.new(&quot;StringValue&quot;)
&#9;&#9;&#9;&#9;PlaySound.Name = &quot;Play&quot;
&#9;&#9;&#9;&#9;PlaySound.Parent = Sounds.SpeedBoost
&#9;&#9;&#9;&#9;Wait(SpeedBoost.Duration)
&#9;&#9;&#9;&#9;for i, v in pairs(Fires) do
&#9;&#9;&#9;&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;v:Destroy()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;local StopSound = Instance.new(&quot;StringValue&quot;)
&#9;&#9;&#9;&#9;StopSound.Name = &quot;Stop&quot;
&#9;&#9;&#9;&#9;StopSound.Parent = Sounds.SpeedBoost
&#9;&#9;&#9;&#9;Speed.MaxSpeed = Speeds.NormalSpeed
&#9;&#9;&#9;&#9;Wait(SpeedBoost.ReloadTime)
&#9;&#9;&#9;&#9;SpeedBoost.Debounce = false
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;for i, v in pairs(Controls) do
&#9;&#9;&#9;for ii, vv in pairs(v.Keys) do
&#9;&#9;&#9;&#9;v.Number = ((((string.lower(type(vv)) == string.lower(&quot;String&quot;) and Key == string.lower(vv)) or (string.lower(type(vv)) == string.lower(&quot;Number&quot;) and ByteKey == vv)) and v.Numbers.On) or v.Number)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;if Humanoid.Health &gt; 0 then
&#9;&#9;&#9;local Key = string.lower(Key)
&#9;&#9;&#9;local ByteKey = string.byte(Key)
&#9;&#9;&#9;for i, v in pairs(Controls) do
&#9;&#9;&#9;&#9;for ii, vv in pairs(v.Keys) do
&#9;&#9;&#9;&#9;&#9;v.Number = ((((string.lower(type(vv)) == string.lower(&quot;String&quot;) and Key == string.lower(vv)) or (string.lower(type(vv)) == string.lower(&quot;Number&quot;) and ByteKey == vv)) and v.Numbers.Off) or v.Number)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;
end)

Tool.Unequipped:connect(function()&#9;
&#9;ResetStuff()
end)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX10">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-0.370946825</X>
					<Y>2.25193644</Y>
					<Z>-3.33892393</Z>
					<R00>-0.997991681</R00>
					<R01>0.00396319199</R01>
					<R02>-0.0632210076</R02>
					<R10>-0</R10>
					<R11>0.998040855</R11>
					<R12>0.0625650883</R12>
					<R20>0.0633451045</R20>
					<R21>0.062439438</R21>
					<R22>-0.99603647</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-0.244504809</X>
					<Y>2.12680626</Y>
					<Z>-1.34685099</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>