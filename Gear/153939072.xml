<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0.125</X>
				<Y>-1.35000002</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">BunnyBlade</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset?id=153597524</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>18.5744095</X>
					<Y>8.82308769</Y>
					<Z>-58.059433</Z>
					<R00>-0.861342013</R00>
					<R01>-0.00904240645</R01>
					<R02>0.507945299</R02>
					<R10>-1.56888459e-014</R10>
					<R11>0.999841571</R11>
					<R12>0.0177991092</R12>
					<R20>-0.508025765</R20>
					<R21>0.0153311202</R21>
					<R22>-0.861205578</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>1</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.5</X>
					<Y>4</Y>
					<Z>0.5</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset?id=153595814</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=153597562</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX3">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">JumpDown</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/swordlunge.wav</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX4">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">HitGround</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/snap.wav</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX5">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Slash</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds//swordslash.wav</url></Content>
					<float name="Volume">0.699999988</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBX6">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=66703954</url></Content>
				<string name="Name">JumpDown</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX7">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=66703957</url></Content>
				<string name="Name">JumpUp</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX8">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

PlaySound = Tool:WaitForChild(&quot;PlaySound&quot;)

HitGroundSound = Handle:WaitForChild(&quot;HitGround&quot;)
JumpDownSound = Handle:WaitForChild(&quot;JumpDown&quot;)
SlashSound = Handle:WaitForChild(&quot;Slash&quot;)

JumpUp = Tool:WaitForChild(&quot;JumpUp&quot;)
JumpDown = Tool:WaitForChild(&quot;JumpDown&quot;)
LeftSlash = Tool:WaitForChild(&quot;LeftSlash&quot;)
RightSlash = Tool:WaitForChild(&quot;RightSlash&quot;)

Equip = false
Active = false
SlashCoolDown = false
JumpCoolDown = false
OriginalWalkSpeed = 0
LastClick = 0
Clicks = 0
HitGround = false
HitParts = {}
PlayersUpHit = {}

HandleTouchedConnection = nil

function RayCast(Position, Direction, MaxDistance, IgnoreList)
&#9;return game:GetService(&quot;Workspace&quot;):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList) 
end

function CheckTable(Table, Object)
&#9;for i, v in pairs(Table) do
&#9;&#9;if v == Object then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function FindCharacterAncestor(Parent)
&#9;if Parent and Parent ~= game:GetService(&quot;Workspace&quot;) then
&#9;&#9;local humanoid = Parent:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;if humanoid then
&#9;&#9;&#9;return Parent, humanoid
&#9;&#9;else
&#9;&#9;&#9;return FindCharacterAncestor(Parent.Parent)
&#9;&#9;end
&#9;end
&#9;return nil
end

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function PartsHit(Parts)
&#9;for i, v in pairs(Parts) do
&#9;&#9;if v:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;local PartHit
&#9;&#9;&#9;PartHit = v.Touched:connect(function(Hit)
&#9;&#9;&#9;&#9;if Hit and Hit.Parent then
&#9;&#9;&#9;&#9;&#9;HitGround = true
&#9;&#9;&#9;&#9;&#9;for i, v in pairs(Parts) do
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;&#9;table.insert(HitParts, PartHit)
&#9;&#9;end
&#9;end
end

function JumpUpTouchEnabled()
&#9;HandleTouchedConnection = Handle.Touched:connect(function(Hit)
&#9;&#9;if Hit and Hit.Parent then
&#9;&#9;&#9;local character, humanoid = FindCharacterAncestor(Hit.Parent)
&#9;&#9;&#9;if character and character ~= Character and humanoid and humanoid ~= Humanoid and humanoid.Health &gt; 0 and Humanoid.Health &gt; 0 and not CheckTable(PlayersUpHit, character) then
&#9;&#9;&#9;&#9;local torso = character:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;&#9;&#9;if  torso then
&#9;&#9;&#9;&#9;&#9;table.insert(PlayersUpHit, character)
&#9;&#9;&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(20)
&#9;&#9;&#9;&#9;&#9;torso.Velocity = Vector3.new(0, 148, 0)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;return HandleTouchedConnection
end

function JumpDownTouchEnabled()
&#9;HandleTouchedConnection = Handle.Touched:connect(function(Hit)
&#9;&#9;if Hit and Hit.Parent then
&#9;&#9;&#9;local character, humanoid = FindCharacterAncestor(Hit.Parent)
&#9;&#9;&#9;if character and character ~= Character and humanoid and humanoid ~= Humanoid and humanoid.Health &gt; 0 and Humanoid.Health &gt; 0 and CheckTable(PlayersUpHit, character) then
&#9;&#9;&#9;&#9;local torso = character:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;&#9;&#9;if  torso then
&#9;&#9;&#9;&#9;&#9;for i, v in pairs(PlayersUpHit) do
&#9;&#9;&#9;&#9;&#9;&#9;if v == character then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.remove(PlayersUpHit, i)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(40)
&#9;&#9;&#9;&#9;&#9;torso.Velocity = Vector3.new(0, -5, 0)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;return HandleTouchedConnection
end

function Attack()
&#9;Active = true
&#9;Spawn(function()
&#9;&#9;if (not SlashCoolDown and (not SlashAnim or SlashAnim.KeyframeReached)) then
&#9;&#9;&#9;SlashCoolDown = true
&#9;&#9;&#9;local PossibleAnims = {RightSlash, LeftSlash}
&#9;&#9;&#9;local ChosenAnim = PossibleAnims[math.random(1, #PossibleAnims)]
&#9;&#9;&#9;SlashAnim = Humanoid:LoadAnimation(ChosenAnim)
&#9;&#9;&#9;SlashAnim:Play()
&#9;&#9;&#9;PlaySound.Value = SlashSound.Name
&#9;&#9;&#9;HandleTouchedConnection = Handle.Touched:connect(function(Hit)
&#9;&#9;&#9;&#9;if Hit and Hit.Parent then
&#9;&#9;&#9;&#9;&#9;local character, humanoid = FindCharacterAncestor(Hit.Parent)
&#9;&#9;&#9;&#9;&#9;if character and character ~= Character and humanoid and humanoid ~= Humanoid and humanoid.Health &gt; 0 and Humanoid.Health &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(5)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;&#9;Delay(0.5, function()
&#9;&#9;&#9;&#9;if HandleTouchedConnection then
&#9;&#9;&#9;&#9;&#9;HandleTouchedConnection:disconnect()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;&#9;wait(0.5)
&#9;&#9;&#9;SlashCoolDown = false
&#9;&#9;end
&#9;end)
&#9;Active = false
end

function DoubleClick() --Idea suggested by nintendocpu/Bayshicpu
&#9;if Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent then
&#9;&#9;JumpCoolDown = true
&#9;&#9;Active = true
&#9;&#9;JumpUpAnim = Humanoid:LoadAnimation(JumpUp)
&#9;&#9;JumpDownAnim = Humanoid:LoadAnimation(JumpDown)&#9;&#9;
&#9;&#9;
&#9;&#9;OriginalWalkSpeed = Humanoid.WalkSpeed
&#9;&#9;Humanoid.WalkSpeed = 0
&#9;&#9;
&#9;&#9;JumpUpAnim:Play(0, 1, 8)
&#9;&#9;Humanoid.Jump = true
&#9;&#9;Torso.Velocity = Vector3.new(0, 150, 0)
&#9;&#9;
&#9;&#9;JumpTouchedConnection = JumpUpTouchEnabled()
&#9;&#9;
&#9;&#9;Delay(1.5, function()
&#9;&#9;&#9;if JumpTouchedConnection then
&#9;&#9;&#9;&#9;JumpTouchedConnection:disconnect()
&#9;&#9;&#9;end
&#9;&#9;end)

&#9;&#9;while Torso.Velocity.Y &gt; 0 do
&#9;&#9;&#9;wait()
&#9;&#9;end
&#9;&#9;
&#9;&#9;if Equip then
&#9;&#9;&#9;if JumpTouchedConnection then
&#9;&#9;&#9;&#9;JumpTouchedConnection:disconnect()
&#9;&#9;&#9;end
&#9;
&#9;&#9;&#9;JumpTouchedConnection = JumpDownTouchEnabled()
&#9;
&#9;&#9;&#9;Delay(1, function()
&#9;&#9;&#9;&#9;if JumpTouchedConnection then
&#9;&#9;&#9;&#9;&#9;JumpTouchedConnection:disconnect()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;
&#9;&#9;&#9;JumpUpAnim:Stop()
&#9;&#9;&#9;JumpDownAnim:Play(0, 1, 10)
&#9;&#9;&#9;PlaySound.Value = JumpDownSound.Name
&#9;&#9;&#9;Torso.Velocity = Torso.Velocity - Vector3.new(0, 10, 0)
&#9;&#9;&#9;
&#9;&#9;&#9;RightLeg = Character:FindFirstChild(&quot;Right Leg&quot;)
&#9;&#9;&#9;LeftLeg = Character:FindFirstChild(&quot;Left Leg&quot;)
&#9;&#9;&#9;PartsHit({RightLeg, LeftLeg})
&#9;&#9;&#9;while not HitGround do
&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;end
&#9;&#9;&#9;HitGround = false
&#9;&#9;&#9;for i, v in pairs(HitParts) do
&#9;&#9;&#9;&#9;if v then
&#9;&#9;&#9;&#9;&#9;v:disconnect()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;HitParts = {}
&#9;&#9;&#9;PlayersUpHit = {}
&#9;&#9;&#9;JumpDownAnim:Stop()
&#9;&#9;&#9;PlaySound.Value = HitGroundSound.Name
&#9;&#9;&#9;Humanoid.WalkSpeed = OriginalWalkSpeed
&#9;&#9;&#9;Active = false
&#9;&#9;end
&#9;&#9;wait(2)
&#9;&#9;JumpCoolDown = false
&#9;end
end

function Activated()
&#9;if not Active then
&#9;&#9;local Tick = tick()
&#9;&#9;if HandleTouchedConnection then
&#9;&#9;&#9;HandleTouchedConnection:disconnect()
&#9;&#9;end
&#9;&#9;if LastClick == 0 or (Tick - LastClick) &lt;= 0.25 and not JumpCoolDown then
&#9;&#9;&#9;LastClick = Tick
&#9;&#9;&#9;Clicks = Clicks + 1
&#9;&#9;&#9;if Clicks &gt;= 2 then
&#9;&#9;&#9;&#9;LastClick = 0
&#9;&#9;&#9;&#9;Clicks = 0
&#9;&#9;&#9;&#9;local Hit, Pos = RayCast(Torso.Position, Vector3.new(0, -1, 0), (Torso.Size * 2), {Character})
&#9;&#9;&#9;&#9;if Hit and Hit.Parent then
&#9;&#9;&#9;&#9;&#9;if SlashAnim then
&#9;&#9;&#9;&#9;&#9;&#9;SlashAnim:Stop()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;DoubleClick()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Attack()
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;Attack()
&#9;&#9;&#9;Clicks = 1
&#9;&#9;&#9;LastClick = Tick
&#9;&#9;end
&#9;end
end

function Equipped(Mouse)
&#9;Equip = true
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not Player or not Humanoid or not Torso then
&#9;&#9;return
&#9;end
&#9;StartingWalkSpeed = Humanoid.WalkSpeed
&#9;Humanoid.WalkSpeed = 32
end

function Unequipped()
&#9;Equip = false
&#9;Active = false
&#9;Humanoid.WalkSpeed = StartingWalkSpeed
&#9;if HandleTouchedConnection then
&#9;&#9;HandleTouchedConnection:disconnect()
&#9;end
&#9;if JumpTouchedConnection then
&#9;&#9;JumpTouchedConnection:disconnect()
&#9;end
&#9;if SlashAnim then
&#9;&#9;SlashAnim:Stop()
&#9;end
&#9;if JumpUpAnim then
&#9;&#9;JumpUpAnim:Stop()
&#9;end
&#9;if JumpDownAnim then
&#9;&#9;JumpDownAnim:Stop()
&#9;end
&#9;for i, v in pairs(HitParts) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;HitParts = {}
&#9;PlayersUpHit = {}
end

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX9">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">SoundManager</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)
PlaySound = Tool:WaitForChild(&quot;PlaySound&quot;)

PlaySound.Value = &quot;&quot;

PlaySound.Changed:connect(function()
&#9;if PlaySound.Value ~= &quot;&quot; then
&#9;&#9;local Sound = Handle:FindFirstChild(PlaySound.Value)
&#9;&#9;if Sound then
&#9;&#9;&#9;Sound:Play()
&#9;&#9;end
&#9;&#9;PlaySound.Value = &quot;&quot;
&#9;end
end)</ProtectedString>
			</Properties>
		</Item>
		<Item class="StringValue" referent="RBX10">
			<Properties>
				<string name="Name">PlaySound</string>
				<string name="Value"></string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX11">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=74894663</url></Content>
				<string name="Name">LeftSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX12">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=74813494</url></Content>
				<string name="Name">RightSlash</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX13">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">5</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>31.7784901</X>
					<Y>12.141346</Y>
					<Z>12.4574623</Z>
					<R00>0.96680814</R00>
					<R01>0.0538046025</R01>
					<R02>-0.249773979</R02>
					<R10>-0</R10>
					<R11>0.977575958</R11>
					<R12>0.210582733</R12>
					<R20>0.255503386</R20>
					<R21>-0.203593105</R21>
					<R22>0.945128441</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>32.278038</X>
					<Y>11.7201805</Y>
					<Z>10.5672054</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX14">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">Mouse_Icon = &quot;rbxasset://textures/GunCursor.png&quot;
Reloading_Icon = &quot;rbxasset://textures/GunWaitCursor.png&quot;

Tool = script.Parent

Mouse = nil

function UpdateIcon()
&#9;if Mouse then
&#9;&#9;Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
&#9;end
end

function OnEquipped(ToolMouse)
&#9;Mouse = ToolMouse
&#9;UpdateIcon()
end

function OnChanged(Property)
&#9;if Property == &quot;Enabled&quot; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
			</Properties>
		</Item>
	</Item>
</roblox>