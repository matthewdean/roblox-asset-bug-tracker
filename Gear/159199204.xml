<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>1.47500002</X>
				<Y>-1.20000005</Y>
				<Z>-1.47500002</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">LaserFaceplate</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset?id=158079456</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-8.03995991</X>
					<Y>32.1065025</Y>
					<Z>0.60783577</Z>
					<R00>1</R00>
					<R01>4.22726516e-005</R01>
					<R02>-2.7179125e-005</R02>
					<R10>-4.48110586e-005</R10>
					<R11>0.994844317</R11>
					<R12>-0.101414561</R12>
					<R20>2.27519122e-005</R20>
					<R21>0.101414561</R21>
					<R22>0.994844317</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1.39999998</X>
					<Y>1.25</Y>
					<Z>1.25</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset?id=158079396</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>2.9000001</X>
						<Y>2.9000001</Y>
						<Z>2.9000001</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=158079480</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX3">
				<Properties>
					<bool name="Looped">true</bool>
					<string name="Name">LaserSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=115327352</url></Content>
					<float name="Volume">0.260035783</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX4">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Pose = Tool:WaitForChild(&quot;Pose&quot;)

LaserSound = Handle:WaitForChild(&quot;LaserSound&quot;)

LaserModelRemoval = script:WaitForChild(&quot;LaserModelRemoval&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

Damage = 5
ReloadTime = 0.1
NeckChangedConnections = {}
MouseDown = false

LaserRange = 35
LaserOffset = 100

function FindCharacterAncestor(Parent)
&#9;if Parent and Parent ~= game:GetService(&quot;Workspace&quot;) then
&#9;&#9;local humanoid = Parent:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;if humanoid then
&#9;&#9;&#9;return Parent, humanoid
&#9;&#9;else
&#9;&#9;&#9;return FindCharacterAncestor(Parent.Parent)
&#9;&#9;end
&#9;end
&#9;return nil
end

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function RayCast(Position, Direction, MaxDistance, IgnoreList)
&#9;return game:GetService(&quot;Workspace&quot;):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList) 
end

function CastLaser(Mouse, StartPosition, Direction, MaxDistance, Ignore, Color)

&#9;local LaserModelName = Player.Name .. &quot;_LaserModel&quot;
&#9;local LaserModel = game:GetService(&quot;Workspace&quot;):FindFirstChild(LaserModelName)
&#9;if not LaserModel then
&#9;&#9;LaserModel = Instance.new(&quot;Model&quot;)
&#9;&#9;LaserModel.Name = LaserModelName
&#9;&#9;local LaserModelRemovalClone = LaserModelRemoval:Clone()
&#9;&#9;LaserModelRemovalClone.Disabled = false
&#9;&#9;LaserModelRemovalClone.Parent = LaserModel
&#9;&#9;LaserModel.Parent = game:GetService(&quot;Workspace&quot;)
&#9;end
&#9;table.insert(Ignore, LaserModel)
&#9;local Hit, EndPosition = RayCast(StartPosition, Direction, MaxDistance, Ignore)
&#9;local Distance = (StartPosition - EndPosition).magnitude
&#9;local LaserPart = Instance.new(&quot;Part&quot;)
&#9;LaserPart.Name = &quot;Laser&quot;
&#9;LaserPart.BrickColor = BrickColor.new(Color)
&#9;LaserPart.Transparency = 0.5
&#9;LaserPart.FormFactor = Enum.FormFactor.Custom
&#9;LaserPart.TopSurface = Enum.SurfaceType.Smooth
&#9;LaserPart.BottomSurface = Enum.SurfaceType.Smooth
&#9;LaserPart.Material = Enum.Material.SmoothPlastic
&#9;LaserPart.CanCollide = false
&#9;LaserPart.Anchored = true
&#9;LaserPart.Locked = true
&#9;LaserPart.Size = Vector3.new(0.2, 0.2, Distance)
&#9;Debris:AddItem(LaserPart, 1)
&#9;LaserPart.Parent = LaserModel
&#9;LaserPart.CFrame = CFrame.new(StartPosition, EndPosition) * CFrame.new(0, 0, (-Distance / 2))
&#9;Mouse.TargetFilter = LaserModel
&#9;Spawn(function()
&#9;&#9;for i = 1, 20 do
&#9;&#9;&#9;wait(0.05)
&#9;&#9;&#9;LaserPart.Transparency = LaserPart.Transparency + 0.05
&#9;&#9;end
&#9;end)&#9;
&#9;
&#9;return Hit, EndPosition
&#9;
end

function StopLaser()
&#9;LaserSound:Stop()
&#9;MouseDown = false
&#9;if Neck and Neck.Parent then
&#9;&#9;Neck.C1 = NeckOrigin
&#9;end
end

function FireLaser(Mouse)
&#9;IgnoreHeadChange = true
&#9;local LastHeadRotation = Neck.C1
&#9;Neck.C1 = NeckOrigin
&#9;local HeadOrigin = Head:Clone()
&#9;local Base = Neck.Part0.Position + (Neck.C0.p * 1)
&#9;local YVector = (Mouse.Hit.p + Mouse.Hit.lookVector)
&#9;local Set = CFrame.new(Base, YVector)
&#9;local Offset = Set:toObjectSpace(Torso.CFrame * Neck.C0)
&#9;local PosX, PosY, PosZ, R00, R01, R02, R10, R11, R12, R20, R21, R22 = Offset:components()
&#9;Neck.C1 = CFrame.new(NeckOrigin.p.x, NeckOrigin.p.y, NeckOrigin.p.z, R00, R01, R02, R10, R11, R12, R20, R21, R22)
&#9;local HeadClone = Head:Clone()
&#9;local HeadCloneY = HeadClone:Clone()
&#9;HeadCloneY.CFrame = HeadCloneY.CFrame * CFrame.Angles(math.rad(90), 0, 0)&#9;&#9;
&#9;HeadCloneY.CFrame = HeadCloneY.CFrame + HeadCloneY.CFrame.lookVector * 0.2
&#9;local HeadCloneZ = HeadCloneY:Clone()
&#9;HeadCloneZ.CFrame = HeadCloneZ.CFrame + HeadClone.CFrame.lookVector * (HeadClone.Size.z / 2)
&#9;local HeadRotationCheck = false
&#9;if math.abs((Head.Position - Torso.Position).magnitude) &gt;= 1.25 then
&#9;&#9;HeadRotationCheck = true
&#9;else
&#9;&#9;Neck.C1 = LastHeadRotation
&#9;end
&#9;IgnoreHeadChange = false
&#9;if HeadRotationCheck and (math.acos((Mouse.Hit.p - HeadOrigin.Position).unit:Dot(HeadOrigin.CFrame.lookVector)) &lt;= (math.pi / 2)) then
&#9;&#9;for i, v in pairs(NeckChangedConnections) do
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;&#9;NeckChangedConnections = {}
&#9;&#9;Spawn(function()
&#9;&#9;&#9;Tool.Enabled = false
&#9;&#9;&#9;local FaceplateClone = Faceplate:Clone()
&#9;&#9;&#9;local FaceplateCloneY = FaceplateClone:Clone()
&#9;&#9;&#9;FaceplateCloneY.CFrame = FaceplateCloneY.CFrame * CFrame.Angles(math.rad(90), 0, 0)&#9;&#9;
&#9;&#9;&#9;FaceplateCloneY.CFrame = FaceplateCloneY.CFrame + FaceplateCloneY.CFrame.lookVector * ((FaceplateClone.Size.Y / 2) - 0.7)
&#9;&#9;&#9;local FaceplateCloneZ = FaceplateCloneY:Clone()
&#9;&#9;&#9;FaceplateCloneZ.CFrame = FaceplateCloneZ.CFrame + FaceplateClone.CFrame.lookVector * ((FaceplateClone.Size.Z / 2) + 0)
&#9;&#9;&#9;local FaceplateCloneX = FaceplateCloneZ:Clone()
&#9;&#9;&#9;FaceplateCloneX.CFrame = FaceplateCloneZ.CFrame * CFrame.Angles(0, math.rad(90), 0)
&#9;&#9;&#9;FaceplateCloneX.CFrame = FaceplateCloneX.CFrame - FaceplateCloneX.CFrame.lookVector * ((FaceplateClone.Size.X / 2) - ((FaceplateClone.Size.X / 2) + 0.25))
&#9;&#9;&#9;local TargetPoint = Mouse.Hit.p + Vector3.new((math.random(-LaserOffset, LaserOffset) / LaserOffset), (math.random(-LaserOffset, LaserOffset) / LaserOffset), (math.random(-LaserOffset, LaserOffset) / LaserOffset))
&#9;&#9;&#9;local Hit, EndPosition = CastLaser(Mouse, FaceplateCloneX.Position, (TargetPoint - FaceplateCloneX.Position), LaserRange, {Character}, &quot;Bright red&quot;)
&#9;&#9;&#9;if Hit and Hit.Parent then
&#9;&#9;&#9;&#9;local character, humanoid = FindCharacterAncestor(Hit.Parent)
&#9;&#9;&#9;&#9;if character and character ~= Character and humanoid and humanoid.Health &gt; 0 then
&#9;&#9;&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(Damage)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;wait(ReloadTime)
&#9;&#9;&#9;Tool.Enabled = true
&#9;&#9;end)
&#9;&#9;local NeckChanged
&#9;&#9;NeckChanged = Neck.Changed:connect(function(Property)
&#9;&#9;&#9;if Property == &quot;C0&quot; or Property == &quot;C1&quot; and not IgnoreHeadChange then
&#9;&#9;&#9;&#9;for i, v in pairs(NeckChangedConnections) do
&#9;&#9;&#9;&#9;&#9;v:disconnect()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;NeckChangedConnections = {}
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;&#9;table.insert(NeckChangedConnections, NeckChanged)
&#9;&#9;Delay(1, function()
&#9;&#9;&#9;if NeckChanged.connected then
&#9;&#9;&#9;&#9;Neck.C1 = NeckOrigin
&#9;&#9;&#9;&#9;StopLaser()
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;else
&#9;&#9;IgnoreHeadChange = true
&#9;&#9;Neck.C1 = LastHeadRotation
&#9;&#9;IgnoreHeadChange = false
&#9;end
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Head = Character:FindFirstChild(&quot;Head&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;Neck = Torso:FindFirstChild(&quot;Neck&quot;)
&#9;NeckOrigin = Neck.C1
&#9;if not Character or not Humanoid or not Head or not Torso or not Neck then
&#9;&#9;return
&#9;end
&#9;wait()
&#9;PoseAnim = Humanoid:LoadAnimation(Pose)
&#9;if PoseAnim then
&#9;&#9;PoseAnim:Play()
&#9;end
&#9;Faceplate = Handle:Clone()
&#9;Handle.Transparency = 1
&#9;FaceplateWeld = Instance.new(&quot;Weld&quot;)
&#9;FaceplateWeld.Part0 = Head
&#9;FaceplateWeld.Part1 = Faceplate
&#9;FaceplateWeld.C1 = FaceplateWeld.C1 + Vector3.new(0, -0.18, 0.05)
&#9;FaceplateWeld.Parent = Faceplate
&#9;Faceplate.Parent = Character
&#9;if not Tool.Enabled then
&#9;&#9;wait(ReloadTime)
&#9;&#9;Tool.Enabled = true
&#9;end
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;if Tool.Enabled and Humanoid.Health &gt; 0 then
&#9;&#9;&#9;MouseDown = true
&#9;&#9;&#9;Spawn(function()
&#9;&#9;&#9;&#9;LaserSound:Play()
&#9;&#9;&#9;&#9;while MouseDown do
&#9;&#9;&#9;&#9;&#9;LaserSound.Volume = (((math.sin(tick() * 3) + 1) * 0.25) + 0.25)
&#9;&#9;&#9;&#9;&#9;FireLaser(Mouse)
&#9;&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;LaserSound:Stop()
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;end)
&#9;Mouse.Button1Up:connect(function()
&#9;&#9;MouseDown = false
&#9;end)
end

function Unequipped()
&#9;Handle.Transparency = 0
&#9;StopLaser()
&#9;if Faceplate and Faceplate.Parent then
&#9;&#9;Faceplate:Destroy()
&#9;end
&#9;if PoseAnim then
&#9;&#9;PoseAnim:Stop()
&#9;end
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX5">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">LaserModelRemoval</string>
					<ProtectedString name="Source">--Made by Luckymaxer

Model = script.Parent

Debris = game:GetService(&quot;Debris&quot;)

function CountLasers(Parent)
&#9;local Lasers = {}
&#9;for i, v in pairs(Parent:GetChildren()) do
&#9;&#9;if v:IsA(&quot;BasePart&quot;) and string.lower(v.Name) == &quot;laser&quot; then
&#9;&#9;&#9;table.insert(Lasers, v)
&#9;&#9;end
&#9;end
&#9;return Lasers
end

function DestroyModel()
&#9;if #CountLasers(Model) == 0 then
&#9;&#9;Debris:AddItem(Model)
&#9;end
end

Model.ChildRemoved:connect(function(Child)
&#9;DestroyModel()
end)

DestroyModel()</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX6">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">local MOUSE_ICON = &apos;rbxasset://textures/GunCursor.png&apos;
local RELOADING_ICON = &apos;rbxasset://textures/GunWaitCursor.png&apos;

local Tool = script.Parent

local Mouse = nil

local function UpdateIcon()
&#9;if Mouse then
&#9;&#9;Mouse.Icon = Tool.Enabled and MOUSE_ICON or RELOADING_ICON
&#9;end
end

local function OnEquipped(mouse)
&#9;Mouse = mouse
&#9;UpdateIcon()
end

local function OnChanged(property)
&#9;if property == &apos;Enabled&apos; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX7">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=158821881</url></Content>
				<string name="Name">Pose</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX8">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">5</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-9.24255371</X>
					<Y>32.6270676</Y>
					<Z>-1.68327546</Z>
					<R00>-0.901458621</R00>
					<R01>0.100024484</R01>
					<R02>-0.421150208</R02>
					<R10>-0</R10>
					<R11>0.972935855</R11>
					<R12>0.231075287</R12>
					<R20>0.432865351</R20>
					<R21>0.208304808</R21>
					<R22>-0.877061367</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-8.4002533</X>
					<Y>32.164917</Y>
					<Z>0.0708472729</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>