<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>-0.899999976</Z>
				<R00>0</R00>
				<R01>0</R01>
				<R02>1</R02>
				<R10>1</R10>
				<R11>0</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>1</R21>
				<R22>0</R22>
			</CoordinateFrame>
			<string name="Name">BuildColor</string>
			<Content name="TextureId"><url>rbxasset://icons/color.png</url></Content>
			<bool name="archivable">true</bool>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">199</int>
				<CoordinateFrame name="CFrame">
					<X>0.999433637</X>
					<Y>7.98012686</Y>
					<Z>-12.5012054</Z>
					<R00>-1.50203878e-005</R00>
					<R01>1.50579854e-006</R01>
					<R02>-1.00000012</R02>
					<R10>9.8371238e-006</R10>
					<R11>1</R11>
					<R12>1.50565256e-006</R12>
					<R20>1.00000012</R20>
					<R21>-9.83710197e-006</R21>
					<R22>-1.50204023e-005</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">2</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>0.800000012</Y>
					<Z>2</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=15952510</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.400000006</X>
						<Y>0.400000006</Y>
						<Z>0.400000006</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=15952494</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX3">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Sound</string>
					<float name="Pitch">1</float>
					<int name="PlayCount">-1</int>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds\swordslash.wav</url></Content>
					<float name="Volume">1</float>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX4">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Sound</string>
					<float name="Pitch">1</float>
					<int name="PlayCount">-1</int>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds\unsheath.wav</url></Content>
					<float name="Volume">1</float>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX5">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Sound</string>
					<float name="Pitch">1</float>
					<int name="PlayCount">-1</int>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds\swordslash.wav</url></Content>
					<float name="Volume">1</float>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX6">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Sound</string>
					<float name="Pitch">1</float>
					<int name="PlayCount">-1</int>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds\unsheath.wav</url></Content>
					<float name="Volume">1</float>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX7">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Color Picker Local</string>
				<ProtectedString name="Source">local Tool = script.Parent

enabled = true
local origTexture = 	Tool.TextureId
game:GetService(&quot;ContentProvider&quot;):Preload(&quot;rbxasset://icons/color_sel.png&quot;)

function onButton1Down(mouse)
	if not enabled then
		return
	end

	enabled = false
	mouse.Icon = &quot;rbxasset://textures\\GunWaitCursor.png&quot;

	wait(.5)
	mouse.Icon = &quot;rbxasset://textures\\GunCursor.png&quot;
	enabled = true

end


local selectionBox
local selectionLasso
local inGui = false
local inPalette = false

local selectedButtonTable = {}
local oldButton = nil
function onMouseLeave(hoverSelection)
	if oldButton ~= nil then
		local notSelected = true
		local selectionText = &quot;&quot;
		for key, value in pairs(selectedButtonTable) do
			if oldButton == value then
				notSelected = false
			else
				selectionText = value.BackgroundColor.Name
			end
		end
		if notSelected then
			hoverSelection.Text = selectionText
			oldButton.Parent.BackgroundColor = BrickColor.Black()
		end
	end
	oldButton = nil
end

function onMouseEnter(hoverSelection, guiButton)
	onMouseLeave(hoverSelection)
	hoverSelection.Text = guiButton.BackgroundColor.Name
	if guiButton ~= selectedButton then
		guiButton.Parent.BackgroundColor = BrickColor.White()
		oldButton = guiButton
	end
end

function onMouseUp(colorHolder, paletteFrame, guiButton)
	if selectedButtonTable[colorHolder] ~= nil then
		selectedButtonTable[colorHolder].Parent.BackgroundColor = BrickColor.Black()
	end
	guiButton.Parent.BackgroundColor = BrickColor.Yellow()
	colorHolder.BackgroundColor = guiButton.BackgroundColor
	selectionBox.Color = guiButton.BackgroundColor
	selectionLasso.Color = guiButton.BackgroundColor
	Tool.Value.Value = guiButton.BackgroundColor
	selectedButtonTable[colorHolder] = guiButton
	
	onMouseLeavePalette(paletteFrame)
	
	print(&quot;Selected Color: &quot; .. guiButton.BackgroundColor.Name)
end

function onShowColorDialog(paletteFrame)
	paletteFrame.Visible = true
end

function setSelectionBox(part) 
	unsetSelectionBox()
	selectionBox.Adornee = part
	selectionLasso.Part = part
end
function unsetSelectionBox() 
	selectionBox.Adornee = nil
	selectionLasso.Part = nil
end

function onMouseEnterGui(mouse)
	mouse.Icon =&quot;rbxasset://textures\\ArrowCursor.png&quot;
	unsetSelectionBox()
	inGui = true
end
function onMouseLeaveGui(mouse)
	inGui = false
end

function onMouseEnterPalette(mouse)
	mouse.Icon =&quot;rbxasset://textures\\ArrowCursor.png&quot;
	unsetSelectionBox()
	inPalette = true
end
function onMouseLeavePalette(paletteFrame, mouse)
	paletteFrame.Visible = false
	inPalette = false
end
	

local primaryColor = nil
function buildGui(root, mouse)

	local mainFrame = Instance.new(&quot;Frame&quot;)
	mainFrame.Position = UDim2.new(0.0, 0, 1.0, -250)
	mainFrame.Size = UDim2.new(0.0, 200, 0.0, 250)
	mainFrame.Transparency = 1.0
	mainFrame.Parent = root
	

	local paletteFrame = Instance.new(&quot;Frame&quot;)
	paletteFrame.Position = UDim2.new(0.0, 0, 0.0, 0)
	paletteFrame.Size = UDim2.new(1.0, 0, 4.0/5, 0)
	paletteFrame.BackgroundColor = BrickColor.Black()
	paletteFrame.Visible = false
	paletteFrame.Parent = mainFrame
	paletteFrame.MouseEnter:connect(function() print(&quot;EnterPalette&quot;) onMouseEnterPalette(mouse) end)
	paletteFrame.MouseLeave:connect(function() print(&quot;LeavePalette&quot;)  onMouseLeavePalette(paletteFrame, mouse) end)


	local sideBar = Instance.new(&quot;Frame&quot;)
	sideBar.Position = UDim2.new(0.0, 0, 4.0/5, 0)
	sideBar.Size = UDim2.new(1.0, 0, 1.0/5, 0)
	sideBar.BackgroundColor = BrickColor.Black()
	sideBar.Parent = mainFrame
	sideBar.MouseEnter:connect(function() onMouseEnterGui(mouse) end)
	sideBar.MouseLeave:connect(function() onMouseLeaveGui(mouse) end)

	primaryColor = Instance.new(&quot;TextButton&quot;)
	primaryColor.Position = UDim2.new(0.75, 1, 0.0, 1)
	primaryColor.Size = UDim2.new(0.25, -2, 1.0, -2)
	primaryColor.Text  = &quot;&quot;	
	primaryColor.BackgroundColor = Tool.Value.Value
	primaryColor.BorderColor = BrickColor.Black()
	primaryColor.BorderSizePixel = 1
	primaryColor.Parent = sideBar
	primaryColor.MouseButton1Down:connect(function() print(&quot;Showdialog&quot;) onShowColorDialog(paletteFrame) end)


	local hoverSelection = Instance.new(&quot;TextLabel&quot;)
	hoverSelection.Position = UDim2.new(0.0, 0, 0.0, 0)
	hoverSelection.Size = UDim2.new(0.75, 0, 1.0, 0)
	hoverSelection.Text = &quot;&quot;
	hoverSelection.BackgroundColor = BrickColor.Black()
	hoverSelection.TextColor = BrickColor.White()
	hoverSelection.Text = primaryColor.BackgroundColor.Name
	hoverSelection.Parent = sideBar

	--local secondaryColor = Instance.new(&quot;TextButton&quot;)
	--secondaryColor.Position = UDim2.new(0.75, 0, 0.0, 0)
	--secondaryColor.Size = UDim2.new(0.25, 0, 1.0, 0)
	--secondaryColor.Text = &quot;&quot;
	--secondaryColor.BackgroundColor = BrickColor.Black()
	--secondaryColor.Parent = sideBar

	for xOffset = 0, 7 do
		for yOffset = 0,7 do
			local guiFrame = Instance.new(&quot;Frame&quot;)
			guiFrame.Position = UDim2.new(1.0/8 * xOffset, 0, 1.0/8*yOffset, 0)
			guiFrame.Size = UDim2.new(1.0/8, 0, 1.0/8, 0)
			guiFrame.BackgroundColor = BrickColor.Black()
			guiFrame.BorderSizePixel = 0
			guiFrame.Parent = paletteFrame
		
			local guiButton = Instance.new(&quot;TextButton&quot;)
			guiButton.Position = UDim2.new(0.0, 2, 0.0, 2)
			guiButton.Size = UDim2.new(1.0, -4, 1.0, -4)
			guiButton.Text = &quot;&quot;
			guiButton.BorderSizePixel = 0
			guiButton.AutoButtonColor = false
			guiButton.BackgroundColor = BrickColor.palette(xOffset + yOffset*8)
			guiButton.MouseEnter:connect(function() onMouseEnter(hoverSelection, guiButton) end)
			guiButton.MouseButton1Up:connect(function() onMouseUp(primaryColor, paletteFrame, guiButton) end)
			--guiButton.MouseButton2Down:connect(function() onMouseClick(secondaryColor, guiButton) end)
			guiButton.Parent = guiFrame

			if guiButton.BackgroundColor == primaryColor.BackgroundColor then
				guiFrame.BackgroundColor = BrickColor.White()
				selectedButtonTable[primaryColor] = guiButton
			end
		end
	end
	mainFrame.MouseLeave:connect(function() onMouseLeave(hoverSelection) end)

end
function canSelectObject(part)
	return part and not (part.Locked) and (part.Position - Tool.Parent.Head.Position).Magnitude &lt; 60
end

function on3dButton1Down(mouse) 
	local part = mouse.Target
	if canSelectObject(part) then
		if Instance.Lock(part) then
			part.BrickColor = primaryColor.BackgroundColor
			Instance.Unlock(part)
		end
	end
end

function on3dMouseMove(mouse) 
	if not(inGui) and not(inPalette) then
		mouse.Icon =&quot;rbxasset://textures\\FillCursor.png&quot;
		local part = mouse.Target
		if canSelectObject(part) then
			setSelectionBox(part)
		else
			unsetSelectionBox()
		end
	end
end

local guiMain
function onEquippedLocal(mouse)
	Tool.TextureId = &quot;rbxasset://icons/color_sel.png&quot;

	local character = script.Parent.Parent
	local player = game.Players:GetPlayerFromCharacter(character)

	guiMain = Instance.new(&quot;ScreenGui&quot;)
	guiMain.Parent = player.PlayerGui

	inGui = false
	inPalette = false

	mouse.Button1Down:connect(function() on3dButton1Down(mouse) end)
	mouse.Move:connect(function() on3dMouseMove(mouse) end)
	mouse.Icon =&quot;rbxasset://textures\\FillCursor.png&quot;

	selectionBox = Instance.new(&quot;SelectionBox&quot;)
	selectionBox.Color = Tool.Value.Value
	selectionBox.Adornee = nil
	selectionBox.Parent = player.PlayerGui

	selectionLasso = Instance.new(&quot;SelectionPartLasso&quot;)
	selectionLasso.Name = &quot;Model Delete Lasso&quot;
	selectionLasso.Humanoid = character.Humanoid
	selectionLasso.Part = nil
	selectionLasso.Visible = true
	selectionLasso.archivable = false
	selectionLasso.Color = Tool.Value.Value
	selectionLasso.Parent = game.workspace
	
	buildGui(guiMain, mouse)
end

function onUnequippedLocal()
	Tool.TextureId = origTexture
	guiMain:Remove()
	selectionBox:Remove()
	selectionLasso:Remove()
end


--local part2 = Instance.new(&quot;Part&quot;)
--if Instance.Lock(part2) then
--	Instance.Unlock(part2)
--end


Tool.Equipped:connect(onEquippedLocal)
Tool.Unequipped:connect(onUnequippedLocal)
</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="BrickColorValue" referent="RBX8">
			<Properties>
				<string name="Name">Value</string>
				<int name="Value">28</int>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX9">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">SwordScript</string>
				<ProtectedString name="Source">-------- OMG HAX

r = game:service(&quot;RunService&quot;)


local damage = 0


local slash_damage = 0


sword = script.Parent.Handle
Tool = script.Parent



function attack()
	local anim = Instance.new(&quot;StringValue&quot;)
	anim.Name = &quot;toolanim&quot;
	anim.Value = &quot;Slash&quot;
	anim.Parent = Tool
end


function swordUp()
	Tool.GripForward = Vector3.new(-1,0,0)
	Tool.GripRight = Vector3.new(0,1,0)
	Tool.GripUp = Vector3.new(0,0,1)
end

function swordOut()
	Tool.GripForward = Vector3.new(0,0,1)
	Tool.GripRight = Vector3.new(0,-1,0)
	Tool.GripUp = Vector3.new(-1,0,0)
end



Tool.Enabled = true

function onActivated()

	if not Tool.Enabled then
		return
	end

	Tool.Enabled = false

	local character = Tool.Parent;
	local humanoid = character.Humanoid
	if humanoid == nil then
		print(&quot;Humanoid not found&quot;)
		return 
	end

	

	attack()

	wait(1)

	Tool.Enabled = true
end


function onEquipped()
end


script.Parent.Activated:connect(onActivated)
script.Parent.Equipped:connect(onEquipped)

</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
	</Item>
</roblox>