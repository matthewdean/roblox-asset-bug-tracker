<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0.100000001</Y>
				<Z>0.75</Z>
				<R00>0.999999642</R00>
				<R01>0.000909994473</R01>
				<R02>0</R02>
				<R10>-8.09999978e-009</R10>
				<R11>8.90114916e-006</R11>
				<R12>1</R12>
				<R20>0.000909994473</R20>
				<R21>-0.999999642</R21>
				<R22>8.9011528e-006</R22>
			</CoordinateFrame>
			<string name="Name">BaconDaggers</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset?id= 165709672 </url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="LocalScript" referent="RBX1">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)
RunService = game:GetService(&quot;RunService&quot;)
InsertService = game:GetService(&quot;InsertService&quot;)

SlashSound = Handle:WaitForChild(&quot;SlashSound&quot;)

LeftSlash = Tool:WaitForChild(&quot;LeftSlash&quot;)
RightSlash = Tool:WaitForChild(&quot;RightSlash&quot;)
Strike = Tool:WaitForChild(&quot;Strike&quot;)

NewAnimate = script:WaitForChild(&quot;NewAnimate&quot;)

Base_Damage = 8
Slash_Damage = 15
Strike_Damage = 20

ExtraDamage = 15

Damage = Base_Damage

CrownId = 166896278
CrownModel = InsertService:LoadAsset(CrownId)
Crown = CrownModel:GetChildren()[1]
CrownName = Crown.Name
CrownHandle = Crown:FindFirstChild(&quot;Handle&quot;)
CrownMesh = CrownHandle:FindFirstChild(&quot;Mesh&quot;)

AttackReady = true
StrikeReady = true

Last_Attack = 0

function FindCharacterAncestor(Parent)
&#9;if Parent and Parent ~= game:GetService(&quot;Workspace&quot;) then
&#9;&#9;local humanoid = Parent:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;if humanoid then
&#9;&#9;&#9;return Parent, humanoid
&#9;&#9;else
&#9;&#9;&#9;return FindCharacterAncestor(Parent.Parent)
&#9;&#9;end
&#9;end
&#9;return nil
end

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function CheckForCrown()
&#9;for i, v in pairs(Character:GetChildren()) do
&#9;&#9;if v:IsA(&quot;Hat&quot;) then
&#9;&#9;&#9;local handle = v:FindFirstChild(&quot;Handle&quot;)
&#9;&#9;&#9;if handle then
&#9;&#9;&#9;&#9;local mesh = handle:FindFirstChild(&quot;Mesh&quot;)
&#9;&#9;&#9;&#9;if mesh and mesh.MeshId == CrownMesh.MeshId and mesh.TextureId == CrownMesh.TextureId then
&#9;&#9;&#9;&#9;&#9;return true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;return false
end

function Blow(Hit)
&#9;if Hit and Hit.Parent then
&#9;&#9;local character = Hit.Parent
&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;if Humanoid and Humanoid ~= humanoid and humanoid and Humanoid.Health &gt; 0 and humanoid.Health &gt; 0 then
&#9;&#9;&#9;local Right_Arm = Character:FindFirstChild(&quot;Right Arm&quot;)
&#9;&#9;&#9;if Right_Arm then
&#9;&#9;&#9;&#9;local Joint = Right_Arm:FindFirstChild(&quot;RightGrip&quot;)
&#9;&#9;&#9;&#9;if (Joint and (Joint.Part0 == Handle or Joint.Part1 == Handle)) then
&#9;&#9;&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage((Damage + ((CheckForCrown() and ExtraDamage) or 0)))
&#9;&#9;&#9;&#9;&#9;print((Damage + ((CheckForCrown() and ExtraDamage) or 0)))
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function CreateFakeHandle()
&#9;LeftSword = Handle:Clone()
&#9;LeftSword.Name = &quot;FakeHandle&quot;
&#9;LeftSword.CanCollide = false
&#9;
&#9;LeftSwordWeld = Instance.new(&quot;ManualWeld&quot;)
&#9;LeftSwordWeld.Part1 = LeftSword
&#9;LeftSwordWeld.C0 = CFrame.new(0, -1, 0, 1, 0, -0, 0, 0, 1, 0, -1, -0)
&#9;LeftSwordWeld.C1 = Tool.Grip
&#9;
&#9;local LeftArm = Character:FindFirstChild(&quot;Left Arm&quot;)
&#9;LeftSwordWeld.Part0 = LeftArm
&#9;LeftSword.Parent = Tool
&#9;LeftSwordWeld.Parent = LeftSword
&#9;
&#9;LeftSword.Touched:connect(Blow)&#9;
end

function Attack()
&#9;Spawn(function()
&#9;&#9;AttackReady = false
&#9;&#9;Damage = Slash_Damage
&#9;&#9;RandomSlashAnim = math.random(1, 2)
&#9;&#9;CurrentAnim = Humanoid:LoadAnimation((RandomSlashAnim == 1 and LeftSlash) or RightSlash)
&#9;&#9;SlashAnim = CurrentAnim
&#9;&#9;if SlashAnim then
&#9;&#9;&#9;SlashAnim:Play()
&#9;&#9;end
&#9;&#9;wait(0.5)
&#9;&#9;if SlashAnim then
&#9;&#9;&#9;SlashAnim:Stop()
&#9;&#9;end
&#9;&#9;Damage = Base_Damage
&#9;&#9;AttackReady = true
&#9;end)
end

function DoubleClick()
&#9;Spawn(function()
&#9;&#9;StrikeReady = false
&#9;&#9;AttackReady = false
&#9;&#9;Damage = Strike_Damage
&#9;&#9;NewAnimateClone.Disabled = true
&#9;&#9;CurrentAnim = Humanoid:LoadAnimation(Strike)
&#9;&#9;if CurrentAnim then
&#9;&#9;&#9;CurrentAnim:Play()
&#9;&#9;end
&#9;&#9;wait(1)
&#9;&#9;if CurrentAnim then
&#9;&#9;&#9;CurrentAnim:Stop()
&#9;&#9;end
&#9;&#9;NewAnimateClone.Disabled = false
&#9;&#9;Damage = Base_Damage
&#9;&#9;AttackReady = true
&#9;&#9;StrikeReady = true
&#9;end)
end

function Activated()
&#9;if Tool.Enabled and StrikeReady then
&#9;&#9;Tool.Enabled = false
&#9;&#9;local Time = RunService.Stepped:wait()
&#9;&#9;if (Time - Last_Attack) &lt; 0.2 then
&#9;&#9;&#9;DoubleClick()
&#9;&#9;elseif AttackReady then
&#9;&#9;&#9;Attack()
&#9;&#9;end
&#9;&#9;SlashSound:Play()
&#9;&#9;Last_Attack = Time
&#9;&#9;Tool.Enabled = true
&#9;end
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not Humanoid or Humanoid.Health == 0 or not Torso then
&#9;&#9;return
&#9;end
&#9;
&#9;wait()
&#9;
&#9;local FakeHandle = Tool:FindFirstChild(&quot;FakeHandle&quot;)
&#9;if FakeHandle then
&#9;&#9;FakeHandle:Destroy()
&#9;end

&#9;CreateFakeHandle()
&#9;
&#9;OldAnimate = Character:FindFirstChild(&quot;Animate&quot;)
&#9;if OldAnimate then
&#9;&#9;OldAnimate.Disabled = true
&#9;end
&#9;
&#9;NewAnimateClone = NewAnimate:Clone()
&#9;NewAnimateClone.Disabled = false
&#9;NewAnimateClone.Parent = Character
&#9;
end

function Unequipped()
&#9;StrikeReady = true
&#9;LeftSword:Destroy()
&#9;if CurrentAnim then
&#9;&#9;CurrentAnim:Stop()
&#9;end
&#9;if NewAnimateClone and NewAnimateClone.Parent then
&#9;&#9;NewAnimateClone:Destroy()
&#9;end
&#9;if OldAnimate and OldAnimate.Parent then
&#9;&#9;OldAnimate.Disabled = false
&#9;end
end

Handle.Touched:connect(Blow)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)
</ProtectedString>
			</Properties>
			<Item class="LocalScript" referent="RBX2">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">NewAnimate</string>
					<ProtectedString name="Source">function   waitForChild(parent, childName)
&#9;local child = parent:findFirstChild(childName)
&#9;if child then return child end
&#9;while true do
&#9;&#9;child = parent.ChildAdded:wait()
&#9;&#9;if child.Name==childName then return child end
&#9;end
end

local Figure = script.Parent
local Torso = waitForChild(Figure, &quot;Torso&quot;)
local RightShoulder = waitForChild(Torso, &quot;Right Shoulder&quot;)
local LeftShoulder = waitForChild(Torso, &quot;Left Shoulder&quot;)
local RightHip = waitForChild(Torso, &quot;Right Hip&quot;)
local LeftHip = waitForChild(Torso, &quot;Left Hip&quot;)
local Neck = waitForChild(Torso, &quot;Neck&quot;)
local Humanoid = waitForChild(Figure, &quot;Humanoid&quot;)
local pose = &quot;Standing&quot;

local currentAnim = &quot;&quot;
local currentAnimTrack = nil
local currentAnimKeyframeHandler = nil
local currentAnimSpeed = 1.0
local oldAnimTrack = nil
local animTable = {}
local animNames = { 
&#9;idle = &#9;{&#9;
&#9;&#9;&#9;&#9;{ id = &quot;http://www.roblox.com/asset/?id=125750544&quot;, weight = 9 },
&#9;&#9;&#9;&#9;{ id = &quot;http://www.roblox.com/asset/?id=125750618&quot;, weight = 1 }
&#9;&#9;&#9;},
&#9;walk = &#9;{ &#9;
&#9;&#9;&#9;&#9;{ id = &quot;http://www.roblox.com/asset/?id=125749145&quot;, weight = 10 } 
&#9;&#9;&#9;}, 
&#9;run = &#9;{
&#9;&#9;&#9;&#9;{ id = &quot;run.xml&quot;, weight = 10 } 
&#9;&#9;&#9;}, 
&#9;jump = &#9;{
&#9;&#9;&#9;&#9;{ id = &quot;http://www.roblox.com/asset/?id=125750702&quot;, weight = 10 } 
&#9;&#9;&#9;}, 
&#9;fall = &#9;{
&#9;&#9;&#9;&#9;{ id = &quot;http://www.roblox.com/asset/?id=125750759&quot;, weight = 10 } 
&#9;&#9;&#9;}, 
&#9;climb = {
&#9;&#9;&#9;&#9;{ id = &quot;http://www.roblox.com/asset/?id=125750800&quot;, weight = 10 } 
&#9;&#9;&#9;}, 
&#9;toolnone = {
&#9;&#9;&#9;&#9;{ id = &quot;http://www.roblox.com/asset/?id=125750867&quot;, weight = 10 } 
&#9;&#9;&#9;},
&#9;toolslash = {
&#9;&#9;&#9;&#9;{ id = &quot;http://www.roblox.com/asset/?id=129967390&quot;, weight = 10 } 
--&#9;&#9;&#9;&#9;{ id = &quot;slash.xml&quot;, weight = 10 } 
&#9;&#9;&#9;},
&#9;toollunge = {
&#9;&#9;&#9;&#9;{ id = &quot;http://www.roblox.com/asset/?id=129967478&quot;, weight = 10 } 
&#9;&#9;&#9;},
&#9;wave = {
&#9;&#9;&#9;&#9;{ id = &quot;http://www.roblox.com/asset/?id=128777973&quot;, weight = 10 } 
&#9;&#9;&#9;},
&#9;point = {
&#9;&#9;&#9;&#9;{ id = &quot;http://www.roblox.com/asset/?id=128853357&quot;, weight = 10 } 
&#9;&#9;&#9;},
&#9;dance = {
&#9;&#9;&#9;&#9;{ id = &quot;http://www.roblox.com/asset/?id=130018893&quot;, weight = 10 }, 
&#9;&#9;&#9;&#9;{ id = &quot;http://www.roblox.com/asset/?id=132546839&quot;, weight = 10 }, 
&#9;&#9;&#9;&#9;{ id = &quot;http://www.roblox.com/asset/?id=132546884&quot;, weight = 10 } 
&#9;&#9;&#9;},
&#9;laugh = {
&#9;&#9;&#9;&#9;{ id = &quot;http://www.roblox.com/asset/?id=129423131&quot;, weight = 10 } 
&#9;&#9;&#9;},
&#9;cheer = {
&#9;&#9;&#9;&#9;{ id = &quot;http://www.roblox.com/asset/?id=129423030&quot;, weight = 10 } 
&#9;&#9;&#9;},
}

-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
local emoteNames = { wave = false, point = false, dance = true, laugh = false, cheer = false}

math.randomseed(tick())

-- Setup animation objects
for name, fileList in pairs(animNames) do 
&#9;animTable[name] = {}
&#9;animTable[name].count = 0
&#9;animTable[name].totalWeight = 0

&#9;-- check for config values
&#9;local config = script:FindFirstChild(name)
&#9;if (config ~= nil) then
--&#9;&#9;print(&quot;Loading anims &quot; .. name)
&#9;&#9;local idx = 1
&#9;&#9;for _, childPart in pairs(config:GetChildren()) do
&#9;&#9;&#9;animTable[name][idx] = {}
&#9;&#9;&#9;animTable[name][idx].anim = childPart
&#9;&#9;&#9;local weightObject = childPart:FindFirstChild(&quot;Weight&quot;)
&#9;&#9;&#9;if (weightObject == nil) then
&#9;&#9;&#9;&#9;animTable[name][idx].weight = 1
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;animTable[name][idx].weight = weightObject.Value
&#9;&#9;&#9;end
&#9;&#9;&#9;animTable[name].count = animTable[name].count + 1
&#9;&#9;&#9;animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
--&#9;&#9;&#9;print(name .. &quot; [&quot; .. idx .. &quot;] &quot; .. animTable[name][idx].anim.AnimationId .. &quot; (&quot; .. animTable[name][idx].weight .. &quot;)&quot;)
&#9;&#9;&#9;idx = idx + 1
&#9;&#9;end
&#9;end

&#9;-- fallback to defaults
&#9;if (animTable[name].count &lt;= 0) then
&#9;&#9;for idx, anim in pairs(fileList) do
&#9;&#9;&#9;animTable[name][idx] = {}
&#9;&#9;&#9;animTable[name][idx].anim = Instance.new(&quot;Animation&quot;)
&#9;&#9;&#9;animTable[name][idx].anim.Name = name
&#9;&#9;&#9;animTable[name][idx].anim.AnimationId = anim.id
&#9;&#9;&#9;animTable[name][idx].weight = anim.weight
&#9;&#9;&#9;animTable[name].count = animTable[name].count + 1
&#9;&#9;&#9;animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
--&#9;&#9;&#9;print(name .. &quot; [&quot; .. idx .. &quot;] &quot; .. anim.id .. &quot; (&quot; .. anim.weight .. &quot;)&quot;)
&#9;&#9;end
&#9;end
end

-- ANIMATION

-- declarations
local toolAnim = &quot;None&quot;
local toolAnimTime = 0

local jumpAnimTime = 0
local jumpAnimDuration = 0.175

local toolTransitionTime = 0.1
local fallTransitionTime = 0.2
local jumpMaxLimbVelocity = 0.75

-- functions

function stopAllAnimations()
&#9;local oldAnim = currentAnim

&#9;-- return to idle if finishing an emote
&#9;if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
&#9;&#9;oldAnim = &quot;idle&quot;
&#9;end

&#9;currentAnim = &quot;&quot;
&#9;if (currentAnimKeyframeHandler ~= nil) then
&#9;&#9;currentAnimKeyframeHandler:disconnect()
&#9;end

&#9;if (oldAnimTrack ~= nil) then
&#9;&#9;oldAnimTrack:Stop()
&#9;&#9;oldAnimTrack:Destroy()
&#9;&#9;oldAnimTrack = nil
&#9;end
&#9;if (currentAnimTrack ~= nil) then
&#9;&#9;currentAnimTrack:Stop()
&#9;&#9;currentAnimTrack:Destroy()
&#9;&#9;currentAnimTrack = nil
&#9;end
&#9;return oldAnim
end

function setAnimationSpeed(speed)
&#9;if speed ~= currentAnimSpeed then
&#9;&#9;currentAnimSpeed = speed
&#9;&#9;currentAnimTrack:AdjustSpeed(currentAnimSpeed)
&#9;end
end

function keyFrameReachedFunc(frameName)
&#9;if (frameName == &quot;End&quot;) then
--&#9;&#9;print(&quot;Keyframe : &quot;.. frameName)
&#9;&#9;local repeatAnim = stopAllAnimations()
&#9;&#9;local animSpeed = currentAnimSpeed
&#9;&#9;playAnimation(repeatAnim, 0.0, Humanoid)
&#9;&#9;setAnimationSpeed(animSpeed)
&#9;end
end

-- Preload animations
function playAnimation(animName, transitionTime, humanoid)
&#9;if (animName ~= currentAnim) then&#9;&#9; 
&#9;&#9;
&#9;&#9;if (oldAnimTrack ~= nil) then
&#9;&#9;&#9;oldAnimTrack:Stop()
&#9;&#9;&#9;oldAnimTrack:Destroy()
&#9;&#9;end

&#9;&#9;currentAnimSpeed = 1.0
&#9;&#9;local roll = math.random(1, animTable[animName].totalWeight) 
&#9;&#9;local origRoll = roll
&#9;&#9;local idx = 1
&#9;&#9;while (roll &gt; animTable[animName][idx].weight) do
&#9;&#9;&#9;roll = roll - animTable[animName][idx].weight
&#9;&#9;&#9;idx = idx + 1
&#9;&#9;end
--&#9;&#9;print(animName .. &quot; &quot; .. idx .. &quot; [&quot; .. origRoll .. &quot;]&quot;)
&#9;&#9;local anim = animTable[animName][idx].anim

&#9;&#9;-- load it to the humanoid; get AnimationTrack
&#9;&#9;oldAnimTrack = currentAnimTrack
&#9;&#9;currentAnimTrack = humanoid:LoadAnimation(anim)
&#9;&#9; 
&#9;&#9;-- play the animation
&#9;&#9;currentAnimTrack:Play(transitionTime)
&#9;&#9;currentAnim = animName

&#9;&#9;-- set up keyframe name triggers
&#9;&#9;if (currentAnimKeyframeHandler ~= nil) then
&#9;&#9;&#9;currentAnimKeyframeHandler:disconnect()
&#9;&#9;end
&#9;&#9;currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
&#9;end
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

local toolAnimName = &quot;&quot;
local toolOldAnimTrack = nil
local toolAnimTrack = nil
local currentToolAnimKeyframeHandler = nil

function toolKeyFrameReachedFunc(frameName)
&#9;if (frameName == &quot;End&quot;) then
--&#9;&#9;print(&quot;Keyframe : &quot;.. frameName)
&#9;&#9;local repeatAnim = stopToolAnimations()
&#9;&#9;playToolAnimation(repeatAnim, 0.0, Humanoid)
&#9;end
end


function playToolAnimation(animName, transitionTime, humanoid)
&#9;if (animName ~= toolAnimName) then&#9;&#9; 
&#9;&#9;
&#9;&#9;if (toolAnimTrack ~= nil) then
&#9;&#9;&#9;toolAnimTrack:Stop()
&#9;&#9;&#9;toolAnimTrack:Destroy()
&#9;&#9;&#9;transitionTime = 0
&#9;&#9;end

&#9;&#9;local roll = math.random(1, animTable[animName].totalWeight) 
&#9;&#9;local origRoll = roll
&#9;&#9;local idx = 1
&#9;&#9;while (roll &gt; animTable[animName][idx].weight) do
&#9;&#9;&#9;roll = roll - animTable[animName][idx].weight
&#9;&#9;&#9;idx = idx + 1
&#9;&#9;end
--&#9;&#9;print(animName .. &quot; * &quot; .. idx .. &quot; [&quot; .. origRoll .. &quot;]&quot;)
&#9;&#9;local anim = animTable[animName][idx].anim

&#9;&#9;-- load it to the humanoid; get AnimationTrack
&#9;&#9;toolOldAnimTrack = toolAnimTrack
&#9;&#9;toolAnimTrack = humanoid:LoadAnimation(anim)
&#9;&#9; 
&#9;&#9;-- play the animation
&#9;&#9;toolAnimTrack:Play(transitionTime)
&#9;&#9;toolAnimName = animName

&#9;&#9;currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
&#9;end
end

function stopToolAnimations()
&#9;local oldAnim = toolAnimName

&#9;if (currentToolAnimKeyframeHandler ~= nil) then
&#9;&#9;currentToolAnimKeyframeHandler:disconnect()
&#9;end

&#9;toolAnimName = &quot;&quot;
&#9;if (toolAnimTrack ~= nil) then
&#9;&#9;toolAnimTrack:Stop()
&#9;&#9;toolAnimTrack:Destroy()
&#9;&#9;toolAnimTrack = nil
&#9;end


&#9;return oldAnim
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------


function onRunning(speed)
&#9;if speed&gt;0 then
&#9;&#9;playAnimation(&quot;walk&quot;, 0.1, Humanoid)
&#9;&#9;pose = &quot;Running&quot;
&#9;else
&#9;&#9;playAnimation(&quot;idle&quot;, 0.1, Humanoid)
&#9;&#9;pose = &quot;Standing&quot;
&#9;end
end

function onDied()
&#9;pose = &quot;Dead&quot;
end

function onJumping()
&#9;playAnimation(&quot;jump&quot;, 0.1, Humanoid)
&#9;jumpAnimTime = jumpAnimDuration
&#9;pose = &quot;Jumping&quot;
end

function onClimbing(speed)
&#9;playAnimation(&quot;climb&quot;, 0.1, Humanoid)
&#9;setAnimationSpeed(speed / 12.0)
&#9;pose = &quot;Climbing&quot;
end

function onGettingUp()
&#9;pose = &quot;GettingUp&quot;
end

function onFreeFall()
&#9;if (jumpAnimTime &lt;= 0) then
&#9;&#9;playAnimation(&quot;fall&quot;, fallTransitionTime, Humanoid)
&#9;end
&#9;pose = &quot;FreeFall&quot;
end

function onFallingDown()
&#9;pose = &quot;FallingDown&quot;
end

function onSeated()
&#9;pose = &quot;Seated&quot;
end

function onPlatformStanding()
&#9;pose = &quot;PlatformStanding&quot;
end

function onSwimming(speed)
&#9;if speed&gt;0 then
&#9;&#9;pose = &quot;Running&quot;
&#9;else
&#9;&#9;pose = &quot;Standing&quot;
&#9;end
end

function getTool()&#9;
&#9;for _, kid in ipairs(Figure:GetChildren()) do
&#9;&#9;if kid.className == &quot;Tool&quot; then return kid end
&#9;end
&#9;return nil
end

function getToolAnim(tool)
&#9;for _, c in ipairs(tool:GetChildren()) do
&#9;&#9;if c.Name == &quot;toolanim&quot; and c.className == &quot;StringValue&quot; then
&#9;&#9;&#9;return c
&#9;&#9;end
&#9;end
&#9;return nil
end

function animateTool()
&#9;
&#9;if (toolAnim == &quot;None&quot;) then
--&#9;&#9;playToolAnimation(&quot;toolnone&quot;, toolTransitionTime, Humanoid)
&#9;&#9;return
&#9;end

&#9;if (toolAnim == &quot;Slash&quot;) then
&#9;&#9;playToolAnimation(&quot;toolslash&quot;, 0, Humanoid)
&#9;&#9;return
&#9;end

&#9;if (toolAnim == &quot;Lunge&quot;) then
&#9;&#9;playToolAnimation(&quot;toollunge&quot;, 0, Humanoid)
&#9;&#9;return
&#9;end
end

function moveSit()
&#9;RightShoulder.MaxVelocity = 0.15
&#9;LeftShoulder.MaxVelocity = 0.15
&#9;RightShoulder:SetDesiredAngle(3.14 /2)
&#9;LeftShoulder:SetDesiredAngle(-3.14 /2)
&#9;RightHip:SetDesiredAngle(3.14 /2)
&#9;LeftHip:SetDesiredAngle(-3.14 /2)
end

local lastTick = 0

function move(time)
&#9;local amplitude = 1
&#9;local frequency = 1
  &#9;local deltaTime = time - lastTick
  &#9;lastTick = time

&#9;local climbFudge = 0
&#9;local setAngles = false

  &#9;if (jumpAnimTime &gt; 0) then
  &#9;&#9;jumpAnimTime = jumpAnimTime - deltaTime
  &#9;end

&#9;if (pose == &quot;FreeFall&quot; and jumpAnimTime &lt;= 0) then
&#9;&#9;playAnimation(&quot;fall&quot;, fallTransitionTime, Humanoid)
&#9;elseif (pose == &quot;Seated&quot;) then
&#9;&#9;stopAllAnimations()
&#9;&#9;moveSit()
&#9;&#9;return
&#9;elseif (pose == &quot;Running&quot;) then
&#9;&#9;playAnimation(&quot;walk&quot;, 0.1, Humanoid)
&#9;elseif (pose == &quot;Dead&quot; or pose == &quot;GettingUp&quot; or pose == &quot;FallingDown&quot; or pose == &quot;Seated&quot; or pose == &quot;PlatformStanding&quot;) then
--&#9;&#9;print(&quot;Wha &quot; .. pose)
&#9;&#9;amplitude = 0.1
&#9;&#9;frequency = 1
&#9;&#9;setAngles = true
&#9;end

&#9;if (setAngles) then
&#9;&#9;desiredAngle = amplitude * math.sin(time * frequency)

&#9;&#9;RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
&#9;&#9;LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
&#9;&#9;RightHip:SetDesiredAngle(-desiredAngle)
&#9;&#9;LeftHip:SetDesiredAngle(-desiredAngle)
&#9;end

&#9;-- Tool Animation handling
&#9;local tool = getTool()
&#9;if tool then
&#9;
&#9;&#9;animStringValueObject = getToolAnim(tool)

&#9;&#9;if animStringValueObject then
&#9;&#9;&#9;toolAnim = animStringValueObject.Value
&#9;&#9;&#9;-- message recieved, delete StringValue
&#9;&#9;&#9;animStringValueObject.Parent = nil
&#9;&#9;&#9;toolAnimTime = time + .3
&#9;&#9;end

&#9;&#9;if time &gt; toolAnimTime then
&#9;&#9;&#9;toolAnimTime = 0
&#9;&#9;&#9;toolAnim = &quot;None&quot;
&#9;&#9;end

&#9;&#9;animateTool()&#9;&#9;
&#9;else
&#9;&#9;stopToolAnimations()
&#9;&#9;toolAnim = &quot;None&quot;
&#9;&#9;toolAnimTime = 0
&#9;end
end

-- connect events
Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(onJumping)
Humanoid.Climbing:connect(onClimbing)
Humanoid.GettingUp:connect(onGettingUp)
Humanoid.FreeFalling:connect(onFreeFall)
Humanoid.FallingDown:connect(onFallingDown)
Humanoid.Seated:connect(onSeated)
Humanoid.PlatformStanding:connect(onPlatformStanding)
Humanoid.Swimming:connect(onSwimming)

-- setup emote chat hook
Game.Players.LocalPlayer.Chatted:connect(function(msg)
&#9;local emote = &quot;&quot;
&#9;if (string.sub(msg, 1, 3) == &quot;/e &quot;) then
&#9;&#9;emote = string.sub(msg, 4)
&#9;elseif (string.sub(msg, 1, 7) == &quot;/emote &quot;) then
&#9;&#9;emote = string.sub(msg, 8)
&#9;end
&#9;
&#9;if (pose == &quot;Standing&quot; and emoteNames[emote] ~= nil) then
&#9;&#9;playAnimation(emote, 0.1, Humanoid)
&#9;end
--&#9;print(&quot;===&gt; &quot; .. string.sub(msg, 1, 3) .. &quot;(&quot; .. emote .. &quot;)&quot;)
end)


-- main program

local runService = game:service(&quot;RunService&quot;);

-- initialize to idle
playAnimation(&quot;idle&quot;, 0.1, Humanoid)
pose = &quot;Standing&quot;

while Figure.Parent~=nil do
&#9;local _, time = wait(0.1)
&#9;move(time)
end


</ProtectedString>
				</Properties>
				<Item class="StringValue" referent="RBX3">
					<Properties>
						<string name="Name">idle</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX4">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750544</url></Content>
							<string name="Name">Animation1</string>
						</Properties>
						<Item class="NumberValue" referent="RBX5">
							<Properties>
								<string name="Name">Weight</string>
								<double name="Value">9</double>
							</Properties>
						</Item>
					</Item>
					<Item class="Animation" referent="RBX6">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750618</url></Content>
							<string name="Name">Animation2</string>
						</Properties>
						<Item class="NumberValue" referent="RBX7">
							<Properties>
								<string name="Name">Weight</string>
								<double name="Value">1</double>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX8">
					<Properties>
						<string name="Name">walk</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX9">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125749145</url></Content>
							<string name="Name">WalkAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX10">
					<Properties>
						<string name="Name">run</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX11">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125749145</url></Content>
							<string name="Name">RunAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX12">
					<Properties>
						<string name="Name">jump</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX13">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750702</url></Content>
							<string name="Name">JumpAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX14">
					<Properties>
						<string name="Name">climb</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX15">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750800</url></Content>
							<string name="Name">ClimbAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX16">
					<Properties>
						<string name="Name">toolnone</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX17">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750867</url></Content>
							<string name="Name">ToolNoneAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX18">
					<Properties>
						<string name="Name">fall</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX19">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750759</url></Content>
							<string name="Name">FallAnim</string>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="Script" referent="RBX20">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">KillFakeHandle</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
FakeHandle = Tool:WaitForChild(&quot;FakeHandleDisplay&quot;)

FakeHandle:Destroy()</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX21">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=159864898</url></Content>
				<string name="Name">LeftSlash</string>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX22">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>5.98183918</X>
					<Y>29.138731</Y>
					<Z>1.1867156</Z>
					<R00>-0.793518186</R00>
					<R01>-0.608536005</R01>
					<R02>-0.00121202657</R02>
					<R10>0.000909621886</R10>
					<R11>0.000805740128</R11>
					<R12>-0.999998093</R12>
					<R20>0.608535469</R20>
					<R21>-0.793518007</R21>
					<R22>-8.44827737e-005</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.5</X>
					<Y>0.5</Y>
					<Z>2</Z>
				</Vector3>
			</Properties>
			<Item class="Sound" referent="RBX23">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">SlashSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds//swordslash.wav</url></Content>
					<float name="Volume">0.699999988</float>
				</Properties>
			</Item>
			<Item class="SpecialMesh" referent="RBX24">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset?id=165709613</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=165709650</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBX25">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=159864833</url></Content>
				<string name="Name">RightSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX26">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=166264948</url></Content>
				<string name="Name">Strike</string>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX27">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>7.8451004</X>
					<Y>26.7900143</Y>
					<Z>-1.31385708</Z>
					<R00>-0.792966366</R00>
					<R01>5.3900294e-006</R01>
					<R02>-0.609259188</R02>
					<R10>-2.4784822e-007</R10>
					<R11>0.999999225</R11>
					<R12>9.27801011e-006</R12>
					<R20>0.609258473</R20>
					<R21>6.60851219e-006</R21>
					<R22>-0.792965889</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">FakeHandleDisplay</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.5</X>
					<Y>0.5</Y>
					<Z>2</Z>
				</Vector3>
			</Properties>
			<Item class="Sound" referent="RBX28">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">SlashSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds//swordslash.wav</url></Content>
					<float name="Volume">0.699999988</float>
				</Properties>
			</Item>
			<Item class="SpecialMesh" referent="RBX29">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset?id=165709613</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=165709650</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Weld" referent="RBX30">
				<Properties>
					<CoordinateFrame name="C0">
						<X>15.3150377</X>
						<Y>14.5000963</Y>
						<Z>4.26434851</Z>
						<R00>-0.793521285</R00>
						<R01>0.000909870083</R01>
						<R02>0.608538389</R02>
						<R10>-0.60853821</R10>
						<R11>0.000805363699</R11>
						<R12>-0.793521523</R12>
						<R20>-0.00121206418</R20>
						<R21>-0.999998868</R21>
						<R22>-8.49328353e-005</R22>
					</CoordinateFrame>
					<CoordinateFrame name="C1">
						<X>18.3067036</X>
						<Y>-1.89013374</Y>
						<Z>13.669734</Z>
						<R00>-0.792969465</R00>
						<R01>-3.49989715e-022</R01>
						<R02>0.609261394</R02>
						<R10>5.42312864e-006</R10>
						<R11>1</R11>
						<R12>7.05834236e-006</R12>
						<R20>-0.609261394</R20>
						<R21>8.9011528e-006</R21>
						<R22>-0.792969465</R22>
					</CoordinateFrame>
					<string name="Name">DisplayWeld</string>
					<Ref name="Part0">RBX22</Ref>
					<Ref name="Part1">RBX27</Ref>
				</Properties>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX31">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">5</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>4.17011118</X>
					<Y>29.1403828</Y>
					<Z>1.67605078</Z>
					<R00>0.515488863</R00>
					<R01>0.0357497633</R01>
					<R02>-0.85615027</R02>
					<R10>1.86264515e-009</R10>
					<R11>0.999129415</R11>
					<R12>0.041720055</R12>
					<R20>0.856896341</R20>
					<R21>-0.0215062257</R21>
					<R22>0.51504004</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>5.45433712</X>
					<Y>29.0778027</Y>
					<Z>0.903490424</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>