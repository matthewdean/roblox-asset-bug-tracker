<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0.0500000007</X>
				<Y>-0.600000024</Y>
				<Z>-0.799999952</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">RocketJumper</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=168893842</url></Content>
			<string name="ToolTip">Seranok&apos;s Rocket Jumper</string>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>76.6298218</X>
					<Y>95.997261</Y>
					<Z>-22.2357521</Z>
					<R00>-0.628678381</R00>
					<R01>-0.000619234925</R01>
					<R02>0.777665079</R02>
					<R10>3.76504251e-022</R10>
					<R11>0.999999642</R11>
					<R12>0.000796274282</R12>
					<R20>-0.777665257</R20>
					<R21>0.000500600494</R21>
					<R22>-0.628678203</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.839999974</X>
					<Y>1.14999998</Y>
					<Z>3.55000019</Z>
				</Vector3>
			</Properties>
			<Item class="Sound" referent="RBX2">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">ReloadSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/Asset?ID=94132726</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX3">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Equip</string>
					<float name="Pitch">1.33000004</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/Asset?ID=97103817</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="SpecialMesh" referent="RBX4">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=168894022 </url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.5</X>
						<Y>1.5</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=168893936 </url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX5">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Animation</string>
				<ProtectedString name="Source">--------------------
--| WaitForChild |--
--------------------

-- Waits for parent.child to exist, then returns it
local function WaitForChild(parent, childName)
&#9;assert(parent, &quot;ERROR: WaitForChild: parent is nil&quot;)
&#9;while not parent:FindFirstChild(childName) do parent.ChildAdded:wait() end
&#9;return parent[childName]
end

-----------------
--| Variables |--
-----------------

local Tool = script.Parent

local FireAndReloadAnimation = WaitForChild(script, &apos;FireAndReload&apos;)

local FireAndReloadTrack = nil

-----------------
--| Functions |--
-----------------

local function OnEquipped()
&#9;local myModel = Tool.Parent
&#9;local humanoid = myModel:FindFirstChild(&apos;Humanoid&apos;)
&#9;if humanoid then -- Preload animations
&#9;&#9;FireAndReloadTrack = humanoid:LoadAnimation(FireAndReloadAnimation)
&#9;end
end

local function OnChanged(property)
&#9;if property == &apos;Enabled&apos; and Tool.Enabled == false then
&#9;&#9;-- Play fire and reload animation
&#9;&#9;if FireAndReloadTrack then
&#9;&#9;&#9;FireAndReloadTrack:Play()
&#9;&#9;end
&#9;end
end

local function OnUnequipped()
&#9;-- Stop animations
&#9;if FireAndReloadTrack then FireAndReloadTrack:Stop() end
end

--------------------
--| Script Logic |--
--------------------

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
Tool.Unequipped:connect(OnUnequipped)
</ProtectedString>
			</Properties>
			<Item class="Animation" referent="RBX6">
				<Properties>
					<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=94771598</url></Content>
					<string name="Name">FireAndReload</string>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX7">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">local MOUSE_ICON = &apos;rbxasset://textures/GunCursor.png&apos;
local RELOADING_ICON = &apos;rbxasset://textures/GunWaitCursor.png&apos;

local Tool = script.Parent

local Mouse = nil

local function UpdateIcon()
&#9;Mouse.Icon = Tool.Enabled and MOUSE_ICON or RELOADING_ICON
end

local function OnEquipped(mouse)
&#9;Mouse = mouse
&#9;UpdateIcon()
end

local function OnChanged(property)
&#9;if property == &apos;Enabled&apos; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX8">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">VisualizeReload</string>
				<ProtectedString name="Source">-----------------
--| Constants |--
-----------------

local ROCKET_MESH_ID = &apos;http://www.roblox.com/asset/?id=94690081&apos;
local ROCKET_MESH_SCALE = Vector3.new(1, 1, 1)

local ROCKET_SHOW_TIME = 1.5 -- Seconds after animation begins to show the rocket
local ROCKET_HIDE_TIME = 2.2 -- Seconds after animation begins to hide the rocket

-----------------
--| Variables |--
-----------------

local Tool = script.Parent
local ToolHandle = Tool.Handle

local MyModel = nil
local ReloadRocket = nil

local StillEquipped = false

-----------------
--| Functions |--
-----------------

local function MakeReloadRocket()
&#9;local reloadRocket = Instance.new(&apos;Part&apos;)
&#9;reloadRocket.Name = &quot;Ammo&quot;
&#9;reloadRocket.FormFactor = Enum.FormFactor.Custom --NOTE: This must be done before changing Size
&#9;reloadRocket.Size = Vector3.new() -- As small as possible

&#9;local mesh = Instance.new(&apos;SpecialMesh&apos;, reloadRocket)
&#9;mesh.MeshId = ROCKET_MESH_ID
&#9;mesh.Scale = ROCKET_MESH_SCALE
&#9;mesh.TextureId = ToolHandle.Mesh.TextureId

&#9;return reloadRocket
end

local function OnEquipped()
&#9;MyModel = Tool.Parent
&#9;ReloadRocket = MakeReloadRocket()
end

local function OnChanged(property)
&#9;if property == &apos;Enabled&apos; and Tool.Enabled == false then
&#9;&#9;-- Show the next rocket going into the launcher
&#9;&#9;StillEquipped = true
&#9;&#9;wait(ROCKET_SHOW_TIME)
&#9;&#9;if StillEquipped then
&#9;&#9;&#9;local torso = MyModel:FindFirstChild(&apos;Torso&apos;)
&#9;&#9;&#9;if torso and torso:FindFirstChild(&apos;Left Shoulder&apos;) then
&#9;&#9;&#9;&#9;local leftArm = MyModel:FindFirstChild(&apos;Left Arm&apos;)
&#9;&#9;&#9;&#9;if leftArm then
&#9;&#9;&#9;&#9;&#9;local weld = ReloadRocket:FindFirstChild(&apos;Weld&apos;)
&#9;&#9;&#9;&#9;&#9;if not weld then
&#9;&#9;&#9;&#9;&#9;&#9;weld = Instance.new(&apos;Weld&apos;)
&#9;&#9;&#9;&#9;&#9;&#9;weld.Part0 = leftArm
&#9;&#9;&#9;&#9;&#9;&#9;weld.Part1 = ReloadRocket
&#9;&#9;&#9;&#9;&#9;&#9;weld.C1 = CFrame.new(Vector3.new(0, 1, 0))
&#9;&#9;&#9;&#9;&#9;&#9;weld.Parent = ReloadRocket
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;ReloadRocket.Parent = MyModel
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;wait(ROCKET_HIDE_TIME - ROCKET_SHOW_TIME)
&#9;&#9;&#9;&#9;if StillEquipped and ReloadRocket.Parent == MyModel then
&#9;&#9;&#9;&#9;&#9;ReloadRocket.Parent = nil
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

local function OnUnequipped()
&#9;StillEquipped = false
&#9;ReloadRocket:Destroy()
&#9;ReloadRocket = nil
end

--------------------
--| Script Logic |--
--------------------

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
Tool.Unequipped:connect(OnUnequipped)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX9">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>77.3738785</X>
					<Y>96.6322174</Y>
					<Z>-18.577486</Z>
					<R00>0.946653664</R00>
					<R01>-0.0587284602</R01>
					<R02>0.316856354</R02>
					<R10>-3.72529074e-009</R10>
					<R11>0.983253539</R11>
					<R12>0.182243332</R12>
					<R20>-0.322253019</R20>
					<R21>-0.172521323</R21>
					<R22>0.930800378</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>76.7401657</X>
					<Y>96.2677307</Y>
					<Z>-20.4390869</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
		<Item class="RemoteEvent" referent="RBX10">
			<Properties>
				<string name="Name">FireRocket</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX11">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">CreateAndFireRocket</string>
				<ProtectedString name="Source">-- RocketPropulsion Fields
local TARGET_RADIUS = 5
local MAX_SPEED = 150--60
local MAX_TORQUE = Vector3.new(40, 40, 0)
local MAX_THRUST = 40000
local THRUST_P = 100--500
local THRUST_D = 5

local DebrisService = Game:GetService(&apos;Debris&apos;)
local SwooshSound = script:WaitForChild(&apos;Swoosh&apos;)
local BoomSound = script:WaitForChild(&apos;Boom&apos;)

local TARGET_OVERSHOOT_DISTANCE = 10000000

local ROCKET_MESH_ID = &apos;http://www.roblox.com/asset/?id=168893996&apos;
local ROCKET_MESH_SCALE = Vector3.new(1, 1, 1)
local ROCKET_PART_SIZE = Vector3.new(2, 2, 4)

script.Parent.FireRocket.OnServerEvent:connect(function(MyPlayer, targetPosition, spawnPosition)
&#9;
&#9;local function MakeBaseRocket()
&#9;&#9;-- Set up the rocket part
&#9;&#9;local rocket = Instance.new(&apos;Part&apos;)
&#9;&#9;rocket.Name = &apos;Rocket&apos;
&#9;&#9;rocket.FormFactor = Enum.FormFactor.Custom --NOTE: This must be done before changing Size
&#9;&#9;rocket.Size = ROCKET_PART_SIZE
&#9;&#9;rocket.CanCollide = false
&#9;&#9;rocket.BottomSurface = Enum.SurfaceType.Smooth
&#9;&#9;rocket.TopSurface = Enum.SurfaceType.Smooth
&#9;
&#9;&#9;-- Add the mesh
&#9;&#9;local mesh = Instance.new(&apos;SpecialMesh&apos;, rocket)
&#9;&#9;mesh.MeshId = ROCKET_MESH_ID
&#9;&#9;mesh.Scale = ROCKET_MESH_SCALE
&#9;&#9;mesh.TextureId = &quot;http://www.roblox.com/asset/?id=168893936&quot;
&#9;
&#9;&#9;-- Add fire
&#9;&#9;local fire = Instance.new(&apos;Fire&apos;, rocket)
&#9;&#9;fire.Heat = 5
&#9;&#9;fire.Size = 2
&#9;
&#9;&#9;-- Add the propulsion
&#9;&#9;local rocketPropulsion = Instance.new(&apos;RocketPropulsion&apos;, rocket)
&#9;&#9;rocketPropulsion.CartoonFactor = 1
&#9;&#9;rocketPropulsion.TargetRadius = TARGET_RADIUS
&#9;&#9;rocketPropulsion.MaxSpeed = MAX_SPEED
&#9;&#9;rocketPropulsion.MaxTorque = MAX_TORQUE
&#9;&#9;rocketPropulsion.MaxThrust = MAX_THRUST
&#9;&#9;rocketPropulsion.ThrustP = THRUST_P
&#9;&#9;rocketPropulsion.ThrustD = THRUST_D
&#9;&#9;
&#9;&#9;-- Clone the sounds
&#9;&#9;local swooshSoundClone = SwooshSound:Clone()
&#9;&#9;swooshSoundClone.Parent = rocket
&#9;&#9;local boomSoundClone = BoomSound:Clone()
&#9;&#9;boomSoundClone.PlayOnRemove = true
&#9;&#9;boomSoundClone.Parent = rocket
&#9;
&#9;&#9;-- Attach creator tags
&#9;&#9;local creatorTag = Instance.new(&apos;ObjectValue&apos;, rocket)
&#9;&#9;creatorTag.Name = &apos;creator&apos; --NOTE: Must be called &apos;creator&apos; for website stats
&#9;&#9;creatorTag.Value = MyPlayer
&#9;
&#9;&#9;-- Finally, clone the rocket script and enable it
&#9;&#9;local rocketScriptClone = script:WaitForChild(&quot;Rocket&quot;):Clone()
&#9;&#9;rocketScriptClone.Parent = rocket
&#9;&#9;rocketScriptClone.Disabled = false
&#9;&#9;
&#9;&#9;return rocket
&#9;end
&#9;
&#9;local RocketClone = MakeBaseRocket()
&#9;
&#9;RocketClone.CFrame = CFrame.new(spawnPosition, targetPosition) --NOTE: This must be done before assigning Parent
&#9;DebrisService:AddItem(RocketClone, 30)
&#9;RocketClone.Parent = Workspace
&#9;
&#9;-- Assign target and launch!
&#9;local rocketPropulsion = RocketClone:FindFirstChild(&apos;RocketPropulsion&apos;)
&#9;if rocketPropulsion then
&#9;&#9;local direction = (targetPosition - RocketClone.Position).unit
&#9;&#9;rocketPropulsion.TargetOffset = RocketClone.Position + (direction * TARGET_OVERSHOOT_DISTANCE)
&#9;&#9;rocketPropulsion:Fire()
&#9;end
&#9;
end)</ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX12">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Rocket</string>
					<ProtectedString name="Source">-----------------
--| Constants |--
-----------------

local BLAST_RADIUS = 7
local BLAST_PRESSURE = 1000000

local IGNORE_LIST = {rocket = 1, handle = 1, effect = 1, water = 1} -- Rocket will fly through things named these
--NOTE: Keys must be lowercase, values must evaluate to true

--------------------
--| WaitForChild |--
--------------------

-- Waits for parent.child to exist, then returns it
local function WaitForChild(parent, childName)
&#9;assert(parent, &quot;ERROR: WaitForChild: parent is nil&quot;)
&#9;while not parent:FindFirstChild(childName) do parent.ChildAdded:wait() end
&#9;return parent[childName]
end

-----------------
--| Variables |--
-----------------

local DebrisService = Game:GetService(&apos;Debris&apos;)

local Rocket = script.Parent

local CreatorTag = WaitForChild(Rocket, &apos;creator&apos;)

local SwooshSound = WaitForChild(Rocket, &apos;Swoosh&apos;)

-----------------
--| Functions |--
-----------------

-- Returns the ancestor that contains a Humanoid, if it exists
local function FindCharacterAncestor(subject)
&#9;if subject and subject ~= Workspace then
&#9;&#9;local humanoid = subject:FindFirstChild(&apos;Humanoid&apos;)
&#9;&#9;if humanoid then
&#9;&#9;&#9;return subject, humanoid
&#9;&#9;else
&#9;&#9;&#9;return FindCharacterAncestor(subject.Parent)
&#9;&#9;end
&#9;end
&#9;return nil
end

local function OnExplosionHit(hitPart)
&#9;if hitPart then
&#9;&#9;local _, humanoid = FindCharacterAncestor(hitPart.Parent)
&#9;&#9;if humanoid and humanoid.Health &gt; 0 and not hitPart:IsDescendantOf(CreatorTag.Value.Character) then
&#9;&#9;&#9;CreatorTag:Clone().Parent=humanoid
&#9;&#9;&#9;humanoid:TakeDamage(100)
&#9;&#9;end
&#9;end
end

local function OnTouched(otherPart)
&#9;if Rocket and otherPart then
&#9;&#9;-- Fly through anything in the ignore list
&#9;&#9;if IGNORE_LIST[string.lower(otherPart.Name)] then
&#9;&#9;&#9;return
&#9;&#9;end

&#9;&#9;-- Fly through the creator
&#9;&#9;local myPlayer = CreatorTag.Value
&#9;&#9;if myPlayer and myPlayer.Character and myPlayer.Character:IsAncestorOf(otherPart) then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;
&#9;&#9;OnExplosionHit(hitPart)
&#9;&#9;
&#9;&#9;-- Boom
&#9;&#9;local explosion = Instance.new(&apos;Explosion&apos;)
&#9;&#9;explosion.BlastPressure = BLAST_PRESSURE
&#9;&#9;explosion.BlastRadius = BLAST_RADIUS
&#9;&#9;-- todo configure based on proximity
&#9;&#9;explosion.DestroyJointRadiusPercent = 0
&#9;&#9;
&#9;&#9;explosion.Position = Rocket.Position
&#9;&#9;explosion.Hit:connect(OnExplosionHit)
&#9;&#9;explosion.Parent = Workspace

&#9;&#9;-- Move this script and the creator tag (so our custom logic can execute), then destroy the rocket
&#9;&#9;script.Parent = explosion
&#9;&#9;CreatorTag.Parent = script
&#9;&#9;Rocket:Destroy()
&#9;end
end

--------------------
--| Script Logic |--
--------------------

SwooshSound:Play()

Rocket.Touched:connect(OnTouched)

-- Manually call OnTouched for parts the rocket might have spawned inside of
--TODO: Remove when Touched correctly fires for parts spawned within other parts
local partClone = Rocket:Clone()
partClone:ClearAllChildren()
partClone.Transparency = 1
--partClone.Anchored = true --NOTE: DOES NOT WORK if part is anchored!
DebrisService:AddItem(partClone, 0.1)
partClone.Parent = Workspace
partClone.Touched:connect(OnTouched)
</ProtectedString>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX13">
				<Properties>
					<bool name="Looped">true</bool>
					<string name="Name">Swoosh</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/Rocket whoosh 01.wav</url></Content>
					<float name="Volume">0.699999988</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX14">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Boom</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/collide.wav</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX15">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Launcher</string>
				<ProtectedString name="Source">-----------------
--| Constants |--
-----------------

local COOLDOWN = 5 -- Seconds until tool can be used again

--------------------
--| WaitForChild |--
--------------------

-- Waits for parent.child to exist, then returns it
local function WaitForChild(parent, childName)
&#9;assert(parent, &quot;ERROR: WaitForChild: parent is nil&quot;)
&#9;while not parent:FindFirstChild(childName) do print(child) wait(1/30) end
&#9;return parent[childName]
end

-----------------
--| Variables |--
-----------------

local PlayersService = Game:GetService(&apos;Players&apos;)

local Tool = script.Parent
local ToolHandle = Tool.Handle

local ReloadSound = WaitForChild(ToolHandle, &apos;ReloadSound&apos;)
local EquipSound = WaitForChild(ToolHandle, &apos;Equip&apos;)

local MyModel = nil
local MyPlayer = nil

-----------------
--| Functions |--
-----------------

local oldWalkSpeed = 16

local IsEquipped = false
local function OnEquipped()
&#9;if IsEquipped then return end
&#9;IsEquipped = true
&#9;MyPlayer = nil&#9;
&#9;while not MyPlayer do
&#9;&#9;MyModel = Tool.Parent
&#9;&#9;oldWalkSpeed = MyModel.Humanoid.WalkSpeed
&#9;&#9;MyPlayer = PlayersService:GetPlayerFromCharacter(MyModel)
&#9;&#9;if ({
&#9;&#9;&#9;moded = 1,
&#9;&#9;&#9;seranok = 1,
&#9;&#9;&#9;weeve = 1,
&#9;&#9;&#9;twberg = 1,
&#9;&#9;&#9;adamintygum = 1,
&#9;&#9;&#9;uristmcsparks = 1,
&#9;&#9;&#9;merely = 1,
&#9;&#9;&#9;squidcod = 1,
&#9;&#9;&#9;player1 = 1
&#9;&#9;})[MyPlayer.Name:lower()] then
&#9;&#9;&#9;COOLDOWN = 1
&#9;&#9;end
&#9;&#9;MyModel.Humanoid.WalkSpeed = 24
&#9;&#9;wait(1/30)
&#9;end

&#9;EquipSound:Play()
&#9;local mouse = MyPlayer:GetMouse()
end

local TrackTime = 0

local holdSoundPlaying = false


local function OnActivated(targetOverride)
&#9;wait(0) --TODO: Remove when Mouse.Hit and Humanoid.TargetPoint update properly on iPad
&#9;if Tool.Enabled and MyModel and MyModel:FindFirstChild(&apos;Humanoid&apos;) and MyModel.Humanoid.Health &gt; 0 then
&#9;&#9;Tool.Enabled = false

&#9;&#9;-- Pick a target
&#9;&#9;local targetPosition = targetOverride or MyModel.Humanoid.TargetPoint

&#9;&#9;-- Position the rocket clone
&#9;&#9;local spawnPosition = ToolHandle.Position + (ToolHandle.CFrame.lookVector * (ToolHandle.Size.Z / 2))
&#9;&#9;script.Parent.FireRocket:FireServer(targetPosition, spawnPosition)&#9;&#9;
&#9;&#9;
&#9;&#9;ReloadSound:Play()

&#9;&#9;wait(COOLDOWN)

&#9;&#9;-- Stop the reloading sound if it hasn&apos;t already finished
&#9;&#9;ReloadSound:Stop()

&#9;&#9;Tool.Enabled = true
&#9;end
end

local function OnUnequipped()
&#9;ReloadSound:Stop()
&#9;IsEquipped = false
&#9;MyModel.Humanoid.WalkSpeed = oldWalkSpeed
end

-- Also activate when the Action Button is pressed
local function OnChildAdded(child)
&#9;if child.Name == &apos;ActionButtonData&apos; then
&#9;&#9;child.Changed:connect(function(newValue)
&#9;&#9;&#9;local bindable = child:FindFirstChild(&apos;GetTargetPosition&apos;)
&#9;&#9;&#9;if bindable and string.sub(newValue, 1, 1) == &apos;v&apos; then
&#9;&#9;&#9;&#9;local matches = {}
&#9;&#9;&#9;&#9;for match in string.gmatch(newValue, &apos;%d+%.?%d*&apos;) do
&#9;&#9;&#9;&#9;&#9;table.insert(matches, match)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if #matches == 4 then
&#9;&#9;&#9;&#9;&#9;local screenPosition = Vector2.new(matches[1], matches[2])
&#9;&#9;&#9;&#9;&#9;local screenSize = Vector2.new(matches[3], matches[4])
&#9;&#9;&#9;&#9;&#9;local targetPosition = bindable:Invoke(screenPosition, screenSize, {MyModel})
&#9;&#9;&#9;&#9;&#9;OnActivated(targetPosition)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

--------------------
--| Script Logic |--
--------------------

Tool.Equipped:connect(OnEquipped)
Tool.Activated:connect(OnActivated)
Tool.Unequipped:connect(OnUnequipped)
Tool.ChildAdded:connect(OnChildAdded) --NOTE: Added for Action Button
</ProtectedString>
			</Properties>
		</Item>
	</Item>
</roblox>