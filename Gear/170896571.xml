<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXBB43E2894B744D1280ED8FAD9CF90A21">
		<Properties>
			<bool name="CanBeDropped">false</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>1.5</X>
				<Y>2.20000005</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">RedHyperbike</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=168137599 </url></Content>
			<string name="ToolTip">Red hyperbike</string>
		</Properties>
		<Item class="Part" referent="RBXEA35CF96EA874F97A44A9B8F3B2CF04B">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-119.122612</X>
					<Y>2.93587565</Y>
					<Z>-113.179474</Z>
					<R00>0.0733753368</R00>
					<R01>0.0214471035</R01>
					<R02>0.99707377</R02>
					<R10>8.72310848e-005</R10>
					<R11>0.999768615</R11>
					<R12>-0.0215114895</R12>
					<R20>-0.99730438</R20>
					<R21>0.0016653887</R21>
					<R22>0.0733564943</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0</float>
				<float name="Friction">0</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>0.200000003</Y>
					<Z>7.91000128</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXD7AF5E23AF014FCB858AFF92AC1EC779">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=130087381</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>2.5</X>
						<Y>2.5</Y>
						<Z>2.5</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=165896476 </url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX229214722E6548498234049629E26A34">
				<Properties>
					<bool name="Looped">true</bool>
					<string name="Name">Running</string>
					<float name="Pitch">1.73274481</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=130091914</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX4EF8E3420B3340829E10C9B5B11EE1AD">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">TrailScript</string>
				<ProtectedString name="Source">--Made by Fusroblox
--Stickmasterluke was here last.
--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Debris = game:GetService(&quot;Debris&quot;)

function StartTrail(Source, Parent)
&#9;
&#9;local TrailParts = {}
&#9;
&#9;local SourceAlive = true
&#9;
&#9;local Color = BrickColor.new(&quot;Bright red&quot;)

&#9;local NumberOfParts = 60
&#9;local LastPoint = (Source.CFrame * CFrame.new(0, 0, 4)).p
&#9;
&#9;Source.Changed:connect(function(Property)
&#9;&#9;if Property == &quot;Parent&quot; and not Source.Parent then
&#9;&#9;&#9;SourceAlive = false
&#9;&#9;end
&#9;end)
&#9;
&#9;while SourceAlive do
&#9;&#9;local CurrentPoint = (Source.CFrame * CFrame.new(0, 0, 4)).p
&#9;&#9;if Source.Velocity.magnitude &gt; 20 then
&#9;&#9;&#9;local TrailPart = Instance.new(&quot;Part&quot;)
&#9;&#9;&#9;TrailPart.Name = &quot;LightTrail&quot;
&#9;&#9;&#9;TrailPart.BrickColor = Color
&#9;&#9;&#9;TrailPart.Transparency = 0.2
&#9;&#9;&#9;TrailPart.Material = Enum.Material.Plastic
&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;TrailPart.Material = Enum.Material.SmoothPlastic
&#9;&#9;&#9;end)
&#9;&#9;&#9;TrailPart.Shape = Enum.PartType.Block
&#9;&#9;&#9;for i, v in pairs({&quot;TopSurface&quot;, &quot;BottomSurface&quot;, &quot;FrontSurface&quot;, &quot;BackSurface&quot;, &quot;LeftSurface&quot;, &quot;RightSurface&quot;}) do
&#9;&#9;&#9;&#9;TrailPart[v] = Enum.SurfaceType.SmoothNoOutlines
&#9;&#9;&#9;end
&#9;&#9;&#9;TrailPart.Size = Vector3.new(0.3, 5, 3)
&#9;&#9;&#9;TrailPart.Locked = true
&#9;&#9;&#9;TrailPart.Anchored = true
&#9;&#9;&#9;TrailPart.CanCollide = false
&#9;&#9;&#9;local Light = Instance.new(&quot;PointLight&quot;)
&#9;&#9;&#9;Light.Color = BrickColor.new(&quot;Bright red&quot;).Color
&#9;&#9;&#9;Light.Parent = TrailPart
&#9;&#9;&#9;table.insert(TrailParts, TrailPart)
&#9;&#9;&#9;TrailPart.Parent = Parent
&#9;&#9;&#9;TrailPart.Size = Vector3.new(0.3, 5, (CurrentPoint - LastPoint).magnitude)
&#9;&#9;&#9;TrailPart.CFrame = CFrame.new(((CurrentPoint + LastPoint)* 0.5), LastPoint)
&#9;&#9;&#9;if #TrailParts &gt; NumberOfParts then
&#9;&#9;&#9;&#9;local TrailPart = TrailParts[1]
&#9;&#9;&#9;&#9;if TrailPart and TrailPart.Parent then
&#9;&#9;&#9;&#9;&#9;TrailPart:Destroy()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;table.remove(TrailParts, 1)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;local TrailPart = TrailParts[1]
&#9;&#9;&#9;if TrailPart and TrailPart.Parent then
&#9;&#9;&#9;&#9;TrailPart:Destroy()
&#9;&#9;&#9;end
&#9;&#9;&#9;table.remove(TrailParts, 1)
&#9;&#9;end
&#9;&#9;LastPoint = CurrentPoint
&#9;&#9;wait(0.025)
&#9;end
&#9;
&#9;for i, v in pairs(TrailParts) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
&#9;
end

Tool.ChildAdded:connect(function(Child)
&#9;if Child.Name == &quot;FakeHandle&quot; then
&#9;&#9;Spawn(function()
&#9;&#9;&#9;StartTrail(Child, Tool)
&#9;&#9;end)
&#9;end
end)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX8BC271438DF84009A60F22174F65E500">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">ThumbnailFixer</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Tool.Grip = CFrame.new(1.40000021, 1.96000028, -1.4000001, 1, 0, 0, 0, 1, -3.9340253e-007, 0, 3.9340253e-007, 1)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX0C521E9D0D2A4E2897FC2BD90D1DDF7B">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Fusroblox
--Stickmasterluke was here last.
--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

EngineSound = Handle:WaitForChild(&quot;Running&quot;)

Controls = {
&#9;Forward = false,
&#9;Backward = false,
&#9;Left = false,
&#9;Right = false,
&#9;Up = false,
&#9;Down = false
}

LastSpace = 0

Part = Instance.new(&quot;Part&quot;)
Part.Material = Enum.Material.Plastic
Part.Shape = Enum.PartType.Block
Part.TopSurface = Enum.SurfaceType.Smooth
Part.BottomSurface = Enum.SurfaceType.Smooth
Part.FormFactor = Enum.FormFactor.Custom
Part.Size = Vector3.new(0.2, 0.2, 0.2)
Part.CanCollide = true
Part.Locked = true

Wheel = Part:Clone()
Wheel.CanCollide = false
WheelMesh = Instance.new(&quot;SpecialMesh&quot;)
WheelMesh.MeshType = Enum.MeshType.FileMesh
WheelMesh.MeshId = &quot;http://www.roblox.com/asset/?id=130087185&quot;
WheelMesh.TextureId = &quot;http://www.roblox.com/asset/?id=165896476&quot;
WheelMesh.Scale = Vector3.new(2.5, 2.5, 2.5)
WheelMesh.Parent = Wheel

FrontWheel = Wheel:Clone()
FrontWheel.Name = &quot;FrontWheel&quot;
FrontWheel.Mesh.Scale = Vector3.new(4.75, 2.7, 2.7)

BackWheel = Wheel:Clone()
BackWheel.Name = &quot;BackWheel&quot;
BackWheel.Mesh.Scale = Vector3.new(4.75, 2, 2)

LightPart = Part:Clone()
LightPart.Name = &quot;LightPart&quot;
LightPart.Transparency = 1
Light = Instance.new(&quot;SpotLight&quot;)
Light.Name = &quot;Light&quot;
Light.Brightness = 50
Light.Angle = 45
Light.Color = BrickColor.new(&quot;Bright red&quot;).Color
Light.Range = 40
Light.Enabled = true
Light.Parent = LightPart

Acceleration = 20
Deceleration = 20
TurnAlpha = 0.30
AlphaDampening = 0.2
CurrentSpeed = 0
TurnSpeed = 0
TurnSpeedAim = 5

ActualVelocity = Vector3.new(0, 0, 0)

Equipped = false

ControlFunction = (Tool:FindFirstChild(&quot;ControlFunction&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ControlFunction.Name = &quot;ControlFunction&quot;
ControlFunction.Parent = Tool

ControlFunction.OnServerInvoke = (function(Player, Mode, Value)
&#9;if Mode == &quot;KeyDown&quot; then
&#9;&#9;local Key = Value:lower()
&#9;&#9;local ByteKey = Value:byte()
&#9;&#9;if Key == &quot;w&quot; or ByteKey == 17 then
&#9;&#9;&#9;Controls.Forward = true
&#9;&#9;&#9;while Controls.Forward and Equipped do
&#9;&#9;&#9;&#9;CurrentSpeed = math.min(70, (CurrentSpeed + (Acceleration * (1 / 30))))
&#9;&#9;&#9;&#9;wait(1 / 30)
&#9;&#9;&#9;end
&#9;&#9;elseif Key == &quot;a&quot; or ByteKey == 20 then
&#9;&#9;&#9;Controls.Left = true
&#9;&#9;&#9;while Controls.Left and Equipped do
&#9;&#9;&#9;&#9;TurnSpeed = math.min(5, (TurnSpeed + (TurnAlpha)))
&#9;&#9;&#9;&#9;wait(1 / 30)
&#9;&#9;&#9;end
&#9;&#9;elseif Key == &quot;s&quot; or ByteKey == 18 then
&#9;&#9;&#9;Controls.Backward = true
&#9;&#9;&#9;while Controls.Backward and Equipped do
&#9;&#9;&#9;&#9;if CurrentSpeed &gt; 0 then
&#9;&#9;&#9;&#9;&#9;CurrentSpeed = math.max(-20, (CurrentSpeed - (Deceleration * 2.8 * (1 / 30))))
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;CurrentSpeed = math.max(-20, (CurrentSpeed - (Deceleration * (1 / 30))))
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;wait(1 / 30)
&#9;&#9;&#9;end
&#9;&#9;elseif Key == &quot;d&quot; or ByteKey == 19 then
&#9;&#9;&#9;Controls.Right = true
&#9;&#9;&#9;while Controls.Right and Equipped do
&#9;&#9;&#9;&#9;TurnSpeed = math.max(-5, (TurnSpeed - (TurnAlpha)))
&#9;&#9;&#9;&#9;wait(1 / 30)
&#9;&#9;&#9;end
&#9;&#9;elseif Key == &quot; &quot; then
&#9;&#9;&#9;if (LastSpace == 0 or (tick() - LastSpace) &gt; 1.9) then
&#9;&#9;&#9;&#9;LastSpace = tick()
&#9;&#9;&#9;&#9;local BodyForce = Instance.new(&quot;BodyForce&quot;)
&#9;&#9;&#9;&#9;BodyForce.force = Vector3.new(0, (((GetTotalMass(Character) * 196.20) * 4) * 2.5), 0)
&#9;&#9;&#9;&#9;Debris:AddItem(BodyForce, 0.1)
&#9;&#9;&#9;&#9;BodyForce.Parent = FakeHandle
&#9;&#9;&#9;end
&#9;&#9;elseif Key == &quot;x&quot; then
&#9;&#9;&#9;LightPartClone.Light.Enabled = not LightPartClone.Light.Enabled
&#9;&#9;end
&#9;elseif Mode == &quot;KeyUp&quot; then
&#9;&#9;local Key = Value:lower()
&#9;&#9;local ByteKey = Value:byte()
&#9;&#9;if Key == &quot;w&quot; or ByteKey == 17 then
&#9;&#9;&#9;Controls.Forward = false
&#9;&#9;elseif Key == &quot;a&quot; or ByteKey == 20 then
&#9;&#9;&#9;Controls.Left = false
&#9;&#9;elseif Key == &quot;s&quot; or ByteKey == 18 then
&#9;&#9;&#9;Controls.Backward = false
&#9;&#9;elseif Key == &quot;d&quot; or ByteKey == 19 then
&#9;&#9;&#9;Controls.Right = false
&#9;&#9;end
&#9;end
end)

function RayCast(Position, Direction, MaxDistance, IgnoreList)
&#9;return game:GetService(&quot;Workspace&quot;):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList) 
end

function GetTotalMass(Parent)
&#9;local TotalMass = 0
&#9;for i, v in pairs(Parent:GetChildren()) do
&#9;&#9;if v:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;TotalMass = TotalMass + v:GetMass()
&#9;&#9;end
&#9;&#9;GetTotalMass(v)
&#9;end
&#9;return TotalMass
end

function ThrustUpdater()
&#9;while Equipped and FakeHandle and FakeHandle.Parent do
&#9;&#9;local Direction = Torso.CFrame.lookVector
&#9;&#9;Direction = Vector3.new(Direction.x, 0, Direction.z).unit
&#9;&#9;ThrustForce.velocity = (Direction * CurrentSpeed)
&#9;&#9;EngineSound.Pitch = (1 + (math.abs(CurrentSpeed / 50) * 1))
&#9;&#9;
&#9;&#9;local DesiredAngle = (999999999 * (-CurrentSpeed / math.abs(CurrentSpeed)))
&#9;&#9;local MaxVelocity = (CurrentSpeed / 250)
&#9;&#9;if FrontMotor and FrontMotor.Parent then
&#9;&#9;&#9;FrontMotor.DesiredAngle = DesiredAngle
&#9;&#9;&#9;FrontMotor.MaxVelocity = MaxVelocity
&#9;&#9;end
&#9;&#9;if BackMotor and BackMotor.Parent then 
&#9;&#9;&#9;BackMotor.DesiredAngle = DesiredAngle
&#9;&#9;&#9;BackMotor.MaxVelocity = MaxVelocity
&#9;&#9;end
&#9;&#9;
&#9;&#9;RotationForce.angularvelocity = Vector3.new(0, TurnSpeed, 0)
&#9;&#9;if math.abs(TurnSpeed) &gt; AlphaDampening&#9; then
&#9;&#9;&#9;TurnSpeed = (TurnSpeed - (AlphaDampening * (math.abs(TurnSpeed) / TurnSpeed)))
&#9;&#9;else 
&#9;&#9;&#9;TurnSpeed = 0&#9;&#9;
&#9;&#9;end
&#9;&#9;local LeanAmount = (-TurnSpeed * (math.pi / 6) / 4)
&#9;&#9;
&#9;&#9;if not Controls.Forward or Controls.Backward then
&#9;&#9;&#9;CurrentSpeed = (CurrentSpeed * 0.99)&#9;&#9;
&#9;&#9;end&#9;&#9;
&#9;&#9;
&#9;&#9;local XZAngle = math.atan2(Torso.CFrame.lookVector.z, 0, Torso.CFrame.lookVector.x)
&#9;&#9;TurnGyro.cframe = CFrame.Angles((LeanAmount * Direction.x), 0, (LeanAmount * Direction.z))
&#9;&#9;if LastPosition then
&#9;&#9;&#9;local NPos = Vector3.new(Torso.CFrame.p.x, 0, Torso.CFrame.p.z)
&#9;&#9;&#9;local MySpeed = Vector3.new(FakeHandle.Velocity.X, 0, FakeHandle.Velocity.Z).magnitude
&#9;&#9;&#9;local VelocityDifference = math.abs((MySpeed - (ThrustForce.velocity.magnitude)))
&#9;&#9;&#9;if MySpeed &gt; 3 and ThrustForce.velocity.magnitude &gt; 3 and VelocityDifference &gt; (0.7 * ThrustForce.velocity.magnitude) then
&#9;&#9;&#9;&#9;CurrentSpeed = (CurrentSpeed * 0.9)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;LastPosition = Vector3.new(Torso.CFrame.p.x, 0, Torso.CFrame.p.z)
&#9;&#9;wait(1 / 60)
&#9;end
end


function Equipped(Mouse)
&#9;local Delay = true
&#9;local UnequippedConnection
&#9;UnequippedConnection = Tool.Unequipped:connect(function()
&#9;&#9;Delay = false
&#9;&#9;UnequippedConnection:disconnect()
&#9;end)
&#9;wait(0.3)
&#9;if UnequippedConnection then
&#9;&#9;UnequippedConnection:disconnect()
&#9;end
&#9;if not Delay then
&#9;&#9;return
&#9;end
&#9;Equipped = true
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not Player or not Humanoid or Humanoid.Health == 0 or not Torso then
&#9;&#9;return
&#9;end
&#9;
&#9;Handle.Velocity = Vector3.new(0, 0, 0)
&#9;
&#9;Torso.Velocity = Vector3.new(0, 0, 0)
&#9;local Hit, EndPosition = RayCast(Torso.Position, Vector3.new(0, -1, 0), (Torso.Size.Y * 2), {Character})
&#9;if Hit then
&#9;&#9;Torso.CFrame = Torso.CFrame + Vector3.new(0, ((Torso.Size.Y * 2) + Handle.Size.Y), 0)
&#9;end
&#9;
&#9;if FakeHandle and FakeHandle.Parent then
&#9;&#9;FakeHandle:Destroy()
&#9;end
&#9;
&#9;FakeHandle = Handle:Clone()
&#9;FakeHandle.Name = &quot;FakeHandle&quot;
&#9;FakeHandle.Transparency = 0
&#9;FakeHandle.Size = Vector3.new(1, 4.25, 7)
&#9;FakeHandle.Velocity = Vector3.new(0, 0, 0)
&#9;FakeHandle.RotVelocity = Vector3.new(0, 0, 0)
&#9;FakeHandle.Mesh.MeshId = &quot;http://www.roblox.com/asset/?id=130087108&quot;
&#9;
&#9;Handle.Transparency = 1
&#9;
&#9;FrontWheelClone = FrontWheel:Clone()
&#9;FrontMotor = Instance.new(&quot;Motor6D&quot;)
&#9;FrontMotor.Part0 = FakeHandle
&#9;FrontMotor.Part1 = FrontWheelClone
&#9;FrontMotor.C0 = CFrame.new(0, -0.7, -3.1) * CFrame.Angles(0, math.pi / 2, 0)
&#9;FrontMotor.C1 = FrontMotor.C1 * CFrame.Angles(0, -(math.pi / 2), 0)
&#9;FrontMotor.Parent = FakeHandle
&#9;FrontWheelClone.Parent = FakeHandle
&#9;
&#9;BackWheelClone = BackWheel:Clone()
&#9;BackMotor = Instance.new(&quot;Motor6D&quot;)
&#9;BackMotor.Part0 = FakeHandle
&#9;BackMotor.Part1 = BackWheelClone
&#9;BackMotor.C0 = CFrame.new(0, -1.1, 3.6) * CFrame.Angles(0, (math.pi / 2), 0)
&#9;BackMotor.C1 = BackMotor.C1 * CFrame.Angles(0, -(math.pi / 2), 0)
&#9;BackMotor.Parent = FakeHandle
&#9;BackWheelClone.Parent = FakeHandle
&#9;&#9;&#9;&#9;
&#9;LightPartClone = LightPart:Clone()
&#9;LightWeld = Instance.new(&quot;Weld&quot;)
&#9;LightWeld.Part0 = FakeHandle
&#9;LightWeld.Part1 = LightPartClone
&#9;LightWeld.C0 = CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
&#9;LightWeld.C1 = CFrame.new(-0.140708923, -0.749996185, -0.9377985, -1.63912773e-007, -1.27675008e-008, -1.00000024, -2.05633661e-008, 0.99999994, 3.65663944e-009, 0.999999881, 5.65337004e-008, -7.4505806e-008)
&#9;LightWeld.Parent = LightPartClone
&#9;LightPartClone.Parent = FakeHandle
&#9;
&#9;Handle.CFrame = Torso.CFrame
&#9;Humanoid.PlatformStand = true
&#9;
&#9;RotationForce = Instance.new(&quot;BodyAngularVelocity&quot;)
&#9;RotationForce.maxTorque = Vector3.new(0, math.huge, 0)
&#9;RotationForce.angularvelocity = Vector3.new(0, 0, 0)
&#9;RotationForce.Parent = Torso
&#9;
&#9;ThrustForce = Instance.new(&quot;BodyVelocity&quot;)
&#9;ThrustForce.maxForce = Vector3.new(math.huge, 0, math.huge)
&#9;ThrustForce.velocity = Vector3.new(0, 0, 0)
&#9;ThrustForce.P = 100
&#9;ThrustForce.Parent = FakeHandle
&#9;
&#9;TurnGyro = Instance.new(&quot;BodyGyro&quot;)
&#9;TurnGyro.maxTorque = Vector3.new(5000, 0, 5000)
&#9;TurnGyro.P = 300
&#9;TurnGyro.D = 100
&#9;TurnGyro.Parent = Torso
&#9;&#9;&#9;
&#9;Spawn(function()
&#9;&#9;ThrustUpdater()
&#9;end)
&#9;&#9;
&#9;LastSpace = tick()
&#9;
&#9;Spawn(function()
&#9;&#9;if FakeHandle then
&#9;&#9;&#9;TorsoWeld = Instance.new(&quot;Weld&quot;)
&#9;&#9;&#9;TorsoWeld.C0 = CFrame.new(0, -1.5, -1.4) * CFrame.Angles(0, 0, 0)
&#9;&#9;&#9;TorsoWeld.Part0 = Torso
&#9;&#9;&#9;TorsoWeld.Part1 = FakeHandle
&#9;&#9;&#9;TorsoWeld.Parent = FakeHandle
&#9;&#9;&#9;FakeHandle.CanCollide = true
&#9;&#9;end
&#9;end)

&#9;Humanoid.WalkSpeed = 0
&#9;
&#9;FakeHandle.Parent = Tool
&#9;
end

function Unequipped()
&#9;Equipped = false
&#9;CurrentSpeed = 0
&#9;TurnSpeed = 0
&#9;for i, v in pairs(Controls) do
&#9;&#9;v = false
&#9;end
&#9;for i, v in pairs({FakeHandle, RotationForce, TurnGyro, TorsoWeld}) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
&#9;Handle.Transparency = 0
&#9;if Torso then
&#9;&#9;Torso.Velocity = Vector3.new(0, -10, 0)
&#9;end
&#9;if Humanoid and Humanoid.Parent then
&#9;&#9;Humanoid.WalkSpeed = 16
&#9;&#9;Humanoid.PlatformStand = false
&#9;end
end

Tool.Unequipped:connect(Unequipped)
Tool.Equipped:connect(Equipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX28543D7D7EC24006859B5522703BAFCF">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">-- Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)

HoldAnim = Tool:WaitForChild(&quot;HoldAnim&quot;)

EngineSound = Handle:WaitForChild(&quot;Running&quot;)

ControlFunction = Tool:WaitForChild(&quot;ControlFunction&quot;)

Equipped = false

function OnKey(Key, IsDown)
&#9;Key = Key:lower()
&#9;pcall(function()
&#9;&#9;ControlFunction:InvokeServer(((IsDown and &quot;KeyDown&quot;) or &quot;KeyUp&quot;), Key)
&#9;end)
end

function Equipped(Mouse)
&#9;local Delay = true
&#9;local UnequippedConnection
&#9;UnequippedConnection = Tool.Unequipped:connect(function()
&#9;&#9;Delay = false
&#9;&#9;UnequippedConnection:disconnect()
&#9;end)
&#9;wait(0.3)
&#9;if UnequippedConnection then
&#9;&#9;UnequippedConnection:disconnect()
&#9;end
&#9;if not Delay then
&#9;&#9;return
&#9;end
&#9;Equipped = true
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not Player or not Humanoid or Humanoid.Health == 0 or not Torso then
&#9;&#9;return
&#9;end
&#9;
&#9;wait()&#9;
&#9;
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;OnKey(Key, true)
&#9;end)
&#9;&#9;
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;OnKey(Key, false)
&#9;end)
&#9;
&#9;HoldAnimTrack = Humanoid:LoadAnimation(HoldAnim)
&#9;if HoldAnimTrack then
&#9;&#9;HoldAnimTrack:Play()
&#9;end
&#9;
&#9;EngineSound:Play()
&#9;
end

function Unequipped()
&#9;Equipped = false
&#9;if HoldAnimTrack then
&#9;&#9;HoldAnimTrack:Stop()
&#9;end
&#9;if EngineSound then
&#9;&#9;EngineSound:Stop()
&#9;end
end

Tool.Unequipped:connect(Unequipped)
Tool.Equipped:connect(Equipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX2844E91408534F98BBAFFE6E61B36114">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=104506550</url></Content>
				<string name="Name">HoldAnim</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX872E6AE1989B4C30A60C1854BB65245F">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-124.369041</X>
					<Y>6.19227695</Y>
					<Z>-109.201942</Z>
					<R00>0.761512995</R00>
					<R01>0.321155488</R01>
					<R02>-0.562989473</R02>
					<R10>-1.4901163e-008</R10>
					<R11>0.868610382</R11>
					<R12>0.495495856</R12>
					<R20>0.648149669</R20>
					<R21>-0.377326518</R21>
					<R22>0.661458015</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-124.031242</X>
					<Y>5.89497471</Y>
					<Z>-109.598824</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>