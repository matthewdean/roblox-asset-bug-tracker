<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.25</Y>
				<Z>0.899999976</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">ZebraPrintLaserGun</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset?id=174485409</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-48.9270172</X>
					<Y>11.6826363</Y>
					<Z>0.513291657</Z>
					<R00>-0.80380559</R00>
					<R01>-0.00953537319</R01>
					<R02>0.594815552</R02>
					<R10>-2.40672045e-014</R10>
					<R11>0.999871552</R11>
					<R12>0.016028747</R12>
					<R20>-0.594891965</R20>
					<R21>0.0128839966</R21>
					<R22>-0.803702354</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.25</X>
					<Y>1.5</Y>
					<Z>2.25</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset?id=174485310</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.5</X>
						<Y>1.5</Y>
						<Z>1.5</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=174485376</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBX3">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=175164337</url></Content>
				<string name="Name">LeftSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX4">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=175202396</url></Content>
				<string name="Name">RightSlash</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX5">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

Remover = script:WaitForChild(&quot;Remover&quot;)

Equipped = false

MaxRange = 50

Damage = 5
ReloadTime = 0.01

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Material = Enum.Material.SmoothPlastic
BasePart.Shape = Enum.PartType.Block
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.Anchored = true
BasePart.CanCollide = false
BasePart.Locked = true

Laser = BasePart:Clone()
Laser.Name = &quot;Laser&quot;
Laser.BrickColor = BrickColor.new(&quot;Bright red&quot;)
Laser.Transparency = 0.25
Laser.Reflectance = 0.25
LaserMesh = Instance.new(&quot;CylinderMesh&quot;)
LaserMesh.Scale = Vector3.new(0.25, 1, 0.25)
LaserMesh.Parent = Laser

Blotch = BasePart:Clone()
Blotch.Name = &quot;InkBlotch&quot;
Blotch.Size = Vector3.new(1, 0.2, 1)
BlotchMesh = Instance.new(&quot;CylinderMesh&quot;)
BlotchMesh.Scale = Vector3.new(0.25, 0.25, 0.25)
BlotchMesh.Parent = Blotch

Tool.Enabled = true

ServerControl.OnServerInvoke = (function(player, Mode, Value)
&#9;if player ~= Player or Humanoid.Health == 0 or not Tool.Enabled then
&#9;&#9;return
&#9;end
&#9;if Mode == &quot;Click&quot; and Value.Down then
&#9;&#9;Tool.Enabled = false
&#9;&#9;local Mouse = Value.Mouse
&#9;&#9;
&#9;&#9;if LaserModel and LaserModel.Parent then
&#9;&#9;&#9;for i, v in pairs(LaserModel:GetChildren()) do
&#9;&#9;&#9;&#9;if v:IsA(&quot;BasePart&quot;) and v.Name == &quot;Laser&quot; then
&#9;&#9;&#9;&#9;&#9;v:Destroy()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;local OffsetRadius = 10
&#9;&#9;local RandomizedOffset = (Vector3.new(math.random(-OffsetRadius, OffsetRadius), math.random(-OffsetRadius, OffsetRadius), math.random(-OffsetRadius, OffsetRadius)) * 0.1)
&#9;&#9;local TargetPoint = (Mouse.Hit + RandomizedOffset)

&#9;&#9;local BlackLaserStartingPosition = PositionProjectile(Handle, 0, -0.25, 0)
&#9;&#9;BlackLaserStartingPosition = BlackLaserStartingPosition + Handle.CFrame.lookVector * (Handle.Size.Z / 2)
&#9;&#9;local BlackLaserHit, BlackLaserPos = CastRay(BlackLaserStartingPosition.p, TargetPoint, &quot;Really black&quot;)
&#9;&#9;LaserHit(BlackLaserHit, BlackLaserPos, &quot;Really black&quot;)
&#9;&#9;
&#9;&#9;local WhiteLaserStartingPosition = PositionProjectile(Handle, 0, -0.5, 0)
&#9;&#9;WhiteLaserStartingPosition = WhiteLaserStartingPosition + Handle.CFrame.lookVector * (Handle.Size.Z / 2)
&#9;&#9;local WhiteLaserHit, WhiteLaserPos = CastRay(WhiteLaserStartingPosition.p, (TargetPoint + (Handle.CFrame * CFrame.Angles(0, 0, math.pi/2)).lookVector * 0.5), &quot;Institutional white&quot;)
&#9;&#9;LaserHit(WhiteLaserHit, WhiteLaserPos, &quot;Institutional white&quot;)

--&#9;&#9;wait(ReloadTime)
&#9;&#9;Tool.Enabled = true
&#9;end
end)

function LaserHit(Hit, Position, Color)
&#9;if not Hit or not LaserModel or not LaserModel.Parent then
&#9;&#9;return
&#9;end
&#9;local character, humanoid = FindCharacterAncestor(Hit)
&#9;if not humanoid then
&#9;&#9;CreateInkBlotch(Hit, Position, Color)
&#9;elseif humanoid and humanoid ~= Humanoid and humanoid.Health &gt; 0 then
&#9;&#9;Hit.BrickColor = BrickColor.new(Color)
&#9;&#9;for i, v in pairs(Hit:GetChildren()) do
&#9;&#9;&#9;if v:IsA(&quot;DataModelMesh&quot;) then
&#9;&#9;&#9;&#9;if v:IsA(&quot;FileMesh&quot;) then
&#9;&#9;&#9;&#9;&#9;v.TextureId = &quot;&quot;
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;local RGBColor = BrickColor.new(Color).Color
&#9;&#9;&#9;&#9;v.VertexColor = Vector3.new((RGBColor.r), (RGBColor.g), (RGBColor.b))
&#9;&#9;&#9;end
&#9;&#9;&#9;for i, v in pairs(Hit.Parent:GetChildren()) do
&#9;&#9;&#9;&#9;if v:IsA(&quot;Clothing&quot;) then
&#9;&#9;&#9;&#9;&#9;v:Destroy()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;humanoid:TakeDamage(Damage)
&#9;end
end

function Round(Number, Round_Decimal)
&#9;local Whole_Number, Decimal = math.modf(Number)
&#9;return ((Decimal &gt;= Round_Decimal and math.ceil(Number)) or (Decimal &lt; Round_Decimal and math.floor(Number)))
end

function PartToTerrain(Part, Position, GridOffset, RoundInterval)
&#9;local PartCFrame = CFrame.new(Position)
&#9;local PX, PY, PZ = PartCFrame.X, PartCFrame.Y, PartCFrame.Z
&#9;local PXToGrid = (Round((PX / GridOffset), RoundInterval) * GridOffset)
&#9;local PYToGrid = (Round((PY / GridOffset), RoundInterval) * GridOffset)
&#9;local PZToGrid = (Round((PZ / GridOffset), RoundInterval) * GridOffset)
&#9;local RandomX, RandomY, RandomZ = math.random(1, 2), math.random(1, 2), math.random(1, 2)
&#9;RandomX = ((RandomX == 1 and -2) or (RandomX == 2 and 2))
&#9;RandomY = ((RandomY == 1 and -2) or (RandomY == 2 and 2))
&#9;RandomZ = ((RandomZ == 1 and -2) or (RandomZ == 2 and 2))
&#9;PXToGrid = ((PXToGrid &gt; PX and (PXToGrid - 2)) or (PXToGrid &lt; PX and (PXToGrid + 2)) or (PXToGrid + RandomX))
&#9;PYToGrid = ((PYToGrid &gt; PY and (PYToGrid - 2)) or (PYToGrid &lt; PY and (PYToGrid + 2)) or (PYToGrid + RandomY))
&#9;PZToGrid = ((PZToGrid &gt; PZ and (PZToGrid - 2)) or (PZToGrid &lt; PZ and (PZToGrid + 2)) or (PZToGrid + RandomZ))
&#9;PX = ((((PX + 2) % GridOffset ~= 0) and PXToGrid) or PX)
&#9;PY = ((((PY + 2) % GridOffset ~= 0) and PYToGrid) or PY)
&#9;PZ = ((((PZ + 2) % GridOffset ~= 0) and PZToGrid) or PZ)
&#9;Part.CFrame = CFrame.new(PX, PY, PZ)
end

function GetNormalId(Part, Hit)
&#9;if Part:IsA(&quot;Terrain&quot;) then
&#9;&#9;local Terrain = game:GetService(&quot;Workspace&quot;).Terrain
&#9;&#9;local HitTerrain = (Vector3.new(Round(Hit.X, 0.5), Round(Hit.Y, 0.5), Round(Hit.Z, 0.5)) * 4)
&#9;&#9;local CellPosition = Terrain:WorldToCell(HitTerrain)
&#9;&#9;local FakePart = BasePart:Clone()
&#9;&#9;FakePart.Size = Vector3.new(4, 4, 4)
&#9;&#9;PartToTerrain(FakePart, Hit, 4, 0.5)
&#9;&#9;Part = FakePart
&#9;end
&#9;local Point = Part.CFrame:pointToObjectSpace(Hit)
&#9;local Size = (Part.Size / 2)
&#9;if math.abs(Point.X - Size.X) &lt; 0.01 then
&#9;&#9;return Enum.NormalId.Right
&#9;elseif math.abs(Point.X + Size.X) &lt; 0.01 then
&#9;&#9;return Enum.NormalId.Left
&#9;elseif math.abs(Point.Y - Size.Y) &lt; 0.01 then
&#9;&#9;return Enum.NormalId.Top
&#9;elseif math.abs(Point.Y + Size.Y) &lt; 0.01 then
&#9;&#9;return Enum.NormalId.Bottom
&#9;elseif math.abs(Point.Z - Size.Z) &lt; 0.01 then
&#9;&#9;return Enum.NormalId.Back
&#9;elseif math.abs(Point.Z + Size.Z) &lt; 0.01 then
&#9;&#9;return Enum.NormalId.Front
&#9;else
&#9;&#9;return Enum.NormalId.Front
&#9;end
end

function CreateInkBlotch(Hit, Position, Color)
&#9;local Surface = GetNormalId(Hit, Position)
&#9;local Surfaces = {
&#9;&#9;Left = CFrame.Angles(0, 0, (math.pi / 2)),
&#9;&#9;Right = CFrame.Angles(math.pi, 0, -(math.pi / 2)),
&#9;&#9;Front = CFrame.Angles(-(math.pi / 2), 0, 0),
&#9;&#9;Back = CFrame.Angles((math.pi / 2), 0, 0),
&#9;&#9;Top = CFrame.Angles(0, 0, 0),
&#9;&#9;Bottom = CFrame.Angles(math.pi, 0, 0)
&#9;}
&#9;local BlotchClone = Blotch:Clone()
&#9;BlotchClone.BrickColor = BrickColor.new(Color)
&#9;Debris:AddItem(BlotchClone, 5)
&#9;BlotchClone.Parent = LaserModel
&#9;BlotchClone.CFrame = CFrame.new(Position)
&#9;BlotchClone.CFrame = BlotchClone.CFrame * Surfaces[Surface.Name]
&#9;local YLookVector = (BlotchClone.CFrame * CFrame.Angles((math.pi / 2), 0, 0)).lookVector
&#9;BlotchClone.CFrame = BlotchClone.CFrame + YLookVector * ((BlotchClone.Size.Y / 2) - 0.075)
end

function RayCast(Position, Direction, MaxDistance, IgnoreList)
&#9;return game:GetService(&quot;Workspace&quot;):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList) 
end

function InvokeClient(Mode, Value)
&#9;pcall(function()
&#9;&#9;ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
end

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function PositionProjectile(handle, x, y, z)
&#9;local HandleClone = handle:Clone()
&#9;local HandleCloneY = HandleClone:Clone()
&#9;HandleCloneY.CFrame = HandleCloneY.CFrame * CFrame.Angles(math.rad(90), 0, 0)&#9;&#9;
&#9;HandleCloneY.CFrame = HandleCloneY.CFrame - HandleCloneY.CFrame.lookVector * y
&#9;local HandleCloneZ = HandleCloneY:Clone()
&#9;HandleCloneZ.CFrame = HandleCloneZ.CFrame + HandleClone.CFrame.lookVector * z
&#9;local HandleCloneX = HandleCloneZ:Clone()
&#9;HandleCloneX.CFrame = HandleCloneZ.CFrame * CFrame.Angles(0, math.rad(90), 0)
&#9;HandleCloneX.CFrame = HandleCloneX.CFrame - HandleCloneX.CFrame.lookVector * x
&#9;return HandleCloneX.CFrame
end

function InvokeClient(Mode, Value)
&#9;pcall(function()
&#9;&#9;ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
end

function FindCharacterAncestor(Parent)
&#9;if Parent and Parent ~= game:GetService(&quot;Workspace&quot;) then
&#9;&#9;local humanoid = Parent:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;if humanoid then
&#9;&#9;&#9;return Parent, humanoid
&#9;&#9;else
&#9;&#9;&#9;return FindCharacterAncestor(Parent.Parent)
&#9;&#9;end
&#9;end
&#9;return nil
end

function CastRay(StartingPosition, EndPosition, Color)
&#9;local Direction = CFrame.new(StartingPosition, EndPosition).lookVector
&#9;local Hit, Pos = RayCast(StartingPosition, Direction, MaxRange, {Character, LaserModel})
&#9;local RayLength = (StartingPosition - Pos).magnitude
&#9;if not Hit and (StartingPosition - EndPosition).magnitude &lt; MaxRange then
&#9;&#9;RayLength = (StartingPosition - EndPosition).magnitude
&#9;end
&#9;local LaserClone = Laser:Clone()
&#9;LaserClone.BrickColor = BrickColor.new(Color)
&#9;LaserClone.Size = Vector3.new(LaserClone.Size.X, RayLength, LaserClone.Size.Z)
&#9;if not LaserModel or not LaserModel.Parent or LaserModel.Name ~= &quot;LaserModel&quot; then
&#9;&#9;if LaserModel and LaserModel.Parent then
&#9;&#9;&#9;LaserModel:Destroy()
&#9;&#9;end
&#9;&#9;LaserModel = Instance.new(&quot;Model&quot;)
&#9;&#9;LaserModel.Name = &quot;LaserModel&quot;
&#9;&#9;RemoverClone = Remover:Clone()
&#9;&#9;RemoverClone.Disabled = false
&#9;&#9;RemoverClone.Parent = LaserModel
&#9;end
&#9;Debris:AddItem(LaserClone, 5)
&#9;InvokeClient(&quot;SetTargetFilter&quot;, LaserModel)
&#9;LaserClone.Parent = LaserModel
&#9;if not LaserModel.Parent then
&#9;&#9;LaserModel.Parent = game:GetService(&quot;Workspace&quot;)
&#9;end
&#9;Spawn(function()
&#9;&#9;if LaserClone and LaserClone.Parent then
&#9;&#9;&#9;for i = 1, 100 do
&#9;&#9;&#9;&#9;if LaserClone and LaserClone.Parent then
&#9;&#9;&#9;&#9;&#9;if LaserClone.Transparency &gt;= 1 then
&#9;&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;LaserClone.Transparency = LaserClone.Transparency + 0.025
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;wait(0.001)
&#9;&#9;&#9;end
&#9;&#9;&#9;if LaserClone and LaserClone.Parent then
&#9;&#9;&#9;&#9;LaserClone:Destroy()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;LaserClone.CFrame = CFrame.new(StartingPosition) + Direction * (RayLength / 2)
&#9;LaserClone.CFrame = CFrame.new(LaserClone.Position, Pos) * CFrame.Angles((math.pi / 2), 0, 0)
&#9;return Hit, Pos
end

function Equipped()
&#9;Equipped = true
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if not Player or not Humanoid or Humanoid.Health == 0 then
&#9;&#9;return
&#9;end
end

function Unequipped()
&#9;Equipped = false
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX6">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Remover</string>
					<ProtectedString name="Source">--Made by Luckymaxer

Model = script.Parent

Debris = game:GetService(&quot;Debris&quot;)

function GetLasers()
&#9;local Lasers = {}
&#9;for i, v in pairs(Model:GetChildren()) do
&#9;&#9;if v and v.Parent and v:IsA(&quot;BasePart&quot;) and (v.Name == &quot;Laser&quot; or v.Name == &quot;InkBlotch&quot;) then
&#9;&#9;&#9;table.insert(Lasers, v)
&#9;&#9;end
&#9;end
&#9;return Lasers
end

function DestroyModel()
&#9;Model.Name = (&quot;Removing&quot; .. Model.Name)
&#9;if Model and Model.Parent then
&#9;&#9;Model:Destroy()
&#9;end
&#9;Debris:AddItem(Model, 2)
end

if #GetLasers() == 0 then
&#9;DestroyModel()
else
&#9;Model.ChildRemoved:connect(function()
&#9;&#9;if #GetLasers() == 0 then
&#9;&#9;&#9;DestroyModel()
&#9;&#9;end
&#9;end)
end</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="RemoteFunction" referent="RBX7">
			<Properties>
				<string name="Name">ServerControl</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX8">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)

Equipped = false
MouseDown = false

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)


ClientControl.OnClientInvoke = (function(Mode, Value)
&#9;if Mode == &quot;SetTargetFilter&quot; and Value then
&#9;&#9;TargetFilter = Value
&#9;end
end)

function InvokeServer(Mode, Value)
&#9;pcall(function()
&#9;&#9;ServerControl:InvokeServer(Mode, Value)
&#9;end)
end

function Equipped(Mouse)
&#9;Equipped = true
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if not Player or not Humanoid or Humanoid.Health == 0 then
&#9;&#9;return
&#9;end
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;if MouseDown then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;MouseDown = true
&#9;&#9;Spawn(function()
&#9;&#9;&#9;while MouseDown do
&#9;&#9;&#9;&#9;InvokeServer(&quot;Click&quot;, {Down = true, Mouse = {Hit = Mouse.Hit.p}})
&#9;&#9;&#9;&#9;Mouse.TargetFilter = TargetFilter
&#9;&#9;&#9;&#9;wait(0.01)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end)
&#9;Mouse.Button1Up:connect(function()
&#9;&#9;MouseDown = false
&#9;end)
end

function Unequipped()
&#9;Equipped = false
&#9;MouseDown = false
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="RemoteFunction" referent="RBX9">
			<Properties>
				<string name="Name">ClientControl</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX10">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">5</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-50.5074196</X>
					<Y>12.255064</Y>
					<Z>0.768201172</Z>
					<R00>-0.05020478</R00>
					<R01>0.273609877</R01>
					<R02>-0.960529566</R02>
					<R10>-1.86264537e-009</R10>
					<R11>0.961742342</R11>
					<R12>0.273955345</R12>
					<R20>0.998738945</R20>
					<R21>0.0137538696</R21>
					<R22>-0.0482840613</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-48.5863571</X>
					<Y>11.7071524</Y>
					<Z>0.864769459</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>