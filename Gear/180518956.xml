<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXABD48696855D4A42931053378860C5EB">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0.215000004</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">MonsterPotion</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset?id=179511610</url></Content>
			<string name="ToolTip">Transform into a scary monster!</string>
		</Properties>
		<Item class="Part" referent="RBX55F9D9C1D773449DA79FCD1F5169D06B">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>109.798279</X>
					<Y>7.22406769</Y>
					<Z>27.3479919</Z>
					<R00>-0.316764146</R00>
					<R01>0.0174341127</R01>
					<R02>-0.948344052</R02>
					<R10>-1.568209e-014</R10>
					<R11>0.999831021</R11>
					<R12>0.0183806363</R12>
					<R20>0.94850421</R20>
					<R21>0.00582232699</R21>
					<R22>-0.316710651</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1.25</X>
					<Y>1.75</Y>
					<Z>1.25</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX3F935C30656C46B0A57C51EA8C1F2293">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset?id=179511543</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=179511579</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXEA0FE151A82D4A4189FC1401E751A772">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Gulp</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=163204602</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX3D9700E378B64FAA9DBB3497DAB90EEE">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Sizzle</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=172708705</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBXF43970531ADB42FAB782802D219EC7CC">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=180324301</url></Content>
				<string name="Name">Drink</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX0E76CE57F92B4D539FCB1C19784F496A">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)

Animations = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ClientControl.OnClientInvoke = (function(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;end
end)

function InvokeServer(Mode, Value)
&#9;pcall(function()
&#9;&#9;local ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;&#9;return ServerReturn
&#9;end)
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
end

function Unequipped()
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXE8925E9F09A743159A33162FAB444861">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=180391962</url></Content>
				<string name="Name">Morph</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBXCD044451965443E89BEC3CC6F7211850">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)
InsertService = game:GetService(&quot;InsertService&quot;)

Animations = {
&#9;Drink = Tool:WaitForChild(&quot;Drink&quot;),
&#9;Morph = Tool:WaitForChild(&quot;Morph&quot;)
}

Sounds = {
&#9;Gulp = Handle:WaitForChild(&quot;Gulp&quot;),
&#9;Sizzle = Handle:WaitForChild(&quot;Sizzle&quot;)
}

Monsters = require(180464321)

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Duration = 30

Speed = 100

Equipped = false

Tool.Enabled = true

ServerControl.OnServerInvoke = (function(player, Mode, Value)
&#9;if player == Player then
&#9;end
end)

function InvokeClient(Mode, Value)
&#9;local ReturnValue = nil
&#9;pcall(function()
&#9;&#9;ReturnValue = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ReturnValue
end

function InsertAsset(AssetId)
&#9;local AssetModel = InsertService:LoadAsset(AssetId)
&#9;local Asset = AssetModel:GetChildren()[1]:Clone()
&#9;if AssetModel and AssetModel.Parent then
&#9;&#9;AssetModel:Destroy()
&#9;end
&#9;return Asset
end

function CheckTableForString(Table, String)
&#9;for i, v in pairs(Table) do
&#9;&#9;if string.lower(v) == string.lower(String) then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function CheckTableForClass(Object, Classes)
&#9;for i, v in pairs(Classes) do
&#9;&#9;if Object:IsA(v) then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function GetAllAssets(Parent, Classes)
&#9;local Assets = {}
&#9;local function GetAssets(Parent)
&#9;&#9;for i, v in pairs(Parent:GetChildren()) do
&#9;&#9;&#9;if v ~= Tool then
&#9;&#9;&#9;&#9;if CheckTableForClass(v, Classes) then
&#9;&#9;&#9;&#9;&#9;table.insert(Assets, v)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;GetAssets(v)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;GetAssets(Parent, Classes)
&#9;return Assets
end

function CheckForProperty(Instance, Property)
&#9;local PropertyExists = false
&#9;pcall(function()
&#9;&#9;local Property = Instance[Property]
&#9;&#9;PropertyExists = true
&#9;end)
&#9;return PropertyExists
end

function CreateMonster(character)
&#9;local Assets = GetAllAssets(character, {&quot;Hat&quot;, &quot;Decal&quot;, &quot;CharacterMesh&quot;, &quot;Clothing&quot;, &quot;ShirtGraphic&quot;, &quot;BodyColors&quot;, &quot;DataModelMesh&quot;})
&#9;local Parts = GetAllAssets(character, {&quot;BasePart&quot;})
&#9;local CharacterAssets = {}
&#9;local CharacterParts = {}
&#9;local MonsterAssets = {}
&#9;local NewFace = false
&#9;local NewHead = false
&#9;for i, v in pairs(Assets) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;table.insert(CharacterAssets, {Parent = v.Parent, Object = v:Clone()})
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(Parts) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;table.insert(CharacterParts, {Part = v, BrickColor = v.BrickColor, Transparency = v.Transparency})
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(character:GetChildren()) do
&#9;&#9;if v:IsA(&quot;BasePart&quot;) and v.Name ~= &quot;HumanoidRootPart&quot; then
&#9;&#9;&#9;v.Transparency = 0
&#9;&#9;end
&#9;end
&#9;local MonsterChosen = Monsters[math.random(1, #Monsters)]
&#9;local MonsterName = MonsterChosen.Name
&#9;for i, v in pairs(MonsterChosen.PackageParts) do
&#9;&#9;local PackagePart = InsertAsset(v)
&#9;&#9;if PackagePart:IsA(&quot;CharacterMesh&quot;) then
&#9;&#9;&#9;table.insert(MonsterAssets, PackagePart)
&#9;&#9;&#9;PackagePart.Parent = character
&#9;&#9;end
&#9;end
&#9;if #MonsterChosen.Hats &gt; 0 then
&#9;&#9;local HatChosen = MonsterChosen.Hats[math.random(1, #MonsterChosen.Hats)]
&#9;&#9;if (not MonsterChosen.BodyColors or #MonsterChosen.BodyColors == 0) and HatChosen.BodyColors and #HatChosen.BodyColors &gt; 0 then
&#9;&#9;&#9;local BodyColorsChosen = HatChosen.BodyColors[math.random(1, #HatChosen.BodyColors)]
&#9;&#9;&#9;for i, v in pairs(BodyColorsChosen) do
&#9;&#9;&#9;&#9;for ii, vv in pairs(character:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;if vv:IsA(&quot;BasePart&quot;) and vv.Name == v.Limb then
&#9;&#9;&#9;&#9;&#9;&#9;vv.BrickColor = BrickColor.new(v.Color)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if (not MonsterChosen.Clothing or #MonsterChosen.Clothing == 0) and HatChosen.Clothing and #HatChosen.Clothing &gt; 0 then
&#9;&#9;&#9;local ClothingChosen = HatChosen.Clothing[math.random(1, #HatChosen.Clothing)]
&#9;&#9;&#9;for i, v in pairs(ClothingChosen) do
&#9;&#9;&#9;&#9;local Clothing = InsertAsset(v)
&#9;&#9;&#9;&#9;if Clothing:IsA(&quot;Clothing&quot;) then
&#9;&#9;&#9;&#9;&#9;Clothing.Parent = character
&#9;&#9;&#9;&#9;elseif Clothing:IsA(&quot;ShirtGraphic&quot;) then
&#9;&#9;&#9;&#9;&#9;Clothing.Parent = character
&#9;&#9;&#9;&#9;&#9;local torso = character:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;&#9;&#9;&#9;if torso then
&#9;&#9;&#9;&#9;&#9;&#9;local Decal = Instance.new(&quot;Decal&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;Decal.Name = &quot;roblox&quot;
&#9;&#9;&#9;&#9;&#9;&#9;Decal.Face = Enum.NormalId.Front
&#9;&#9;&#9;&#9;&#9;&#9;Decal.Texture = Clothing.Graphic
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(MonsterAssets, Decal)
&#9;&#9;&#9;&#9;&#9;&#9;Decal.Parent = torso
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;elseif Clothing:IsA(&quot;Decal&quot;) then
&#9;&#9;&#9;&#9;&#9;Clothing.Name = &quot;face&quot;
&#9;&#9;&#9;&#9;&#9;local head = character:FindFirstChild(&quot;Head&quot;)
&#9;&#9;&#9;&#9;&#9;if head then
&#9;&#9;&#9;&#9;&#9;&#9;NewFace = true
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(MonsterAssets, Clothing)
&#9;&#9;&#9;&#9;&#9;&#9;Clothing.Parent = head
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;elseif Clothing:IsA(&quot;DataModelMesh&quot;) then
&#9;&#9;&#9;&#9;&#9;local head = character:FindFirstChild(&quot;Head&quot;)
&#9;&#9;&#9;&#9;&#9;if head then
&#9;&#9;&#9;&#9;&#9;&#9;NewHead = true
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(MonsterAssers, Clothing)
&#9;&#9;&#9;&#9;&#9;&#9;Clothing.Parent = head
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if (not MonsterChosen.Transparency or #MonsterChosen.Transparency == 0) and HatChosen.Transparency then
&#9;&#9;&#9;for i, v in pairs(HatChosen.Transparency) do
&#9;&#9;&#9;&#9;for ii, vv in pairs(character:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;if vv:IsA(&quot;BasePart&quot;) and vv.Name == v.Limb then
&#9;&#9;&#9;&#9;&#9;&#9;vv.Transparency = v.Transparency
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if #HatChosen.Hats &gt; 0 then
&#9;&#9;&#9;for i, v in pairs(HatChosen.Hats) do
&#9;&#9;&#9;&#9;local Hat = InsertAsset(v)
&#9;&#9;&#9;&#9;local head = character:FindFirstChild(&quot;Head&quot;)
&#9;&#9;&#9;&#9;local handle = Hat:FindFirstChild(&quot;Handle&quot;)
&#9;&#9;&#9;&#9;if head and handle then
&#9;&#9;&#9;&#9;&#9;local handle = handle:Clone()
&#9;&#9;&#9;&#9;&#9;local MonsterMorphEffect = Instance.new(&quot;StringValue&quot;)
&#9;&#9;&#9;&#9;&#9;MonsterMorphEffect.Name = &quot;MonsterMorphEffect&quot;
&#9;&#9;&#9;&#9;&#9;MonsterMorphEffect.Value = MonsterName
&#9;&#9;&#9;&#9;&#9;MonsterMorphEffect.Parent = handle
&#9;&#9;&#9;&#9;&#9;handle.Name = Hat.Name
&#9;&#9;&#9;&#9;&#9;handle.CanCollide = false
&#9;&#9;&#9;&#9;&#9;local HeadWeld = Instance.new(&quot;Weld&quot;)
&#9;&#9;&#9;&#9;&#9;HeadWeld.Name = &quot;HeadWeld&quot;
&#9;&#9;&#9;&#9;&#9;HeadWeld.Part0 = head
&#9;&#9;&#9;&#9;&#9;HeadWeld.Part1 = handle
&#9;&#9;&#9;&#9;&#9;HeadWeld.C0 = CFrame.new(0, 0.5, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
&#9;&#9;&#9;&#9;&#9;HeadWeld.C1 = CFrame.new(
&#9;&#9;&#9;&#9;&#9;&#9;Hat.AttachmentPos.X, --Pos X
&#9;&#9;&#9;&#9;&#9;&#9;Hat.AttachmentPos.Y, --Pos Y
&#9;&#9;&#9;&#9;&#9;&#9;Hat.AttachmentPos.Z, --Pos Z
&#9;&#9;&#9;&#9;&#9;&#9;math.abs(Hat.AttachmentRight.X), --R00
&#9;&#9;&#9;&#9;&#9;&#9;Hat.AttachmentUp.X, --R01
&#9;&#9;&#9;&#9;&#9;&#9;math.abs(Hat.AttachmentForward.X), --R02
&#9;&#9;&#9;&#9;&#9;&#9;Hat.AttachmentRight.Y, --R10
&#9;&#9;&#9;&#9;&#9;&#9;Hat.AttachmentUp.Y, --R11
&#9;&#9;&#9;&#9;&#9;&#9;(math.abs(Hat.AttachmentForward.Y) * -1), --R12
&#9;&#9;&#9;&#9;&#9;&#9;Hat.AttachmentRight.Z, --R20
&#9;&#9;&#9;&#9;&#9;&#9;Hat.AttachmentUp.Z, --R21
&#9;&#9;&#9;&#9;&#9;&#9;math.abs(Hat.AttachmentForward.Z) --R22
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;table.insert(MonsterAssets, handle)
&#9;&#9;&#9;&#9;&#9;handle.Parent = character
&#9;&#9;&#9;&#9;&#9;table.insert(MonsterAssets, HeadWled)
&#9;&#9;&#9;&#9;&#9;HeadWeld.Parent = head
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;if MonsterChosen.BodyColors and #MonsterChosen.BodyColors &gt; 0 then
&#9;&#9;local BodyColorsChosen = MonsterChosen.BodyColors[math.random(1, #MonsterChosen.BodyColors)]
&#9;&#9;for i, v in pairs(BodyColorsChosen) do
&#9;&#9;&#9;for ii, vv in pairs(character:GetChildren()) do
&#9;&#9;&#9;&#9;if vv:IsA(&quot;BasePart&quot;) and vv.Name == v.Limb then
&#9;&#9;&#9;&#9;&#9;vv.BrickColor = BrickColor.new(v.Color)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;if MonsterChosen.Transparency and #MonsterChosen.Transparency &gt; 0 then
&#9;&#9;for i, v in pairs(MonsterChosen.Transparency) do
&#9;&#9;&#9;for ii, vv in pairs(character:GetChildren()) do
&#9;&#9;&#9;&#9;if vv:IsA(&quot;BasePart&quot;) and vv.Name == v.Limb then
&#9;&#9;&#9;&#9;&#9;vv.Transparency = v.Transparency
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;if MonsterChosen.Clothing and #MonsterChosen.Clothing &gt; 0 then
&#9;&#9;local ClothingChosen = MonsterChosen.Clothing[math.random(1, #MonsterChosen.Clothing)]
&#9;&#9;for i, v in pairs(ClothingChosen) do
&#9;&#9;&#9;local Clothing = InsertAsset(v)
&#9;&#9;&#9;if Clothing:IsA(&quot;Clothing&quot;) then
&#9;&#9;&#9;&#9;Clothing.Parent = character
&#9;&#9;&#9;elseif Clothing:IsA(&quot;ShirtGraphic&quot;) then
&#9;&#9;&#9;&#9;Clothing.Parent = character
&#9;&#9;&#9;&#9;local torso = character:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;&#9;&#9;if torso then
&#9;&#9;&#9;&#9;&#9;local Decal = Instance.new(&quot;Decal&quot;)
&#9;&#9;&#9;&#9;&#9;Decal.Name = &quot;roblox&quot;
&#9;&#9;&#9;&#9;&#9;Decal.Face = Enum.NormalId.Front
&#9;&#9;&#9;&#9;&#9;Decal.Texture = Clothing.Graphic
&#9;&#9;&#9;&#9;&#9;table.insert(MonsterAssets, Decal)
&#9;&#9;&#9;&#9;&#9;Decal.Parent = torso
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif Clothing:IsA(&quot;Decal&quot;) then
&#9;&#9;&#9;&#9;Clothing.Name = &quot;face&quot;
&#9;&#9;&#9;&#9;local head = character:FindFirstChild(&quot;Head&quot;)
&#9;&#9;&#9;&#9;if head then
&#9;&#9;&#9;&#9;&#9;NewFace = true
&#9;&#9;&#9;&#9;&#9;table.insert(MonsterAssets, Clothing)
&#9;&#9;&#9;&#9;&#9;Clothing.Parent = head
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif Clothing:IsA(&quot;DataModelMesh&quot;) then
&#9;&#9;&#9;&#9;local head = character:FindFirstChild(&quot;Head&quot;)
&#9;&#9;&#9;&#9;if head then
&#9;&#9;&#9;&#9;&#9;NewHead = true
&#9;&#9;&#9;&#9;&#9;table.insert(MonsterAssets, Clothing)
&#9;&#9;&#9;&#9;&#9;Clothing.Parent = head
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;local head = character:FindFirstChild(&quot;Head&quot;)
&#9;if head then
&#9;&#9;if head.Transparency &gt;= 1 then
&#9;&#9;&#9;head.Transparency = 0
&#9;&#9;&#9;local Mesh = Instance.new(&quot;SpecialMesh&quot;)
&#9;&#9;&#9;Mesh.Scale = Vector3.new(0, 0, 0)
&#9;&#9;&#9;table.insert(MonsterAssets, Mesh)
&#9;&#9;&#9;Mesh.Parent = head
&#9;&#9;elseif not NewHead then
&#9;&#9;&#9;local TempHead = Instance.new(&quot;SpecialMesh&quot;)
&#9;&#9;&#9;TempHead.MeshType = Enum.MeshType.Head
&#9;&#9;&#9;TempHead.Scale = Vector3.new(1.25, 1.25, 1.25)
&#9;&#9;&#9;TempHead.VertexColor = Vector3.new(1, 1, 1)
&#9;&#9;&#9;table.insert(MonsterAssets, TempHead)
&#9;&#9;&#9;TempHead.Parent = head
&#9;&#9;end
&#9;&#9;if not NewFace then
&#9;&#9;&#9;local TempFace = Instance.new(&quot;Decal&quot;)
&#9;&#9;&#9;TempFace.Name = &quot;face&quot;
&#9;&#9;&#9;TempFace.Face = Enum.NormalId.Front
&#9;&#9;&#9;TempFace.Texture = &quot;rbxasset://textures/face.png&quot; --http://www.roblox.com/asset?id=12222851
&#9;&#9;&#9;table.insert(MonsterAssets, TempFace)
&#9;&#9;&#9;TempFace.Parent = head
&#9;&#9;end
&#9;end
&#9;local BodyColors = Instance.new(&quot;BodyColors&quot;)
&#9;for i, v in pairs(character:GetChildren()) do
&#9;&#9;if v:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;local PropertyName = (string.gsub(v.Name, &quot; &quot;, &quot;&quot;) .. &quot;Color&quot;)
&#9;&#9;&#9;if CheckForProperty(BodyColors, PropertyName) then
&#9;&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;&#9;BodyColors[PropertyName] = v.BrickColor
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;BodyColors.Parent = character
&#9;table.insert(MonsterAssets, BodyColors)
&#9;return CharacterAssets, CharacterParts, MonsterAssets, MonsterName
end

function Transform(character)
&#9;Tool.Enabled = false
&#9;local Limbs = {&quot;Head&quot;, &quot;Torso&quot;, &quot;Left Arm&quot;, &quot;Right Arm&quot;, &quot;Left Leg&quot;, &quot;Right Leg&quot;}
&#9;local MonsterMorphed = Instance.new(&quot;StringValue&quot;)
&#9;MonsterMorphed.Name = &quot;MonsterMorphed&quot;
&#9;Debris:AddItem(MonsterMorphed, (Duration + 5))
&#9;MonsterMorphed.Parent = character
&#9;for i, v in pairs(character:GetChildren()) do
&#9;&#9;if v:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;if v:FindFirstChild(&quot;MonsterMorphEffect&quot;) then
&#9;&#9;&#9;&#9;v:Destroy()
&#9;&#9;&#9;elseif CheckTableForString(Limbs, v.Name) then
&#9;&#9;&#9;&#9;local Fire = Instance.new(&quot;Fire&quot;)
&#9;&#9;&#9;&#9;Fire.Color = Color3.new(0, 255, 0)
&#9;&#9;&#9;&#9;Fire.SecondaryColor = Color3.new(0, 170, 0)
&#9;&#9;&#9;&#9;Fire.Heat = 5
&#9;&#9;&#9;&#9;Fire.Size = 10
&#9;&#9;&#9;&#9;Fire.Enabled = true
&#9;&#9;&#9;&#9;Debris:AddItem(Fire, 5)
&#9;&#9;&#9;&#9;Delay(3, function()
&#9;&#9;&#9;&#9;&#9;if Fire and Fire.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;Fire.Enabled = false
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;Fire.Parent = v
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;local CharacterAssets, CharacterParts, MonsterAssets, MonsterName = CreateMonster(character)
&#9;if MonsterMorphed and MonsterMorphed.Parent then
&#9;&#9;MonsterMorphed.Value = MonsterName
&#9;end
&#9;local FakeHat = Instance.new(&quot;Hat&quot;)
&#9;FakeHat.Name = &quot;FakeHat&quot;
&#9;FakeHat.Parent = character
&#9;local FakeHatChanged = FakeHat.Changed:connect(function(Property)
&#9;&#9;if Property == &quot;Parent&quot; then
&#9;&#9;&#9;Delay(0, function()
&#9;&#9;&#9;&#9;if FakeHat.Parent and FakeHat.Parent ~= character then
&#9;&#9;&#9;&#9;&#9;FakeHat.Parent = character
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;end)
&#9;local HatAdded = character.ChildAdded:connect(function(Child)
&#9;&#9;Delay(0, function()
&#9;&#9;&#9;if Child:IsA(&quot;Hat&quot;) and Child.Parent and Child ~= FakeHat then
&#9;&#9;&#9;&#9;Child.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end)
&#9;wait(Duration)
&#9;for i, v in pairs({FakeHatChanged, HatAdded}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(MonsterAssets) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
&#9;if FakeHat and FakeHat.Parent then
&#9;&#9;FakeHat:Destroy()
&#9;end
&#9;for i, v in pairs(CharacterAssets) do
&#9;&#9;if v.Object and v.Parent then
&#9;&#9;&#9;local Object = v.Object:Clone()
&#9;&#9;&#9;if v.Object:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;&#9;Object.BrickColor = v.BrickColor
&#9;&#9;&#9;&#9;Object.Transparency = v.Transparency
&#9;&#9;&#9;end
&#9;&#9;&#9;Object.Parent = v.Parent
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(CharacterParts) do
&#9;&#9;if v.Part and v.Part.Parent then
&#9;&#9;&#9;v.Part.BrickColor = v.BrickColor
&#9;&#9;&#9;v.Part.Transparency = v.Transparency
&#9;&#9;end
&#9;end
&#9;if MonsterMorphed and MonsterMorphed.Parent then
&#9;&#9;MonsterMorphed:Destroy()
&#9;end
&#9;Tool.Enabled = true
end

function Activated()
&#9;if not Tool.Enabled or not CheckIfAlive() or Character:FindFirstChild(&quot;MonsterMorphed&quot;) or Active then
&#9;&#9;return
&#9;end
&#9;Active = true
&#9;local character = Character
&#9;local humanoid = Humanoid
&#9;local CurrentlyEquipped = true
&#9;local UnequippedConnection = Tool.Unequipped:connect(function()
&#9;&#9;CurrentlyEquipped = false
&#9;end)
&#9;InvokeClient(&quot;PlayAnimation&quot;, {Animation = Animations.Drink, FadeTime = 1, Weight = 1, Speed = 1})
&#9;InvokeClient(&quot;PlaySound&quot;, Sounds.Gulp)
&#9;wait(1.5)
&#9;if CurrentlyEquipped then
&#9;&#9;InvokeClient(&quot;StopSound&quot;, Sounds.Gulp)
&#9;&#9;InvokeClient(&quot;PlaySound&quot;, Sounds.Sizzle)
&#9;&#9;wait(1.5)
&#9;&#9;if CurrentlyEquipped then
&#9;&#9;&#9;if humanoid and humanoid.Parent then
&#9;&#9;&#9;&#9;--humanoid.WalkSpeed = 0
&#9;&#9;&#9;end
&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, Animations.Drink)
&#9;&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, {Animation = Animations.Morph, FadeTime = 1, Weight = 1, Speed = 0.5})
&#9;&#9;&#9;wait(1.5)
&#9;&#9;&#9;if CurrentlyEquipped then
&#9;&#9;&#9;&#9;Spawn(function()
&#9;&#9;&#9;&#9;&#9;Transform(character)
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;wait(3)
&#9;&#9;&#9;&#9;if CurrentlyEquipped then
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, Animations.Morph)&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;if humanoid and humanoid.Parent then
&#9;&#9;humanoid.WalkSpeed = 16
&#9;end
&#9;Active = false
end

function CheckIfAlive()
&#9;return (Character.Parent and Player.Parent and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;Equipped = true
end

function Unequipped()
&#9;Equipped = false
&#9;Active = false
&#9;for i, v in pairs(Sounds) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;InvokeClient(&quot;StopSound&quot;, v)
&#9;&#9;end
&#9;end
end

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX0F8A5E9CCF134629916289C55EC39E18">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>111.687447</X>
					<Y>7.92087793</Y>
					<Z>27.2003841</Z>
					<R00>-0.0821422786</R00>
					<R01>-0.374097139</R01>
					<R02>0.923744559</R02>
					<R10>1.86264537e-009</R10>
					<R11>0.926876843</R11>
					<R12>0.375365615</R12>
					<R20>-0.996620655</R20>
					<R21>0.0308333896</R21>
					<R22>-0.0761357695</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>111.225517</X>
					<Y>7.73317194</Y>
					<Z>27.2384567</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>