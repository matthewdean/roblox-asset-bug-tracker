<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX60E845C4748B486B8174BA9E49D8857A">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>3.5</X>
				<Y>1.39999998</Y>
				<Z>-1</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">ScaryGremlinPet</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset?id=180180073</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX073B34A38DEC416CBA58E85DB3B02679">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-4.75267124</X>
					<Y>2.07054186</Y>
					<Z>6.96363163</Z>
					<R00>0.722670853</R00>
					<R01>-0.0190607123</R01>
					<R02>0.690928757</R02>
					<R10>0.0107129496</R10>
					<R11>0.99980849</R11>
					<R12>0.0163766704</R12>
					<R20>-0.691108346</R20>
					<R21>-0.00443306612</R21>
					<R22>0.722736597</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>4</Y>
					<Z>2</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXCBE2265F51EC4576838CC8F0A8737A21">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset?id=180179917</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.100000001</X>
						<Y>0.100000001</Y>
						<Z>0.100000001</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=180180057</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBXB1A0CE93A1DF4422BFAC4768E174C419">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)
Mesh = Handle:WaitForChild(&quot;Mesh&quot;)

Players = game:GetService(&quot;Players&quot;)
InsertService = game:GetService(&quot;InsertService&quot;)

Movement = script:WaitForChild(&quot;Movement&quot;)
Remover = script:WaitForChild(&quot;Remover&quot;)

Grips = {
&#9;Equip = CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),
&#9;Display = CFrame.new(3.5, 1.4, -1, 1, 0, 0, 0, 1, 0, 0, 0, 1)
}

GremlinModel = InsertService:LoadAsset(180497645)
Gremlin = GremlinModel:GetChildren()[1]:Clone()
if GremlinModel and GremlinModel.Parent then
&#9;GremlinModel:Destroy()
end

ReloadTime = 10

Tool.Grip = Grips.Equip
Handle.Transparency = 0
Tool.Enabled = true

function DestroyGremlin()
&#9;if GremlinDied then
&#9;&#9;GremlinDied:disconnect()
&#9;end
&#9;if PlayerGremlin and PlayerGremlin.Parent then
&#9;&#9;PlayerGremlin:Destroy()
&#9;end
&#9;Tool.Enabled = false
&#9;wait(ReloadTime)
&#9;Handle.Transparency = 0
&#9;Tool.Enabled = true
end

function MakeGremlin()
&#9;if PlayerGremlin and PlayerGremlin.Parent then
&#9;&#9;PlayerGremlin:Destroy()
&#9;end
&#9;PlayerGremlin = Gremlin:Clone()
&#9;GremlinDied = PlayerGremlin.Changed:connect(function(Property)
&#9;&#9;if not PlayerGremlin.Parent then
&#9;&#9;&#9;DestroyGremlin()
&#9;&#9;end
&#9;end)
&#9;GremlinTorso = PlayerGremlin:FindFirstChild(&quot;Torso&quot;)
&#9;GremlinTorso.CFrame = Torso.CFrame - Torso.CFrame.lookVector * (((GremlinTorso.Size.Z / 2) + (Torso.Size.Z / 2) + 0))
&#9;local MovementClone = Movement:Clone()
&#9;MovementClone.Disabled = false
&#9;MovementClone.Parent = PlayerGremlin
&#9;local RemoverClone = Remover:Clone()
&#9;local CreatorValue = Instance.new(&quot;ObjectValue&quot;)
&#9;CreatorValue.Name = &quot;Creator&quot;
&#9;CreatorValue.Value = Player
&#9;CreatorValue.Parent = PlayerGremlin
&#9;local ToolValue = Instance.new(&quot;ObjectValue&quot;)
&#9;ToolValue.Name = &quot;Tool&quot;
&#9;ToolValue.Value = Tool
&#9;ToolValue.Parent = PlayerGremlin
&#9;RemoverClone.Disabled = false
&#9;RemoverClone.Parent = PlayerGremlin
&#9;PlayerGremlin.Parent = game:GetService(&quot;Workspace&quot;)
&#9;local TorsoPosition = (Torso.CFrame + Torso.CFrame.lookVector * (((Torso.Size.Z / 2) + (GremlinTorso.Size.Z / 2)) + 0))
&#9;TorsoPosition = (TorsoPosition - (TorsoPosition * CFrame.Angles(0, (math.pi / 2), 0)).lookVector * (Torso.Size.X * 1.5))
&#9;TorsoPosition = (TorsoPosition - Vector3.new(0, (Torso.Size.Y / 2), 0))
&#9;GremlinTorso.CFrame = TorsoPosition
end

function Activated()
&#9;if not Tool.Enabled or (PlayerGremlin and PlayerGremlin.Parent) then
&#9;&#9;return
&#9;end
&#9;Handle.Transparency = 1
&#9;MakeGremlin()
end

function Equipped()
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not Player or not Humanoid or Humanoid.Health == 0 or not Torso then
&#9;&#9;return
&#9;end
end

function Unequipped()
end

Tool.Changed:connect(function(Property)
&#9;if Property == &quot;Parent&quot; and not Tool.Parent:IsA(&quot;Backpack&quot;) and not Players:GetPlayerFromCharacter(Tool.Parent) then
&#9;&#9;if PlayerGremlin and PlayerGremlin.Parent then
&#9;&#9;&#9;PlayerGremlin:Destroy()
&#9;&#9;end
&#9;&#9;Handle.Transparency = 0
&#9;&#9;DestroyGremlin()
&#9;end
end)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX8F678D25397F4594A4936A675519618B">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Remover</string>
					<ProtectedString name="Source">--Made by Luckymaxer

Model = script.Parent

Debris = game:GetService(&quot;Debris&quot;)

Creator = Model:FindFirstChild(&quot;Creator&quot;)
Tool = Model:FindFirstChild(&quot;Tool&quot;)

function DestroyModel()
&#9;Debris:AddItem(Model, 2)
end

if not Creator or not Creator.Value or not Creator.Value.Parent or not Tool or not Tool.Value or not Tool.Value.Parent then
&#9;DestroyModel()
&#9;return
end

ToolObject = Tool.Value
Player = Creator.Value

if not Player or not Player:IsA(&quot;Player&quot;) then
&#9;DestroyModel()
&#9;return
end

Character = Player.Character
if not Character or not Character.Parent then
&#9;DestroyModel()
&#9;return
end

Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
if not Humanoid or Humanoid.Health == 0 then
&#9;DestroyModel()
&#9;return
end

Humanoid.Died:connect(function()
&#9;DestroyModel()
end)

Player.Changed:connect(function(Property)
&#9;if Property == &quot;Character&quot; then
&#9;&#9;DestroyModel()
&#9;end
end)

ToolObject.Changed:connect(function(Property)
&#9;if Property == &quot;Parent&quot; and not ToolObject.Parent then
&#9;&#9;DestroyModel()
&#9;end
end)</ProtectedString>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX5C0ADB1AAA824790BD206FC0A5CECAD0">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Movement</string>
					<ProtectedString name="Source">--Made by Luckymaxer

Figure = script.Parent
Humanoid = Figure:WaitForChild(&quot;Humanoid&quot;)
Torso = Figure:WaitForChild(&quot;Torso&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

Animation = Figure:WaitForChild(&quot;Animation&quot;)
Standing = Animation:WaitForChild(&quot;Standing&quot;)

Creator = Figure:WaitForChild(&quot;Creator&quot;)

if Creator.Value and Creator.Value.Parent and Creator.Value:IsA(&quot;Player&quot;) then
&#9;CreatorPlayer = Creator.Value
&#9;CreatorCharacter = CreatorPlayer.Character
&#9;if CreatorCharacter then
&#9;&#9;CreatorHumanoid = CreatorCharacter:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;CreatorTorso = CreatorCharacter:FindFirstChild(&quot;Torso&quot;)
&#9;end
end

if not CreatorPlayer or not CreatorCharacter or not CreatorHumanoid or not CreatorTorso then
&#9;Creator = nil
else
&#9;Creator = {
&#9;&#9;Player = CreatorPlayer,
&#9;&#9;Character = CreatorCharacter,
&#9;&#9;Humanoid = CreatorHumanoid,
&#9;&#9;Torso = CreatorTorso
&#9;}
end

ScreamScript = script:WaitForChild(&quot;ScreamScript&quot;)

Motors = {}

FollowingPath = false
WalkRadius = 25

FollowRadius = 25
MaxDistanceFromTarget = 50
MaxDistanceFromCreator = 50

TargetPlayer = nil
ScareSuccess = false

Humanoid.Health = Humanoid.MaxHealth

for i, v in pairs(Torso:GetChildren()) do
&#9;if v:IsA(&quot;Motor6D&quot;) then
&#9;&#9;table.insert(Motors, {Parent = v.Parent, Name = v.Name, Part0 = v.Part0, Part1 = v.Part1, C0 = v.C0, C1 = v.C1})
&#9;end
end

function RayCast(Position, Direction, MaxDistance, IgnoreList)
&#9;return game:GetService(&quot;Workspace&quot;):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList) 
end

function MoveAround(TargetPoint)
&#9;TargetPoint = ((not TargetPoint and (Torso.Position + Vector3.new(math.random(-WalkRadius, WalkRadius), 0, math.random(-WalkRadius, WalkRadius))) or TargetPoint))
&#9;Humanoid:MoveTo(TargetPoint)
end

function SecureJump()
&#9;if Humanoid.Jump then
&#9;&#9;return
&#9;end
&#9;local TargetPoint = Humanoid.TargetPoint
&#9;local Blockage, BlockagePos = RayCast((Torso.CFrame + CFrame.new(Torso.Position, Vector3.new(TargetPoint.X, Torso.Position.Y, TargetPoint.Z)).lookVector * (Torso.Size.Z / 2)).p, Torso.CFrame.lookVector, (Torso.Size.Z * 2.5), {Figure, (((Creator and Creator.Character) and Creator.Character) or nil)})
&#9;if not Humanoid.Jump and (Blockage and not Blockage.Parent:FindFirstChild(&quot;Humanoid&quot;)) then
&#9;&#9;Humanoid.Jump = true
&#9;end
end

function GetClosestPossiblePlayer()
&#9;local ClosestPlayer = nil
&#9;local PlayersNearby = {}
&#9;for i, v in pairs(Players:GetChildren()) do
&#9;&#9;if v:IsA(&quot;Player&quot;) and v ~= Creator.Player and v.Character then
&#9;&#9;&#9;local character = v.Character
&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;local torso = character:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;&#9;if humanoid and humanoid.Health &gt; 0 and torso and not character:FindFirstChild(ScreamScript.Name) then
&#9;&#9;&#9;&#9;local ToolsFound = {}
&#9;&#9;&#9;&#9;for i, v in pairs(character:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;if v:IsA(&quot;Tool&quot;) and v.CanBeDropped and v:FindFirstChild(&quot;Handle&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(ToolsFound, v)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if #ToolsFound &gt; 0 then
&#9;&#9;&#9;&#9;&#9;local DistanceApart = (torso.Position - Torso.Position).magnitude
&#9;&#9;&#9;&#9;&#9;if DistanceApart &lt;= FollowRadius then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(PlayersNearby, {Player = v, Distance = DistanceApart, Tools = ToolsFound})
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;if #PlayersNearby &gt; 0 then
&#9;&#9;table.sort(PlayersNearby, (function(Player1, Player2)
&#9;&#9;&#9;return Player1.Distance &lt; Player2.Distance
&#9;&#9;end))
&#9;&#9;local ClosestPlayersNearby = {}
&#9;&#9;for i, v in pairs(PlayersNearby) do
&#9;&#9;&#9;if v.Distance &lt;= PlayersNearby[1].Distance then
&#9;&#9;&#9;&#9;table.insert(ClosestPlayersNearby, v)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;ClosestPlayer = ClosestPlayersNearby[math.random(1, #ClosestPlayersNearby)]
&#9;end
&#9;return ClosestPlayer
end

function ScareTarget()
&#9;Standing.Value = true
&#9;pcall(function()
&#9;&#9;if not TargetPlayer or not TargetPlayer.Player.Parent or not TargetPlayer.Character.Parent or not TargetPlayer.Humanoid.Parent or TargetPlayer.Humanoid.Health == 0 or not TargetPlayer.Torso.Parent or not TargetPlayer.Tools then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;SetVertexColor(Vector3.new(255, 0, 0))
&#9;&#9;Torso.CFrame = CFrame.new(Torso.Position, Vector3.new(TargetPlayer.Torso.Position.X, Torso.Position.Y, TargetPlayer.Torso.Position.Z))
&#9;&#9;ScreamScriptClone = ScreamScript:Clone()
&#9;&#9;ScreamScriptClone.Disabled = false
&#9;&#9;ScreamScriptClone.Parent = TargetPlayer.Character
&#9;&#9;local DropRadius = 10
&#9;&#9;if #TargetPlayer.Tools &gt; 0 then
&#9;&#9;&#9;for i, v in pairs(TargetPlayer.Tools) do
&#9;&#9;&#9;&#9;if v:IsA(&quot;Tool&quot;) then
&#9;&#9;&#9;&#9;&#9;local handle = v:FindFirstChild(&quot;Handle&quot;)
&#9;&#9;&#9;&#9;&#9;if handle then
&#9;&#9;&#9;&#9;&#9;&#9;v.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;handle.CFrame = TargetPlayer.Torso.CFrame + Vector3.new(math.random(-DropRadius, DropRadius), math.random(-0, (DropRadius / 2)), math.random(-DropRadius, DropRadius))
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;ScareSuccess = true
&#9;TargetPlayer = nil
&#9;wait(2)
&#9;if Humanoid and Humanoid.Health &gt; 0 then
&#9;&#9;SetVertexColor(Vector3.new(1, 1, 1))
&#9;&#9;Standing.Value = false
&#9;end
end

for i, v in pairs(Figure:GetChildren()) do
&#9;if v:IsA(&quot;BasePart&quot;) then
&#9;&#9;v.Touched:connect(function(Hit)
&#9;&#9;&#9;if not Hit or not Hit.Parent then
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end
&#9;&#9;&#9;local humanoid = Hit.Parent:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;if not ScareSuccess and humanoid and humanoid.Health &gt; 0 and humanoid ~= Humanoid and TargetPlayer and TargetPlayer.Character and TargetPlayer.Character == Hit.Parent then
&#9;&#9;&#9;&#9;ScareTarget()
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

function SetVertexColor(Color)
&#9;for i, v in pairs(Figure:GetChildren()) do
&#9;&#9;if v:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;for ii, vv in pairs(v:GetChildren()) do
&#9;&#9;&#9;&#9;if vv:IsA(&quot;DataModelMesh&quot;) then
&#9;&#9;&#9;&#9;&#9;vv.VertexColor = Color
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

Humanoid.Died:connect(function()
&#9;SetVertexColor(Vector3.new(255, 0, 0))
&#9;if Humanoid and Humanoid.Parent then
&#9;&#9;Humanoid:Destroy()
&#9;end
&#9;for i, v in pairs(Figure:GetChildren()) do
&#9;&#9;if v:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;v.CanCollide = true
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(Motors) do
&#9;&#9;local Motor = Instance.new(&quot;Motor6D&quot;)
&#9;&#9;Motor.Name = v.Name
&#9;&#9;Motor.Part0 = v.Part0
&#9;&#9;Motor.Part1 = v.Part1
&#9;&#9;Motor.C0 = v.C0
&#9;&#9;Motor.C1 = v.C1
&#9;&#9;Motor.Parent = v.Parent
&#9;end
&#9;Debris:AddItem(Figure, 3)
end)

repeat
&#9;Spawn(function()
&#9;&#9;if not TargetPlayer and not ScareSuccess then
&#9;&#9;&#9;local ClosestPlayerInfo = GetClosestPossiblePlayer()
&#9;&#9;&#9;if ClosestPlayerInfo then
&#9;&#9;&#9;&#9;local ClosestPlayer = ClosestPlayerInfo.Player
&#9;&#9;&#9;&#9;local PlayerCharacter = ClosestPlayer.Character
&#9;&#9;&#9;&#9;local PlayerHumanoid = nil
&#9;&#9;&#9;&#9;local PlayerTorso = nil
&#9;&#9;&#9;&#9;if PlayerCharacter then
&#9;&#9;&#9;&#9;&#9;PlayerHumanoid = PlayerCharacter:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;&#9;&#9;PlayerTorso = PlayerCharacter:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if PlayerHumanoid and PlayerHumanoid.Health &gt; 0 and PlayerTorso then
&#9;&#9;&#9;&#9;&#9;TargetPlayer = {
&#9;&#9;&#9;&#9;&#9;&#9;Player = ClosestPlayer,
&#9;&#9;&#9;&#9;&#9;&#9;Character = PlayerCharacter,
&#9;&#9;&#9;&#9;&#9;&#9;Humanoid = PlayerHumanoid,
&#9;&#9;&#9;&#9;&#9;&#9;Torso = PlayerTorso,
&#9;&#9;&#9;&#9;&#9;&#9;Tools = ClosestPlayerInfo.Tools
&#9;&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if not TargetPlayer or ScareSuccess then
&#9;&#9;&#9;local TorsoPosition = nil
&#9;&#9;&#9;if Creator and Creator.Character.Parent and Creator.Humanoid.Parent and Creator.Humanoid.Health &gt; 0 and Creator.Torso.Parent then
&#9;&#9;&#9;&#9;TorsoPosition = (Creator.Torso.CFrame + Creator.Torso.CFrame.lookVector * (((Creator.Torso.Size.Z / 2) + (Torso.Size.Z / 2)) + 0))
&#9;&#9;&#9;&#9;TorsoPosition = (TorsoPosition - (TorsoPosition * CFrame.Angles(0, (math.pi / 2), 0)).lookVector * (Creator.Torso.Size.X * 1.5))
&#9;&#9;&#9;&#9;TorsoPosition = (TorsoPosition - Vector3.new(0, (Creator.Torso.Size.Y / 2), 0)).p
&#9;&#9;&#9;&#9;if ScareSuccess and (Torso.Position - Creator.Torso.Position).magnitude &lt;= 6 then
&#9;&#9;&#9;&#9;&#9;ScareSuccess = false
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;MoveAround((TorsoPosition and TorsoPosition) or nil)
&#9;&#9;else
&#9;&#9;&#9;local DistanceFromTarget = nil
&#9;&#9;&#9;local DistanceFromCreator = nil
&#9;&#9;&#9;if TargetPlayer and TargetPlayer.Character.Parent and TargetPlayer.Humanoid.Parent and TargetPlayer.Humanoid.Health &gt; 0 and TargetPlayer.Torso.Parent and Creator and Creator.Character.Parent and Creator.Humanoid.Parent and Creator.Humanoid.Health &gt; 0 and Creator.Torso.Parent then
&#9;&#9;&#9;&#9;DistanceFromTarget = (Torso.Position - TargetPlayer.Torso.Position).magnitude
&#9;&#9;&#9;&#9;DistanceFromCreator = (Torso.Position - Creator.Torso.Position).magnitude
&#9;&#9;&#9;&#9;local TargetTools = {}
&#9;&#9;&#9;&#9;for i, v in pairs(TargetPlayer.Tools) do
&#9;&#9;&#9;&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(TargetTools, v)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if #TargetTools &gt; 0 and DistanceFromTarget &lt;= MaxDistanceFromTarget and DistanceFromCreator &lt;= MaxDistanceFromCreator then
&#9;&#9;&#9;&#9;&#9;MoveAround((TargetPlayer.Torso.CFrame - CFrame.new(Torso.Position, TargetPlayer.Torso.Position).lookVector * 1).p)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;ScareSuccess = true
&#9;&#9;&#9;&#9;&#9;TargetPlayer = nil
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;ScareSuccess = true
&#9;&#9;&#9;&#9;TargetPlayer = nil
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;SecureJump()
&#9;wait(0.25)
until false</ProtectedString>
				</Properties>
				<Item class="Script" referent="RBXE31204A1DFE44F99A69CB16A3A5F013E">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ScreamScript</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Character = script.Parent
Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
Head = Character:FindFirstChild(&quot;Head&quot;)

Debris = game:GetService(&quot;Debris&quot;)
InsertService = game:GetService(&quot;InsertService&quot;)

ScareScript = script:WaitForChild(&quot;ScareScript&quot;)

Faces = {147144644, 117522793, 34186804, 30395097, 30265169, 21755022, 21635583, 20909103, 17138027, 14812981, 14127194, 7699177}

function DestroyScript()
&#9;if ScareScriptClone and ScareScriptClone.Parent then
&#9;&#9;Debris:AddItem(ScareScriptClone, 2)
&#9;end
&#9;Debris:AddItem(script, 2)
end

if not Humanoid then
&#9;DestroyScript()
&#9;return
end

ScareScriptClone = ScareScript:Clone()
ScareScriptClone.Disabled = false

RemoteConnection = Instance.new(&quot;RemoteFunction&quot;)
RemoteConnection.Name = &quot;RemoteConnection&quot;
RemoteConnection.Parent = ScareScriptClone

RemoteConnection.OnServerInvoke = (function(Player, Mode, Value)
&#9;if Mode == &quot;Destroy&quot; and Value then
&#9;&#9;if Face and Face.Parent then
&#9;&#9;&#9;Face.Texture = OriginalTexture
&#9;&#9;end
&#9;&#9;DestroyScript()
&#9;end
end)

ScareScriptClone.Parent = Character

if Head then
&#9;Face = Head:FindFirstChild(&quot;face&quot;)
&#9;OriginalTexture = Face.Texture
&#9;local NewTexture = InsertService:LoadAsset(Faces[math.random(1, #Faces)]):GetChildren()[1].Texture
&#9;Face.Texture = NewTexture
else
&#9;DestroyScript()
end

Delay(15, function()
&#9;DestroyScript()
end)</ProtectedString>
					</Properties>
					<Item class="LocalScript" referent="RBXCB864558577A4A2E9FC3C405DF76F27F">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">ScareScript</string>
							<ProtectedString name="Source">--Made by Luckymaxer

Character = script.Parent
Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)

Debris = game:GetService(&quot;Debris&quot;)

Animations = {
&#9;Scream = {Animation = script:WaitForChild(&quot;Scream&quot;), FadeTime = 1, Weight = 1, Speed = 5, Duration = 5},
&#9;Frightened = {Animation = script:WaitForChild(&quot;Frightened&quot;), FadeTime = 1, Weight = 1, Speed = 0.5, Duration = 5},
}

RemoteConnection = script:FindFirstChild(&quot;RemoteConnection&quot;)

function DestroyScript()
&#9;pcall(function()
&#9;&#9;RemoteConnection:InvokeServer(&quot;Destroy&quot;, true)
&#9;end)
&#9;Debris:AddItem(script, 2)
end

if not Humanoid or not RemoteConnection then
&#9;DestroyScript()
&#9;return
end

Humanoid.WalkSpeed = 0
for i, v in pairs(Animations) do
&#9;AnimTrack = Humanoid:LoadAnimation(v.Animation)
&#9;if AnimTrack then
&#9;&#9;AnimTrack:Play(v.FadeTime, v.Weight, v.Speed)
&#9;end
&#9;wait(v.Duration)
&#9;if AnimTrack then
&#9;&#9;AnimTrack:Stop()
&#9;end
end
Humanoid.WalkSpeed = 16

DestroyScript()</ProtectedString>
						</Properties>
						<Item class="Animation" referent="RBX0E18B1EE16504F8CADBC3162DBC83671">
							<Properties>
								<Content name="AnimationId"><url>http://www.roblox.com/asset?id=180611870</url></Content>
								<string name="Name">Scream</string>
							</Properties>
						</Item>
						<Item class="Animation" referent="RBXA3182D80AF65460785C1B131083770F2">
							<Properties>
								<Content name="AnimationId"><url>http://www.roblox.com/asset?id=180612465</url></Content>
								<string name="Name">Frightened</string>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBXF7FDAEFEDE1E402CB1C78DCAAB207856">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = &quot;rbxasset://textures/GunCursor.png&quot;
Reloading_Icon = &quot;rbxasset://textures/GunWaitCursor.png&quot;

Tool = script.Parent

Mouse = nil

function UpdateIcon()
&#9;if Mouse then
&#9;&#9;Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
&#9;end
end

function OnEquipped(ToolMouse)
&#9;Mouse = ToolMouse
&#9;UpdateIcon()
end

function OnChanged(Property)
&#9;if Property == &quot;Enabled&quot; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX55753075B3844DC6B2260AAFD0EBFD4B">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-3.78783989</X>
					<Y>4.11235905</Y>
					<Z>2.97198224</Z>
					<R00>-0.946653247</R00>
					<R01>-0.132609829</R01>
					<R02>0.293704361</R02>
					<R10>-7.4505806e-009</R10>
					<R11>0.911406457</R11>
					<R12>0.411507189</R12>
					<R20>-0.322253972</R20>
					<R21>0.38955462</R21>
					<R22>-0.862785876</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-4.05217457</X>
					<Y>3.74200153</Y>
					<Z>3.74849176</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>