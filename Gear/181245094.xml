<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXf3f55376ebf648d68171cc299d044498">
		<Properties>
			<bool name="CanBeDropped">false</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-1</Y>
				<Z>0.100000001</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">TrollSummoner</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset?id=179628574</url></Content>
			<string name="ToolTip">Troll Summoner</string>
		</Properties>
		<Item class="Part" referent="RBX3309d1c614be4b38b57a0dc2e2446817">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-1.28500009</X>
					<Y>1.20000005</Y>
					<Z>-0.504999995</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1.42999995</X>
					<Y>3.5999999</Y>
					<Z>0.99000001</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX7b4f6c964c764adfa382b27c2f29e59b">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset?id=179628648</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=179628621</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX27fd13672d634e72a89866cd0904ab13">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">TrollSummonerLocalScript</string>
				<ProtectedString name="Source">-- Made by SolarCrane



local COOLDOWN = 60.0 * 5

local EXIT_CODES =
{
&#9;SUCCESS = &quot;SUCCESS&quot;;
&#9;BAD_LOC = &quot;Invalid Spawn Location&quot;;
&#9;COOLDOWN = &quot;On Cooldown&quot;;
&#9;INVALID_ARG = &quot;Invalid Arguements&quot;;
&#9;ERROR = &quot;Error&quot;;
}

local COLORFUL_TROLL_FACE = &quot;http://www.roblox.com/asset/?id=180506286&quot;
local COLORLESS_TROLL_FACE = &quot;http://www.roblox.com/asset/?id=180506414&quot;
local TROLL_FACE_SIZE = UDim2.new(0,228,0,229)

local RS = game:GetService(&apos;ReplicatedStorage&apos;)
local PlayersService = game:GetService(&quot;Players&quot;)

local Utility = require(RS:WaitForChild(&apos;Utility&apos;))
local Signal = require(RS:WaitForChild(&apos;Signal&apos;))
local CreateLocalWelder = require(RS:WaitForChild(&apos;LocalEquipWeld&apos;))


local LocalPlayer = PlayersService.LocalPlayer
local PlayerGui = LocalPlayer.PlayerGui

local Tool = script.Parent
local Handle = Tool:WaitForChild(&apos;Handle&apos;)
local RequestShootServer = Tool:WaitForChild(&apos;RequestShootServer&apos;)
local TimeLeftUntilSummon = Tool:WaitForChild(&apos;TimeLeftUntilSummon&apos;)
local LastActivation = 0 --tick()

CreateLocalWelder(Tool)

local TrollSummoningGui = nil


local function CreateGui()
&#9;local this = {}
&#9;
&#9;function this:Show()
&#9;&#9;this.Container.Visible = true
&#9;end
&#9;
&#9;function this:Hide()
&#9;&#9;this.Container.Visible = false
&#9;end

&#9;function this:Update()
&#9;&#9;local now = tick()
&#9;&#9;local elapsedTime = now - LastActivation
&#9;&#9;local remainingTime = COOLDOWN - elapsedTime
&#9;&#9;local alpha = Utility.Clamp(0, 1, elapsedTime / COOLDOWN)
&#9;&#9;if this.ColorfulOccluder then
&#9;&#9;&#9;this.ColorfulOccluder.Size = UDim2.new(1,0,-alpha,0);
&#9;&#9;end
&#9;&#9;if this.CountdownTime then
&#9;&#9;&#9;if remainingTime &gt;= 1 then
&#9;&#9;&#9;&#9;local seconds = math.floor(remainingTime % 60)
&#9;&#9;&#9;&#9;local minutes = math.floor(remainingTime / 60)
&#9;&#9;&#9;&#9;if minutes &gt; 0 then
&#9;&#9;&#9;&#9;&#9;this.CountdownTime.Text = tostring(minutes) .. &quot;m&quot;
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;this.CountdownTime.Text = tostring(seconds) .. &quot;s&quot;
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if this.Title then
&#9;&#9;&#9;&#9;&#9;this.Title.Visible = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;this.CountdownTime.Text = &quot;READY&quot;
&#9;&#9;&#9;&#9;if this.Title then
&#9;&#9;&#9;&#9;&#9;this.Title.Visible = false
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;local function Init()
&#9;&#9;
&#9;&#9;this.ScreenGui = Utility.Create&apos;ScreenGui&apos;
&#9;&#9;{
&#9;&#9;&#9;Name = &quot;TrollSummonerGui&quot;;
&#9;&#9;&#9;Parent = PlayerGui;
&#9;&#9;}
&#9;&#9;&#9;this.Container = Utility.Create&apos;Frame&apos;
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;Name = &quot;Container&quot;;
&#9;&#9;&#9;&#9;Size = UDim2.new(0.3,0,1,-225);
&#9;&#9;&#9;&#9;Position = UDim2.new(0.35, 0, 0, 100);
&#9;&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;&#9;Parent = this.ScreenGui;
&#9;&#9;&#9;};
&#9;&#9;&#9;&#9;this.Title = Utility.Create&apos;TextLabel&apos;
&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;Name = &quot;Title&quot;;
&#9;&#9;&#9;&#9;&#9;ZIndex = 2;
&#9;&#9;&#9;&#9;&#9;Text = &quot;The Troll Is Feeding&quot;;
&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(0,30,0,60);
&#9;&#9;&#9;&#9;&#9;Size = UDim2.new(1,-60,0,50);
&#9;&#9;&#9;&#9;&#9;--TextColor3 = Color3.new(177/255,70/255,35/255);
&#9;&#9;&#9;&#9;&#9;TextColor3 = Color3.new(246/255,146/255,29/255);
&#9;&#9;&#9;&#9;&#9;Font = Enum.Font.SourceSansBold;
&#9;&#9;&#9;&#9;&#9;FontSize = Enum.FontSize.Size36;
&#9;&#9;&#9;&#9;&#9;TextYAlignment = Enum.TextYAlignment.Center;
&#9;&#9;&#9;&#9;&#9;Parent = this.Container;
&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;this.CountdownTime = Utility.Create&apos;TextLabel&apos;
&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;Name = &quot;CountdownTime&quot;;
&#9;&#9;&#9;&#9;&#9;ZIndex = 2;
&#9;&#9;&#9;&#9;&#9;Text = &quot;&quot;;
&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(0,30,0.5,-25);
&#9;&#9;&#9;&#9;&#9;Size = UDim2.new(1,-60,0,50);
&#9;&#9;&#9;&#9;&#9;TextColor3 = Color3.new(177/255,70/255,35/255);
&#9;&#9;&#9;&#9;&#9;--TextColor3 = Color3.new(246/255,146/255,29/255);
&#9;&#9;&#9;&#9;&#9;Font = Enum.Font.SourceSansBold;
&#9;&#9;&#9;&#9;&#9;FontSize = Enum.FontSize.Size48;
&#9;&#9;&#9;&#9;&#9;TextYAlignment = Enum.TextYAlignment.Center;
&#9;&#9;&#9;&#9;&#9;Parent = this.Container;
&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;this.ErrorMsg = Utility.Create&apos;TextLabel&apos;
&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;Name = &quot;ErrorMsg&quot;;
&#9;&#9;&#9;&#9;&#9;ZIndex = 2;
&#9;&#9;&#9;&#9;&#9;Text = &quot;&quot;;
&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(0,30,0,90);
&#9;&#9;&#9;&#9;&#9;Size = UDim2.new(1,-60,0,50);
&#9;&#9;&#9;&#9;&#9;--TextColor3 = Color3.new(177/255,70/255,35/255);
&#9;&#9;&#9;&#9;&#9;TextColor3 = Color3.new(246/255,146/255,29/255);
&#9;&#9;&#9;&#9;&#9;Font = Enum.Font.SourceSansBold;
&#9;&#9;&#9;&#9;&#9;FontSize = Enum.FontSize.Size48;
&#9;&#9;&#9;&#9;&#9;TextYAlignment = Enum.TextYAlignment.Center;
&#9;&#9;&#9;&#9;&#9;Visible = false;
&#9;&#9;&#9;&#9;&#9;Parent = this.Container;
&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;--[[
&#9;&#9;&#9;&#9;this.CloseButton = Utility.Create&apos;TextButton&apos;
&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;Name = &quot;CloseButton&quot;;
&#9;&#9;&#9;&#9;&#9;ZIndex = 2;
&#9;&#9;&#9;&#9;&#9;Text = &quot;X&quot;;
&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;&#9;&#9;TextColor3 = Color3.new(246/255,146/255,29/255);
&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(1,-50,0,3);
&#9;&#9;&#9;&#9;&#9;Size = UDim2.new(0,45,0,45);
&#9;&#9;&#9;&#9;&#9;Font = Enum.Font.Arial;
&#9;&#9;&#9;&#9;&#9;FontSize = Enum.FontSize.Size36;
&#9;&#9;&#9;&#9;&#9;Style = Enum.ButtonStyle.RobloxRoundDefaultButton;
&#9;&#9;&#9;&#9;&#9;Parent = this.Container;
&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;--]]
&#9;&#9;&#9;&#9;this.ColorLessImage = Utility.Create&apos;ImageLabel&apos;
&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;Name = &quot;Colorless&quot;;
&#9;&#9;&#9;&#9;&#9;Size = TROLL_FACE_SIZE;
&#9;&#9;&#9;&#9;&#9;Image = COLORLESS_TROLL_FACE;
&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(0.5, -TROLL_FACE_SIZE.X.Offset/2, 0.5, -TROLL_FACE_SIZE.Y.Offset/2);
&#9;&#9;&#9;&#9;&#9;ImageTransparency = 0.5;
&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;&#9;&#9;Parent = this.Container;
&#9;&#9;&#9;&#9;};
&#9;&#9;&#9;&#9;&#9;this.ColorfulOccluder = Utility.Create&apos;Frame&apos;
&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;Name = &quot;ColorfulOccluder&quot;;
&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.new(1,0,-0.5,0);
&#9;&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(0, 0, 1, 0);
&#9;&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;&#9;&#9;&#9;ClipsDescendants = true;
&#9;&#9;&#9;&#9;&#9;&#9;Parent = this.ColorLessImage;
&#9;&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;&#9;&#9;this.ColorfulImage = Utility.Create&apos;ImageLabel&apos;
&#9;&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Name = &quot;Colorful&quot;;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Size = TROLL_FACE_SIZE;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Image = COLORFUL_TROLL_FACE;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(0, 0, 1, -TROLL_FACE_SIZE.Y.Offset);
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Parent = this.ColorfulOccluder;
&#9;&#9;&#9;&#9;&#9;&#9;};
&#9;&#9;&#9;&#9;&#9;--[[
&#9;&#9;&#9;&#9;this.CloseButton.MouseButton1Click:connect(function()
&#9;&#9;&#9;&#9;&#9;this:Hide()
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;--]]
&#9;end
&#9;
&#9;Init()
&#9;
&#9;return this
end


local function TrySummonTheTrolls()
&#9;local now = tick()
&#9;if now - LastActivation &lt; COOLDOWN then
&#9;&#9;-- Still on cooldown
&#9;&#9;return
&#9;end
&#9;local humanoid = Utility.GetHumanoid(LocalPlayer)
&#9;local targetPoint = humanoid and humanoid.TargetPoint
&#9;spawn(function()
&#9;&#9;local exitCode = RequestShootServer:InvokeServer(targetPoint, tick() + (_G.ClientTimeDiff or 0))
&#9;&#9;local timeRemaining = TimeLeftUntilSummon:InvokeServer()
&#9;&#9;LastActivation = tick() - (COOLDOWN - timeRemaining)
&#9;&#9;if exitCode and exitCode ~= EXIT_CODES.SUCCESS then
&#9;&#9;&#9;if TrollSummoningGui and TrollSummoningGui.ErrorMsg then
&#9;&#9;&#9;&#9;TrollSummoningGui.ErrorMsg.Text = &quot;The Troll Requires a Valid Spawn Location&quot;
&#9;
&#9;&#9;&#9;&#9;TrollSummoningGui.ErrorMsg.Visible = true
&#9;&#9;&#9;&#9;delay(3, function()
&#9;&#9;&#9;&#9;&#9;TrollSummoningGui.ErrorMsg.Visible = false
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
end


local Equipped = false
local function OnEquip()
&#9;Equipped = true
&#9;Handle.Transparency = 0
&#9;local humanoid = Utility.GetHumanoid(LocalPlayer)
&#9;if humanoid then
&#9;&#9;--local FireReloadAnim = Tool:FindFirstChild(&apos;FireAndReload&apos;)
&#9;&#9;--FireReloadAnimTrack = FireReloadAnim and humanoid:LoadAnimation(FireReloadAnim)
&#9;end
&#9;if not TrollSummoningGui then
&#9;&#9;TrollSummoningGui = CreateGui()
&#9;end
&#9;local timeRemaining = TimeLeftUntilSummon:InvokeServer()
&#9;LastActivation = tick() - (COOLDOWN - timeRemaining)
&#9;TrollSummoningGui:Show()
&#9;spawn(function()
&#9;&#9;while Equipped do
&#9;&#9;&#9;if TrollSummoningGui then
&#9;&#9;&#9;&#9;TrollSummoningGui:Update()
&#9;&#9;&#9;end
&#9;&#9;&#9;wait()
&#9;&#9;end
&#9;end)
end

local function OnUnequip()
&#9;Equipped = false
&#9;if TrollSummoningGui then
&#9;&#9;TrollSummoningGui:Hide()
&#9;end
end

local function OnActivated()
&#9;if Equipped then
&#9;&#9;TrySummonTheTrolls()
&#9;end
end

CreateLocalWelder(Tool)

Tool.Equipped:connect(OnEquip)
Tool.Unequipped:connect(OnUnequip)
Tool.Activated:connect(OnActivated)

</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX2dde5fa44d344e04949c0069878c31d4">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">local MOUSE_ICON = &apos;rbxasset://textures/GunCursor.png&apos;
local RELOADING_ICON = &apos;rbxasset://textures/GunWaitCursor.png&apos;

local Tool = script.Parent

local Mouse = nil

local function UpdateIcon()
&#9;Mouse.Icon = Tool.Enabled and MOUSE_ICON or RELOADING_ICON
end

local function OnEquipped(mouse)
&#9;Mouse = mouse
&#9;UpdateIcon()
end

local function OnChanged(property)
&#9;if property == &apos;Enabled&apos; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="RemoteFunction" referent="RBXf05bfb87f272439b85fdaf896afe0de0">
			<Properties>
				<string name="Name">RequestShootServer</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBXcafb40667c7d47f4b38633ead56f4d8e">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">TrollSummonerServerScript</string>
				<ProtectedString name="Source">-- Made by SolarCrane

local RS = game:GetService(&apos;ReplicatedStorage&apos;)
local PlayersService = game:GetService(&quot;Players&quot;)
local Debris = game:GetService(&apos;Debris&apos;)
local ServerScriptService = game:GetService(&apos;ServerScriptService&apos;)

local Utility = require(RS:WaitForChild(&apos;Utility&apos;))
local Signal = require(RS:WaitForChild(&apos;Signal&apos;))
local Pathfinding = require(ServerScriptService.Pathfinding)
local MonsterManager = require(ServerScriptService.MonsterManager)

local TrollManager = require(ServerScriptService.TrollManager)

local DEBRIS_TIME = 6
local COOLDOWN = 60.0 * 5
local MAX_SPAWN_DISTANCE = 150

local LastShot = 0
local Equipped = false
local MyPlayer = nil
local Character = nil
local Tool = script.Parent
local Handle = Tool:WaitForChild(&apos;Handle&apos;)
local Boom = script:WaitForChild(&apos;Boom&apos;)
local RequestShootServer = Tool:WaitForChild(&apos;RequestShootServer&apos;)
local TimeLeftUntilSummon = Tool:WaitForChild(&apos;TimeLeftUntilSummon&apos;)

local EXIT_CODES =
{
&#9;SUCCESS = &quot;SUCCESS&quot;;
&#9;BAD_LOC = &quot;Invalid Spawn Location&quot;;
&#9;COOLDOWN = &quot;On Cooldown&quot;;
&#9;INVALID_ARG = &quot;Invalid Arguements&quot;;
&#9;ERROR = &quot;Error&quot;;
}

-- Pure functional
local function DoSpawnEffects(point)
&#9;local pillar = Utility.Create&apos;Part&apos;
&#9;{
&#9;&#9;Name = &apos;SpawnPillar&apos;;
&#9;&#9;TopSurface = &apos;Smooth&apos;;
&#9;&#9;BottomSurface = &apos;Smooth&apos;;
&#9;&#9;CanCollide = false;
&#9;&#9;Anchored = true;
&#9;}
&#9;pillar.FormFactor = &apos;Custom&apos;&#9;
&#9;pillar.Size = Vector3.new(1, 50, 1)
&#9;pillar.CFrame = CFrame.new(point + Vector3.new(0,25,0));

&#9;delay(0.1, function()
&#9;&#9;local boomClone = Boom:Clone()
&#9;&#9;boomClone.Parent = pillar
&#9;&#9;boomClone:Play()
&#9;end)
&#9;
&#9;local mesh = Utility.Create&apos;CylinderMesh&apos;{
&#9;&#9;&#9;Scale = Vector3.new(1,1,1);
&#9;&#9;&#9;Parent = pillar;
&#9;&#9;};
&#9;
&#9;Utility.PropertyTweener(mesh, &quot;Scale&quot;, Vector3.new(0.1,1,0.1), Vector3.new(18,1,18), 0.3, Utility.EaseInOutQuad, function()
&#9;&#9;wait(3)
&#9;&#9;if mesh then
&#9;&#9;&#9;Utility.PropertyTweener(mesh, &quot;Scale&quot;, mesh.Scale, Vector3.new(0,1,0), 0.3, Utility.EaseOutQuad)
&#9;&#9;end
&#9;end)
&#9;spawn(function()
&#9;&#9;for i = 1, 10 do
&#9;&#9;&#9;if pillar then
&#9;&#9;&#9;&#9;-- flicker it on and off
&#9;&#9;&#9;&#9;pillar.Transparency = i % 2
&#9;&#9;&#9;end
&#9;&#9;&#9;wait(0.3/10)
&#9;&#9;end
&#9;&#9;if pillar then
&#9;&#9;&#9;pillar.Transparency = 0
&#9;&#9;end
&#9;end)
&#9;
&#9;local numProjectiles = 10
&#9;for i = 1, numProjectiles do
&#9;&#9;local shootOffDirection = (CFrame.Angles(0, i * ((2*math.pi)/10), 0) * Vector3.new(0,0,1)).unit + Vector3.new(0,1,0)
&#9;&#9;&#9;local projectile = Utility.Create&apos;Part&apos;
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;Name = &apos;Effect&apos;;
&#9;&#9;&#9;&#9;TopSurface = &apos;Smooth&apos;;
&#9;&#9;&#9;&#9;BottomSurface = &apos;Smooth&apos;;
&#9;&#9;&#9;&#9;CanCollide = false;
&#9;&#9;&#9;}
&#9;&#9;&#9;projectile.CFrame = CFrame.new(point) + shootOffDirection.unit
&#9;&#9;&#9;projectile.FormFactor = &apos;Custom&apos;&#9;
&#9;&#9;&#9;projectile.Size = Vector3.new(.2,.2,.2)
&#9;&#9;&#9;projectile.Velocity = shootOffDirection.unit * 80
&#9;&#9;&#9;-- Add fire
&#9;&#9;&#9;local fire = Instance.new(&apos;Fire&apos;, projectile)
&#9;&#9;&#9;fire.Heat = 20
&#9;&#9;&#9;fire.Size = 20
&#9;&#9;&#9;Debris:AddItem(projectile, 3)
&#9;&#9;&#9;projectile.Parent = workspace
&#9;&#9;&#9;local touchConn = nil
&#9;&#9;&#9;touchConn = projectile.Touched:connect(function(other)
&#9;&#9;&#9;&#9;if other.CanCollide == true then
&#9;&#9;&#9;&#9;&#9;touchConn:disconnect()
&#9;&#9;&#9;&#9;&#9;local explosion = Utility.Create&apos;Explosion&apos;
&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;BlastPressure = 0;
&#9;&#9;&#9;&#9;&#9;&#9;BlastRadius = 10;
&#9;&#9;&#9;&#9;&#9;&#9;Position = projectile.CFrame.p;
&#9;&#9;&#9;&#9;&#9;&#9;Parent = workspace;
&#9;&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;end
&#9;
&#9;Debris:AddItem(pillar, 5)
&#9;pillar.Parent = workspace

&#9;return pillar
end

local function OnShoot(player, desiredSpawnPoint, localTime)
&#9;-- Someone else is trying to call shoot on my weapon; GET DENIED
&#9;if player ~= MyPlayer then
&#9;&#9;return EXIT_CODES.INVALID_ARG
&#9;end
&#9;if not desiredSpawnPoint then
&#9;&#9;return EXIT_CODES.INVALID_ARG
&#9;end
&#9;
&#9;local oldActivation = TrollManager:GetLastActivation(player)&#9;
&#9;local now = tick()&#9;
&#9;TrollManager:SetLastActivation(player, now)
&#9;if now - oldActivation &lt; COOLDOWN then
&#9;&#9;TrollManager:SetLastActivation(player, oldActivation)
&#9;&#9;return EXIT_CODES.COOLDOWN
&#9;end
&#9;if Equipped and Handle and Utility.CanFire(MyPlayer) then
&#9;&#9;local character = MyPlayer.Character
&#9;&#9;if MyPlayer:DistanceFromCharacter(desiredSpawnPoint) &gt; MAX_SPAWN_DISTANCE then
&#9;&#9;&#9;TrollManager:SetLastActivation(player, oldActivation)
&#9;&#9;&#9;return EXIT_CODES.BAD_LOC
&#9;&#9;end
&#9;&#9;
&#9;&#9;local characterCframe = character and character:GetModelCFrame()
&#9;&#9;local foundPath = characterCframe and Pathfinding:GetPath(desiredSpawnPoint, characterCframe.p)
&#9;&#9;-- Check if it is a legit spawning locations
&#9;&#9;if characterCframe and foundPath then
&#9;&#9;&#9;if foundPath then
&#9;&#9;&#9;&#9;DoSpawnEffects(desiredSpawnPoint)
&#9;&#9;&#9;&#9;-- Spawn the troll
&#9;&#9;&#9;&#9;local spawnSuccess = MonsterManager:SpawnTroll(desiredSpawnPoint + Vector3.new(0,4,0))
&#9;&#9;&#9;&#9;if spawnSuccess then
&#9;&#9;&#9;&#9;&#9;return EXIT_CODES.SUCCESS
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;TrollManager:SetLastActivation(player, oldActivation)
&#9;&#9;&#9;&#9;&#9;return EXIT_CODES.ERROR
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;TrollManager:SetLastActivation(player, oldActivation)
&#9;&#9;&#9;return EXIT_CODES.BAD_LOC
&#9;&#9;end
&#9;end
&#9;TrollManager:SetLastActivation(player, oldActivation)
&#9;return EXIT_CODES.ERROR
end

local function OnEquipped()
&#9;Equipped = true
&#9;Character = Tool.Parent
&#9;if Character then
&#9;&#9;MyPlayer = PlayersService:GetPlayerFromCharacter(Character)
&#9;end
end

local function OnUnequipped()
&#9;Equipped = false
end

--------------------
--| Script Logic |--
--------------------

RequestShootServer.OnServerInvoke = OnShoot
TimeLeftUntilSummon.OnServerInvoke = function(player)
&#9;return COOLDOWN - (tick() - TrollManager:GetLastActivation(player))
end


Tool.Equipped:connect(OnEquipped)
Tool.Unequipped:connect(OnUnequipped)

</ProtectedString>
			</Properties>
			<Item class="Sound" referent="RBX0c01fbaab010437896d487522ad954c6">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Boom</string>
					<float name="Pitch">0.649999976</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=106018135</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
		</Item>
		<Item class="RemoteFunction" referent="RBXd7573a0974d84841a50938b3276fe20a">
			<Properties>
				<string name="Name">TimeLeftUntilSummon</string>
			</Properties>
		</Item>
	</Item>
</roblox>