<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX6F804E5ED8E94E22AB48B2A3E9869A38">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-1.39999998</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">BlindingLightAxe</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=181327610 </url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX2E67AC9CFD6A40DBBD08CC410AF5871C">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>35.2000046</X>
					<Y>15.5999928</Y>
					<Z>4.10000324</Z>
					<R00>0.129409656</R00>
					<R01>-0.482964277</R01>
					<R02>0.866024613</R02>
					<R10>-0.224143714</R10>
					<R11>0.836515427</R11>
					<R12>0.500001371</R12>
					<R20>-0.965925694</R20>
					<R21>-0.258818984</R21>
					<R22>-2.78294607e-007</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.600000024</X>
					<Y>5.19999981</Y>
					<Z>2.79999995</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX85B037AF9F204FCEBAA7FE6AC20296AF">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=181327632 </url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.800000012</X>
						<Y>0.800000012</Y>
						<Z>0.800000012</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=181327581 </url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXD1CDAF6790F64C01B2ED1AF0DF1B0A78">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">SpecialHitSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=161251973</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXFBA33BBFF4D84E1DB8F9926CDC33A849">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">SunFireExplosion</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=110284742</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX83671FE0398143EAA873F8C99E3049CB">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">SwingSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=119888724</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXEB3879FA7FED4A2C8074CA329FDFDCE9">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">HitSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=89343281</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX4503A55C3D7E418BA2D7CFAEE942B839">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">AnimationClient</string>
				<ProtectedString name="Source">--get references to important objects
local Player = game:GetService(&quot;Players&quot;).LocalPlayer
local Tool = script.Parent
local Remote = Tool:WaitForChild(&quot;Remote&quot;)

--this function plays an animation on demand
--inefficient, but prevents edge cases with dropping the weapon
function playAnimation(animationName)
&#9;local animation = Tool:FindFirstChild(animationName)
&#9;if animation and Tool.Parent and Tool.Parent:FindFirstChild(&quot;Humanoid&quot;) then
&#9;&#9;local human = Tool.Parent.Humanoid
&#9;&#9;local track = human:LoadAnimation(animation)
&#9;&#9;track:Play()
&#9;end
end

--hook up the remote
Remote.OnClientEvent:connect(function(func, ...)
&#9;local args = {...}
&#9;
&#9;if func == &quot;PlayAnimation&quot; then
&#9;&#9;playAnimation(args[1])
&#9;end
end)</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX1388C81C4D9244C288A9C8B7FE1190EC">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">InputClient</string>
				<ProtectedString name="Source">--our player is usually a nice thing to have
local Player = game:GetService(&quot;Players&quot;).LocalPlayer
--the mouse is handy
local Mouse = Player:GetMouse()
--we&apos;ll want an easy reference to the tool
local Tool = script.Parent
--this is our way of communicating with the server side of things
local Remote = Tool:WaitForChild(&quot;Remote&quot;)
--first, acquire our input source
local CAS = game:GetService(&quot;ContextActionService&quot;)
--we&apos;ll use this variable later to uniquely identify our context actions
local ActionName = &quot;LightReflectionSword&quot;

--this function is filtered to by context action service
function onAttack(actionName, inputState, inputObject)
&#9;if inputState == Enum.UserInputState.Begin then
&#9;&#9;Remote:FireServer(&quot;AttackStarted&quot;, Mouse.Hit.p)
&#9;end
&#9;
&#9;if inputState == Enum.UserInputState.End then
&#9;&#9;Remote:FireServer(&quot;AttackEnded&quot;, Mouse.Hit.p)
&#9;end
end

--when the sword is equipped, bind our actions
function onEquipped()
&#9;--make sure we unequipped
&#9;onUnequipped()
&#9;
&#9;--bind
&#9;CAS:BindActionToInputTypes(
&#9;&#9;ActionName,
&#9;&#9;onAttack,
&#9;&#9;false,
&#9;&#9;Enum.UserInputType.MouseButton1,
&#9;&#9;Enum.UserInputType.Touch
&#9;)
end
Tool.Equipped:connect(onEquipped)

--when we unequip, unbind the action
function onUnequipped()
&#9;CAS:UnbindAction(ActionName)
end
Tool.Unequipped:connect(onUnequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="RemoteEvent" referent="RBX3C47EEA1DDBC4ED4B74D8A1802EDA1E6">
			<Properties>
				<string name="Name">Remote</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX49B17E92B80A47A594A5F3B3EB54C9EB">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=183463409</url></Content>
				<string name="Name">Normal1</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX58AA6014397C4DDCAEE1A0DCA00067EB">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=183464295</url></Content>
				<string name="Name">Normal2</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXF3FB4E438DBF4707A80DE9DD46344847">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=183412246</url></Content>
				<string name="Name">Special</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX87B53880F5504302B89A45B2FB37A7DF">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">GearLogicService</string>
				<ProtectedString name="Source">--get a quick reference to the tool and handle
local Tool = script.Parent
local Handle = Tool:WaitForChild(&quot;Handle&quot;)
--a short reference to math.random
local R = math.random
--this remote receives input events from the client
local Remote = Tool:WaitForChild(&quot;Remote&quot;)
--these parts will serve as the basis for some effects
local Cube = Instance.new(&quot;Part&quot;)
Cube.FormFactor = &quot;Custom&quot;
Cube.Size = Vector3.new(1, 1, 1)
Cube.Anchored = true
Cube.CanCollide = false
Cube.TopSurface = &quot;Smooth&quot;
Cube.BottomSurface = &quot;Smooth&quot;
Cube.Material = &quot;SmoothPlastic&quot;
local Cylinder = Cube:Clone()
Instance.new(&quot;CylinderMesh&quot;, Cylinder)
local Sphere = Cube:Clone()
Instance.new(&quot;SpecialMesh&quot;, Sphere).MeshType = &quot;Sphere&quot;
--this is a quick reference to heartbeat
local Heartbeat = Game:GetService(&quot;RunService&quot;).Heartbeat
--this variable holds our heartbeat connection
local Connection
--this variable holds the motor so we can destroy it on an unequip
local Motor
--the following variables affect the behavior of the weapon
local CanSwing = true
local SwingReload = 1.5
local SwingTimer = 0
local CanDamage = false
local DamageAmount = 20
local SwingType = &quot;Normal1&quot;

local NumberCharges = 0
local MaxCharges = 5
local ChargeTimer = 0
local ChargeParts = {}

local SpecialAttackDamage = 45
local SpecialAttackEffectTimer = 0
local SpecialAttackEffectLastPosition
local SpecialAttackEffectDamage = 7.5

--this function decrements the swing timer if we&apos;re unable to swing
function handleSwingTimer(dt)
&#9;if not CanSwing then
&#9;&#9;SwingTimer = SwingTimer - dt
&#9;&#9;if SwingTimer &lt;= 0 then
&#9;&#9;&#9;CanSwing = true
&#9;&#9;end
&#9;end
end

--this function handles the graphical repercussions of the coolness of the special attack
function handleSpecialAttackGraphics(dt)
&#9;if SpecialAttackEffectTimer &gt; 0 then
&#9;&#9;SpecialAttackEffectTimer = SpecialAttackEffectTimer - dt
&#9;&#9;
&#9;&#9;local a = Handle.CFrame:pointToWorldSpace(Vector3.new(0, 1.5, 0))
&#9;&#9;if SpecialAttackEffectLastPosition then
&#9;&#9;&#9;sunbeam(a, SpecialAttackEffectLastPosition, 1/2)
&#9;&#9;end
&#9;&#9;SpecialAttackEffectLastPosition = a
&#9;else
&#9;&#9;SpecialAttackEffectLastPosition = nil
&#9;end
end

--this function handles the graphical consequences of having charges
function handleCharges(dt)
&#9;ChargeTimer = ChargeTimer + dt
&#9;if NumberCharges &gt; 0 then
&#9;&#9;local theta = ChargeTimer * 4
&#9;&#9;local thetaStep = (math.pi * 2) / NumberCharges
&#9;&#9;local radius = 2
&#9;&#9;for index = 1, NumberCharges do
&#9;&#9;&#9;local charge = ChargeParts[index]
&#9;&#9;&#9;local dx = math.cos(theta) * radius
&#9;&#9;&#9;local dy = math.sin(theta) * radius
&#9;&#9;&#9;charge.CFrame = Handle.CFrame:toWorldSpace(CFrame.new(dx, 1.25, dy))
&#9;&#9;&#9;theta = theta + thetaStep
&#9;&#9;end
&#9;end
end

--this function tags the target for integration of the default leaderboard
function tagHuman(human)
&#9;local val = Instance.new(&quot;ObjectValue&quot;)
&#9;val.Name = &quot;creator&quot;
&#9;val.Value = getPlayer()
&#9;val.Parent = human
&#9;game:GetService(&quot;Debris&quot;):AddItem(val, 1)
end

--this helper function returns if a table contains a value
function contains(t, v)
&#9;for _, val in pairs(t) do
&#9;&#9;if val == v then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

--this function makes a sunbeam between two points
function sunbeam(a, b, t)
&#9;local middle = (a + b) / 2
&#9;local length = (b - a).magnitude
&#9;
&#9;local beam = Cylinder:Clone()
&#9;beam.Size = Vector3.new(0.2, length, 0.2)
&#9;beam.BrickColor = BrickColor.new(&quot;Bright yellow&quot;)
&#9;beam.Transparency = 0.5
&#9;beam.Material = &quot;Marble&quot;
&#9;beam.CFrame = CFrame.new(middle, b) * CFrame.Angles(math.pi / 2, 0, 0)
&#9;beam.Parent = workspace
&#9;game:GetService(&quot;Debris&quot;):AddItem(beam, t)
end

--this function makes a crater
function crater(pos, t)
&#9;local twoPi = math.pi * 2
&#9;local thetaStep = twoPi / 12
&#9;
&#9;for theta = thetaStep, twoPi, thetaStep do
&#9;&#9;local length = math.random() * 2.5
&#9;&#9;local dx = math.cos(theta) * (length / 2)
&#9;&#9;local dz = math.sin(theta) * (length / 2)
&#9;&#9;local d = pos + Vector3.new(dx, 0, dz)
&#9;&#9;
&#9;&#9;local burn = Cube:Clone()
&#9;&#9;burn.Size = Vector3.new(0.4, 0.2, length)
&#9;&#9;burn.CFrame = CFrame.new(d, pos)
&#9;&#9;burn.BrickColor = BrickColor.new(&quot;Really black&quot;)
&#9;&#9;burn.Parent = workspace
&#9;&#9;game:GetService(&quot;Debris&quot;):AddItem(burn, t)
&#9;end
end

--this function deals the special attack damage using explosions
function specialAttackDamage(position)
&#9;local affectedHumans = {}
&#9;
&#9;local e = Instance.new(&quot;Explosion&quot;)
&#9;e.BlastRadius = 6
&#9;e.BlastPressure = 0
&#9;e.Position = position
&#9;e.Hit:connect(function(part, distance)
&#9;&#9;if part.Parent and part.Parent:FindFirstChild(&quot;Humanoid&quot;) then
&#9;&#9;&#9;local human = part.Parent.Humanoid
&#9;&#9;&#9;if not contains(affectedHumans, human) then
&#9;&#9;&#9;&#9;tagHuman(human)
&#9;&#9;&#9;&#9;human:TakeDamage(SpecialAttackDamage)
&#9;&#9;&#9;&#9;table.insert(affectedHumans, human)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;e.Parent = workspace
end

--this is the main part of the weapon, a central tick
function onTick(dt)
&#9;--first, handle the swing timer
&#9;handleSwingTimer(dt)
&#9;
&#9;--next, the charge timer
&#9;handleCharges(dt)
&#9;
&#9;--special attack graphics
&#9;handleSpecialAttackGraphics(dt)
end

--this function returns the player of this weapon
function getPlayer()
&#9;local char = Tool.Parent
&#9;if char then
&#9;&#9;return game:GetService(&quot;Players&quot;):GetPlayerFromCharacter(char)
&#9;end
end

--this function converts a weld to a motor for animation
function convertWeldToMotor(weld)
&#9;local m = Instance.new(&quot;Motor6D&quot;)
&#9;m.Name = weld.Name
&#9;m.Part0 = weld.Part0
&#9;m.Part1 = weld.Part1
&#9;m.C0 = weld.C0
&#9;m.C1 = weld.C1
&#9;
&#9;local parent = weld.Parent
&#9;weld:Destroy()
&#9;m.Parent = parent
&#9;
&#9;Motor = m
end

--when we equip, we start up the clock
function onEquipped()
&#9;--make SURE that we unequipped
&#9;onUnequipped()
&#9;
&#9;--connect the heartbeat
&#9;Connection = Heartbeat:connect(onTick)
&#9;
&#9;--put the charges into the tool
&#9;toggleCharges(true)
&#9;
&#9;--as soon as we can, replace &quot;right grip&quot; with a motor
&#9;while not Tool.Parent do wait() end
&#9;while not Tool.Parent:FindFirstChild(&quot;Right Arm&quot;) do wait() end
&#9;convertWeldToMotor(Tool.Parent[&quot;Right Arm&quot;]:WaitForChild(&quot;RightGrip&quot;))
end

--when we unequip, stop the clock
function onUnequipped()
&#9;if Connection then
&#9;&#9;Connection:disconnect()
&#9;end
&#9;
&#9;--prevent the motor from causing problems
&#9;if Motor then
&#9;&#9;Motor:Destroy()
&#9;end
&#9;
&#9;--put the charges back into nil
&#9;toggleCharges(false)
end

--this function plays a sound with a random pitch
function playSound(name)
&#9;local sound = Handle:FindFirstChild(name)
&#9;if sound then
&#9;&#9;sound.Pitch = math.random(90, 110)/100
&#9;&#9;sound:Play()
&#9;end
end

--when the blade is touched, if we can damage, we deal damage and add a charge
function onTouched(part)
&#9;--if we can&apos;t damage, don&apos;t bother
&#9;if not CanDamage then return end
&#9;
&#9;--if the part&apos;s parent exists and has a humanoid, damage it
&#9;if part.Parent and part.Parent:FindFirstChild(&quot;Humanoid&quot;) then
&#9;&#9;--damage the person
&#9;&#9;local human = part.Parent.Humanoid
&#9;&#9;tagHuman(human)
&#9;&#9;human:TakeDamage(DamageAmount)
&#9;&#9;--charge up
&#9;&#9;addCharge()
&#9;&#9;--turn off the damage
&#9;&#9;CanDamage = false
&#9;&#9;--play a sound
&#9;&#9;playSound(&quot;HitSound&quot;)
&#9;&#9;
&#9;&#9;--special buff!?
&#9;&#9;if SpecialAttackEffectTimer &gt; 0 then
&#9;&#9;&#9;human:TakeDamage(SpecialAttackEffectDamage)
&#9;&#9;&#9;playSound(&quot;SpecialHitSound&quot;)
&#9;&#9;&#9;
&#9;&#9;&#9;if human.Parent:FindFirstChild(&quot;Torso&quot;) then
&#9;&#9;&#9;&#9;local fire = Instance.new(&quot;Fire&quot;)
&#9;&#9;&#9;&#9;fire.Color = BrickColor.new(&quot;New Yeller&quot;).Color
&#9;&#9;&#9;&#9;fire.SecondaryColor = BrickColor.new(&quot;Bright yellow&quot;).Color
&#9;&#9;&#9;&#9;fire.Parent = human.Parent.Torso
&#9;&#9;&#9;&#9;delay(1, function() fire.Enabled = false end)
&#9;&#9;&#9;&#9;game:GetService(&quot;Debris&quot;):AddItem(fire, 2)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

--this function adds a charge to the blade, handling some math and rendering for us
function addCharge()
&#9;--add a charge, but ensure we don&apos;t pass the max
&#9;NumberCharges = NumberCharges + 1
&#9;if NumberCharges &gt; MaxCharges then
&#9;&#9;NumberCharges = MaxCharges
&#9;end
&#9;--show off the charges!
&#9;toggleCharges(true)
end

--this function easily toggles charges on or off, as well as refreshing the number of them
function toggleCharges(on)
&#9;if on then
&#9;&#9;toggleCharges(false)
&#9;&#9;
&#9;&#9;for index = 1, NumberCharges do
&#9;&#9;&#9;local charge = ChargeParts[index]
&#9;&#9;&#9;charge.Parent = Tool
&#9;&#9;end
&#9;else
&#9;&#9;for index = 1, MaxCharges do
&#9;&#9;&#9;local charge = ChargeParts[index]
&#9;&#9;&#9;charge.Parent = nil
&#9;&#9;end
&#9;&#9;ChargeTimer = 0
&#9;end
end

--this function performs a special attack with the axe
function specialAttack()
&#9;--can&apos;t swing? can&apos;t special
&#9;if not CanSwing then return end
&#9;
&#9;--animate!
&#9;Remote:FireClient(getPlayer(), &quot;PlayAnimation&quot;, &quot;Special&quot;)
&#9;wait(0.1)
&#9;
&#9;--make sure we have a root part
&#9;if Tool.Parent and Tool.Parent:FindFirstChild(&quot;HumanoidRootPart&quot;) then
&#9;&#9;--explosions!
&#9;&#9;local root = Tool.Parent.HumanoidRootPart
&#9;&#9;local feet = root.Position - Vector3.new(0, 2.5, 0)
&#9;&#9;local radius = 14
&#9;&#9;local rads = math.pi * 2
&#9;&#9;local thetaStep = rads / 5
&#9;&#9;for theta = thetaStep, rads, thetaStep do
&#9;&#9;&#9;local dx = math.cos(theta) * radius
&#9;&#9;&#9;local dz = math.sin(theta) * radius
&#9;&#9;&#9;local pos = feet + Vector3.new(dx, 0, dz)
&#9;&#9;&#9;specialAttackDamage(pos)
&#9;&#9;&#9;
&#9;&#9;&#9;local a = Handle.CFrame:pointToWorldSpace(Vector3.new(0, 2, 0))
&#9;&#9;&#9;local b = pos
&#9;&#9;&#9;sunbeam(a, b, 1/10)
&#9;&#9;&#9;crater(b, 8)
&#9;&#9;end
&#9;&#9;
&#9;&#9;--sounds!
&#9;&#9;playSound(&quot;SunFireExplosion&quot;)
&#9;&#9;
&#9;&#9;--charge control
&#9;&#9;NumberCharges = 0
&#9;&#9;toggleCharges(true)
&#9;&#9;
&#9;&#9;--special attack effect timer
&#9;&#9;SpecialAttackEffectTimer = 6
&#9;end
end

--this function performs a normal strike with the blade
function normalAttack()
&#9;--if we can&apos;t swing, don&apos;t bother
&#9;if not CanSwing then return end
&#9;
&#9;--tell our touched handler we can deal damage
&#9;CanDamage = true
&#9;--after a short delay, we can&apos;t damage anymore.
&#9;delay(1, function()
&#9;&#9;CanDamage = false
&#9;end)
&#9;
&#9;--we can&apos;t swing for another bit
&#9;CanSwing = false
&#9;SwingTimer = SwingReload
&#9;
&#9;--swing the sword and play a sound!
&#9;Remote:FireClient(getPlayer(), &quot;PlayAnimation&quot;, SwingType)
&#9;if SwingType == &quot;Normal1&quot; then
&#9;&#9;delay(0.15, function() playSound(&quot;SwingSound&quot;) end)
&#9;&#9;SwingType = &quot;Normal2&quot;
&#9;else
&#9;&#9;SwingType = &quot;Normal1&quot;
&#9;&#9;playSound(&quot;SwingSound&quot;)
&#9;end
end

--this function is called once, right away, in order to prep the sword for use
--all events are connected here in order to ensure everything is ready
function setUp()
&#9;--create and store the charges we may need
&#9;for index = 1, MaxCharges do
&#9;&#9;local charge = Sphere:Clone()
&#9;&#9;charge.Mesh.Scale = Vector3.new(3/4, 3/4, 3/4)
&#9;&#9;charge.BrickColor = BrickColor.new(&quot;Bright yellow&quot;)
&#9;&#9;charge.Transparency = 0.5
&#9;&#9;charge.Material = &quot;Marble&quot;
&#9;&#9;ChargeParts[index] = charge
&#9;end
&#9;
&#9;--connect events
&#9;Tool.Equipped:connect(onEquipped)
&#9;Tool.Unequipped:connect(onUnequipped)
&#9;Handle.Touched:connect(onTouched)
&#9;
&#9;--this remote event connection is more complex
&#9;Remote.OnServerEvent:connect(function(player, func, ...)
&#9;&#9;--if it isn&apos;t our player, don&apos;t bother
&#9;&#9;if player.Character ~= Tool.Parent then return end
&#9;&#9;
&#9;&#9;--store the arguments in a table
&#9;&#9;local args = {...}
&#9;&#9;
&#9;&#9;--start the logic
&#9;&#9;if func == &quot;AttackStarted&quot; then
&#9;&#9;&#9;--if we don&apos;t have all the charges, do a normal attack
&#9;&#9;&#9;--otherwise, we start the pew pew process
&#9;&#9;&#9;if NumberCharges &lt; MaxCharges then
&#9;&#9;&#9;&#9;normalAttack()
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;specialAttack()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
end

setUp()</ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX94AA7639DA214117B34CDB51055CE4E7">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>37.3845749</X>
					<Y>16.4286156</Y>
					<Z>9.5006361</Z>
					<R00>0.927030325</R00>
					<R01>-0.0528046675</R01>
					<R02>0.371249706</R02>
					<R10>-0</R10>
					<R11>0.990035534</R11>
					<R12>0.140817612</R12>
					<R20>-0.374986231</R20>
					<R21>-0.130542204</R21>
					<R22>0.917793036</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>35.2000046</X>
					<Y>15.5999928</Y>
					<Z>4.10000324</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>