<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXEF7DA4A68CAB4AD8B45A138401B78BC1">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>2.5</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>-0</R02>
				<R10>0</R10>
				<R11>0</R11>
				<R12>1</R12>
				<R20>0</R20>
				<R21>-1</R21>
				<R22>0</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">LightReflectionSword</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=183363484 </url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX45B07869A2D64027ADE7267076E9AA74">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-1.10000002</X>
					<Y>27.5</Y>
					<Z>4.20000029</Z>
					<R00>1</R00>
					<R01>-2.79917582e-008</R01>
					<R02>-6.75780782e-008</R02>
					<R10>-2.79917582e-008</R10>
					<R11>0.707106769</R11>
					<R12>-0.707106769</R12>
					<R20>6.75780782e-008</R20>
					<R21>0.707106769</R21>
					<R22>0.707106769</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>1</Y>
					<Z>5.99999952</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXA6033276798B4A0CA9448C186313AE0D">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=183363446 </url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=183363468 </url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXD10B083D4CA1476ABC5D5EA6E2A90463">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">SunFireSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=128912290</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXA938BE4A6E984F1190EA238143E43B9E">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">SwingSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=119888724</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX4C0C935F2E4048CEB3331244560C995E">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">HitSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=91154909</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX138AF181CC19429DAE7AA28C87B28693">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">FireSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=161251973</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX5393AA5C08FA4BC99C9AD3E854F883B6">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Explosion</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=110284742</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX7218C182389D48F281B1E41F0068008A">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">GearLogicService</string>
				<ProtectedString name="Source">--get a quick reference to the tool and handle
local Tool = script.Parent
local Handle = Tool:WaitForChild(&quot;Handle&quot;)
--a short reference to math.random
local R = math.random
--this remote receives input events from the client
local Remote = Tool:WaitForChild(&quot;Remote&quot;)
--these parts will serve as the basis for some effects
local Cube = Instance.new(&quot;Part&quot;)
Cube.FormFactor = &quot;Custom&quot;
Cube.Size = Vector3.new(1, 1, 1)
Cube.Anchored = true
Cube.CanCollide = false
Cube.TopSurface = &quot;Smooth&quot;
Cube.BottomSurface = &quot;Smooth&quot;
Cube.Material = &quot;SmoothPlastic&quot;
local Cylinder = Cube:Clone()
Instance.new(&quot;CylinderMesh&quot;, Cylinder)
local Sphere = Cube:Clone()
Instance.new(&quot;SpecialMesh&quot;, Sphere).MeshType = &quot;Sphere&quot;
--this is a quick reference to heartbeat
local Heartbeat = Game:GetService(&quot;RunService&quot;).Heartbeat
--this variable holds our heartbeat connection
local Connection
--this variable holds the motor so we can destroy it on an unequip
local Motor
--the following variables affect the behavior of the weapon
local CanSwing = true
local SwingReload = 1.5
local SwingTimer = 0
local CanDamage = false
local DamageAmount = 35
local SwingType = &quot;Normal1&quot;

local NumberCharges = 0
local MaxCharges = 5
local ChargeTimer = 0
local ChargeParts = {}

local JumpAttackVelocity = 120
--this table holds the armor
local Armor = {}
local EquippingArmor = false

--this function decrements the swing timer if we&apos;re unable to swing
function handleSwingTimer(dt)
&#9;if not CanSwing then
&#9;&#9;SwingTimer = SwingTimer - dt
&#9;&#9;if SwingTimer &lt;= 0 then
&#9;&#9;&#9;CanSwing = true
&#9;&#9;end
&#9;end
end

--this function handles the graphical consequences of having charges
function handleCharges(dt)
&#9;ChargeTimer = ChargeTimer + dt
&#9;if NumberCharges &gt; 0 then
&#9;&#9;local theta = ChargeTimer * 4
&#9;&#9;local thetaStep = (math.pi * 2) / NumberCharges
&#9;&#9;local radius = 2
&#9;&#9;for index = 1, NumberCharges do
&#9;&#9;&#9;local charge = ChargeParts[index]
&#9;&#9;&#9;local dx = math.cos(theta) * radius
&#9;&#9;&#9;local dy = math.sin(theta) * radius
&#9;&#9;&#9;charge.CFrame = Handle.CFrame:toWorldSpace(CFrame.new(dx, dy, 0))
&#9;&#9;&#9;theta = theta + thetaStep
&#9;&#9;end
&#9;end
end

--this function tags the target for integration of the default leaderboard
function tagHuman(human)
&#9;local val = Instance.new(&quot;ObjectValue&quot;)
&#9;val.Name = &quot;creator&quot;
&#9;val.Value = getPlayer()
&#9;val.Parent = human
&#9;game:GetService(&quot;Debris&quot;):AddItem(val, 1)
end

--this functon returns whether or not a table contains a value
function contains(t, v)
&#9;for _, val in pairs(t) do
&#9;&#9;if val == v then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

--this is the main part of the weapon, a central tick
function onTick(dt)
&#9;--first, handle the swing timer
&#9;handleSwingTimer(dt)
&#9;
&#9;--next, the charge timer
&#9;handleCharges(dt)
end

--this function returns the player of this weapon
function getPlayer()
&#9;local char = Tool.Parent
&#9;if char then
&#9;&#9;return game:GetService(&quot;Players&quot;):GetPlayerFromCharacter(char)
&#9;end
end

--this function converts a weld to a motor for animation
function convertWeldToMotor(weld)
&#9;local m = Instance.new(&quot;Motor6D&quot;)
&#9;m.Name = weld.Name
&#9;m.Part0 = weld.Part0
&#9;m.Part1 = weld.Part1
&#9;m.C0 = weld.C0
&#9;m.C1 = weld.C1
&#9;
&#9;local parent = weld.Parent
&#9;weld:Destroy()
&#9;m.Parent = parent
&#9;
&#9;Motor = m
end

--welds stuff
function weldArmor(part1, part0, c0)
&#9;local w = Instance.new(&quot;Weld&quot;)
&#9;w.Part0 = part0
&#9;w.Part1 = part1
&#9;w.C0 = c0
&#9;w.Parent = w.Part0
end

--puts armor on
function armorOn()
&#9;EquippingArmor = true
&#9;
&#9;armorOff()
&#9;
&#9;local char = Tool.Parent
&#9;if not char then return end
&#9;
&#9;--armor piece
&#9;local armor = Cube:Clone()
&#9;armor.BrickColor = BrickColor.new(&quot;Bright yellow&quot;)
&#9;armor.Material = &quot;Marble&quot;
&#9;armor.Reflectance = 0.5
&#9;armor.Anchored = false
&#9;
&#9;--arms
&#9;local arm = armor:Clone()
&#9;arm.Size = Vector3.new(1.1, 1.8, 1.1)
&#9;arm.BrickColor = BrickColor.new(&quot;Deep orange&quot;)
&#9;local armFame = CFrame.new(0, 0.2, 0)
&#9;
&#9;if char:FindFirstChild(&quot;Left Arm&quot;) then
&#9;&#9;local larm = arm:Clone()
&#9;&#9;larm.Parent = char
&#9;&#9;weldArmor(larm, char[&quot;Left Arm&quot;], armFame)
&#9;&#9;table.insert(Armor, larm)
&#9;end
&#9;
&#9;if char:FindFirstChild(&quot;Right Arm&quot;) then
&#9;&#9;local rarm = arm:Clone()
&#9;&#9;rarm.Parent = char
&#9;&#9;weldArmor(rarm, char[&quot;Right Arm&quot;], armFame)
&#9;&#9;table.insert(Armor, rarm)
&#9;end
&#9;
&#9;--torso
&#9;if char:FindFirstChild(&quot;Torso&quot;) then
&#9;&#9;local torso = armor:Clone()
&#9;&#9;torso.Parent = char
&#9;&#9;torso.Size = Vector3.new(2.1, 2.1, 1.1)
&#9;&#9;weldArmor(torso, char[&quot;Torso&quot;], CFrame.new())
&#9;&#9;
&#9;&#9;local light = Instance.new(&quot;PointLight&quot;)
&#9;&#9;light.Color = BrickColor.new(&quot;Bright yellow&quot;).Color
&#9;&#9;light.Range = 24
&#9;&#9;light.Brightness = 4
&#9;&#9;light.Parent = torso
&#9;&#9;
&#9;&#9;local fire = Instance.new(&quot;Fire&quot;)
&#9;&#9;fire.Color = BrickColor.new(&quot;Bright yellow&quot;).Color
&#9;&#9;fire.SecondaryColor = BrickColor.new(&quot;New Yeller&quot;).Color
&#9;&#9;fire.Parent = torso
&#9;&#9;
&#9;&#9;table.insert(Armor, torso)
&#9;end
&#9;
&#9;--legs
&#9;local leg = armor:Clone()
&#9;leg.Size = Vector3.new(1.1, 2.1, 1.1)
&#9;local legFrame = CFrame.new()
&#9;
&#9;if char:FindFirstChild(&quot;Left Leg&quot;) then
&#9;&#9;local lleg = leg:Clone()
&#9;&#9;lleg.Parent = char
&#9;&#9;weldArmor(lleg, char[&quot;Left Leg&quot;], legFrame)
&#9;&#9;table.insert(Armor, lleg)
&#9;end
&#9;
&#9;if char:FindFirstChild(&quot;Right Leg&quot;) then
&#9;&#9;local rleg = leg:Clone()
&#9;&#9;rleg.Parent = char
&#9;&#9;weldArmor(rleg, char[&quot;Right Leg&quot;], legFrame)
&#9;&#9;table.insert(Armor, rleg)
&#9;end
&#9;
&#9;EquippingArmor = false
end

function armorOff()
&#9;for _, armor in pairs(Armor) do
&#9;&#9;armor:Destroy()
&#9;end
end

--when we equip, we start up the clock
function onEquipped()
&#9;--prevent reentrancy
&#9;if EquippingArmor then return end
&#9;
&#9;--make SURE that we unequipped
&#9;onUnequipped()
&#9;
&#9;--connect the heartbeat
&#9;Connection = Heartbeat:connect(onTick)
&#9;
&#9;--put the charges into the tool
&#9;toggleCharges(true)
&#9;
&#9;--armor up!
&#9;armorOn()
&#9;playSound(&quot;SunFireSound&quot;)

&#9;--as soon as we can, replace &quot;right grip&quot; with a motor
&#9;while not Tool.Parent do wait() end
&#9;while not Tool.Parent:FindFirstChild(&quot;Right Arm&quot;) do wait() end
&#9;convertWeldToMotor(Tool.Parent[&quot;Right Arm&quot;]:WaitForChild(&quot;RightGrip&quot;))
end

--when we unequip, stop the clock
function onUnequipped()
&#9;if Connection then
&#9;&#9;Connection:disconnect()
&#9;end
&#9;
&#9;--prevent the motor from causing problems
&#9;if Motor then
&#9;&#9;Motor:Destroy()
&#9;end
&#9;
&#9;--put the charges back into nil
&#9;toggleCharges(false)
&#9;
&#9;--armor down!
&#9;armorOff()
end

--this function plays a sound with a random pitch
function playSound(name, pitch)
&#9;local sound = Handle:FindFirstChild(name)
&#9;if sound then
&#9;&#9;sound.Pitch = pitch or math.random(90, 110)/100
&#9;&#9;sound:Play()
&#9;end
end

--when the blade is touched, if we can damage, we deal damage and add a charge
function onTouched(part)
&#9;--if we can&apos;t damage, don&apos;t bother
&#9;if not CanDamage then return end
&#9;
&#9;--if the part&apos;s parent exists and has a humanoid, damage it
&#9;if part.Parent and part.Parent:FindFirstChild(&quot;Humanoid&quot;) then
&#9;&#9;--damage the person
&#9;&#9;local human = part.Parent.Humanoid
&#9;&#9;tagHuman(human)
&#9;&#9;human:TakeDamage(DamageAmount)
&#9;&#9;--charge up
&#9;&#9;addCharge()
&#9;&#9;--turn off the damage
&#9;&#9;CanDamage = false
&#9;&#9;--play a sound
&#9;&#9;playSound(&quot;HitSound&quot;)
&#9;end
end

--this function adds a charge to the blade, handling some math and rendering for us
function addCharge()
&#9;--add a charge, but ensure we don&apos;t pass the max
&#9;NumberCharges = NumberCharges + 1
&#9;if NumberCharges &gt; MaxCharges then
&#9;&#9;NumberCharges = MaxCharges
&#9;end
&#9;--show off the charges!
&#9;toggleCharges(true)
end

--this function easily toggles charges on or off, as well as refreshing the number of them
function toggleCharges(on)
&#9;if on then
&#9;&#9;toggleCharges(false)
&#9;&#9;
&#9;&#9;for index = 1, NumberCharges do
&#9;&#9;&#9;local charge = ChargeParts[index]
&#9;&#9;&#9;charge.Parent = Tool
&#9;&#9;end
&#9;else
&#9;&#9;for index = 1, MaxCharges do
&#9;&#9;&#9;local charge = ChargeParts[index]
&#9;&#9;&#9;charge.Parent = nil
&#9;&#9;end
&#9;&#9;ChargeTimer = 0
&#9;end
end

--this function makes a crater
function crater(pos, t)
&#9;local twoPi = math.pi * 2
&#9;local thetaStep = twoPi / 12
&#9;
&#9;for theta = thetaStep, twoPi, thetaStep do
&#9;&#9;local length = math.random() * 2.5
&#9;&#9;local dx = math.cos(theta) * (length / 2)
&#9;&#9;local dz = math.sin(theta) * (length / 2)
&#9;&#9;local d = pos + Vector3.new(dx, 0, dz)
&#9;&#9;
&#9;&#9;local burn = Cube:Clone()
&#9;&#9;burn.Size = Vector3.new(0.4, 0.2, length)
&#9;&#9;burn.CFrame = CFrame.new(d, pos)
&#9;&#9;burn.BrickColor = BrickColor.new(&quot;Really black&quot;)
&#9;&#9;burn.Parent = workspace
&#9;&#9;game:GetService(&quot;Debris&quot;):AddItem(burn, t)
&#9;end
end

--this function performs a special jump attack
function jumpAttack()
&#9;if Tool.Parent:FindFirstChild(&quot;HumanoidRootPart&quot;) then
&#9;&#9;local root = Tool.Parent.HumanoidRootPart
&#9;&#9;
&#9;&#9;if NumberCharges &gt; 1 then
&#9;&#9;&#9;root.Velocity = Vector3.new(0, JumpAttackVelocity, 0)
&#9;&#9;&#9;
&#9;&#9;&#9;NumberCharges = NumberCharges - 1
&#9;&#9;&#9;toggleCharges(true)
&#9;&#9;&#9;
&#9;&#9;&#9;CanSwing = false
&#9;&#9;&#9;SwingTimer = 0.65
&#9;&#9;&#9;
&#9;&#9;&#9;Remote:FireClient(getPlayer(), &quot;PlayAnimation&quot;, &quot;Special&quot;, 2.4)
&#9;&#9;&#9;
&#9;&#9;&#9;playSound(&quot;FireSound&quot;, math.random(140, 160)/100)
&#9;&#9;&#9;playSound(&quot;SunFireSound&quot;, math.random(200, 220)/100)
&#9;&#9;else
&#9;&#9;&#9;local origin = root.Position
&#9;&#9;&#9;local direction = Vector3.new(0, -500, 0)
&#9;&#9;&#9;local ray = Ray.new(origin, direction)
&#9;&#9;&#9;local part, hitPos = workspace:FindPartOnRay(ray, Tool.Parent)
&#9;&#9;&#9;local pos = hitPos + Vector3.new(0, 2.5, 0)
&#9;&#9;&#9;local delta = pos - origin
&#9;&#9;&#9;root.CFrame = root.CFrame + delta
&#9;&#9;&#9;
&#9;&#9;&#9;--sunbeam
&#9;&#9;&#9;local beam = Cylinder:Clone()
&#9;&#9;&#9;beam.BrickColor = BrickColor.new(&quot;Bright yellow&quot;)
&#9;&#9;&#9;beam.Material = &quot;Marble&quot;
&#9;&#9;&#9;beam.Transparency = 0.5
&#9;&#9;&#9;beam.Position = (origin + pos) / 2
&#9;&#9;&#9;beam.Size = Vector3.new(0.5, delta.magnitude, 0.5)
&#9;&#9;&#9;beam.Parent = workspace
&#9;&#9;&#9;game:GetService(&quot;Debris&quot;):AddItem(beam, 0.25)
&#9;&#9;&#9;
&#9;&#9;&#9;--crater
&#9;&#9;&#9;crater(hitPos, 6)
&#9;&#9;&#9;
&#9;&#9;&#9;--sound
&#9;&#9;&#9;playSound(&quot;Explosion&quot;)
&#9;&#9;&#9;
&#9;&#9;&#9;--charges
&#9;&#9;&#9;NumberCharges = NumberCharges - 1
&#9;&#9;&#9;toggleCharges(true)
&#9;&#9;&#9;
&#9;&#9;&#9;--calculate damage of explosion
&#9;&#9;&#9;local damage = delta.magnitude / 2
&#9;&#9;&#9;
&#9;&#9;&#9;--explosion
&#9;&#9;&#9;local e = Instance.new(&quot;Explosion&quot;)
&#9;&#9;&#9;e.BlastRadius = 16
&#9;&#9;&#9;e.BlastPressure = 500000 + delta.magnitude * 1000
&#9;&#9;&#9;e.DestroyJointRadiusPercent = 0
&#9;&#9;&#9;e.Position = hitPos
&#9;&#9;&#9;local victims = {}
&#9;&#9;&#9;e.Hit:connect(function(part, distance)
&#9;&#9;&#9;&#9;if part.Parent and part.Parent:FindFirstChild(&quot;Humanoid&quot;) and part.Parent ~= Tool.Parent then
&#9;&#9;&#9;&#9;&#9;local human = part.Parent.Humanoid
&#9;&#9;&#9;&#9;&#9;if not contains(victims, human) then
&#9;&#9;&#9;&#9;&#9;&#9;tagHuman(human)
&#9;&#9;&#9;&#9;&#9;&#9;human:TakeDamage(damage)
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(victims, human)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;&#9;e.Parent = workspace
&#9;&#9;end
&#9;end
end

--this function performs a normal strike with the blade
function normalAttack()
&#9;--if we can&apos;t swing, don&apos;t bother
&#9;if not CanSwing then return end
&#9;
&#9;if NumberCharges &gt; 0 then
&#9;&#9;if Tool.Parent:FindFirstChild(&quot;Humanoid&quot;) then
&#9;&#9;&#9;if Tool.Parent.Humanoid.Jump then
&#9;&#9;&#9;&#9;jumpAttack()
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;
&#9;--tell our touched handler we can deal damage
&#9;CanDamage = true
&#9;--after a short delay, we can&apos;t damage anymore.
&#9;delay(1, function()
&#9;&#9;CanDamage = false
&#9;end)
&#9;
&#9;--we can&apos;t swing for another bit
&#9;CanSwing = false
&#9;SwingTimer = SwingReload
&#9;
&#9;--swing the sword and play a sound!
&#9;Remote:FireClient(getPlayer(), &quot;PlayAnimation&quot;, SwingType)
&#9;if SwingType == &quot;Normal1&quot; then
&#9;&#9;delay(0.15, function() playSound(&quot;SwingSound&quot;) playSound(&quot;FireSound&quot;) end)
&#9;&#9;SwingType = &quot;Normal2&quot;
&#9;else
&#9;&#9;SwingType = &quot;Normal1&quot;
&#9;&#9;playSound(&quot;SwingSound&quot;)
&#9;&#9;playSound(&quot;FireSound&quot;)
&#9;end
end

--this function is called once, right away, in order to prep the sword for use
--all events are connected here in order to ensure everything is ready
function setUp()
&#9;--create and store the charges we may need
&#9;for index = 1, MaxCharges do
&#9;&#9;local charge = Sphere:Clone()
&#9;&#9;charge.Mesh.Scale = Vector3.new(3/4, 3/4, 3/4)
&#9;&#9;charge.BrickColor = BrickColor.new(&quot;Bright yellow&quot;)
&#9;&#9;charge.Transparency = 0.5
&#9;&#9;charge.Material = &quot;Marble&quot;
&#9;&#9;ChargeParts[index] = charge
&#9;end
&#9;
&#9;--connect events
&#9;Tool.Equipped:connect(onEquipped)
&#9;Tool.Unequipped:connect(onUnequipped)
&#9;Handle.Touched:connect(onTouched)
&#9;
&#9;--this remote event connection is more complex
&#9;Remote.OnServerEvent:connect(function(player, func, ...)
&#9;&#9;--if it isn&apos;t our player, don&apos;t bother
&#9;&#9;if player.Character ~= Tool.Parent then return end
&#9;&#9;
&#9;&#9;--store the arguments in a table
&#9;&#9;local args = {...}
&#9;&#9;
&#9;&#9;--start the logic
&#9;&#9;if func == &quot;AttackStarted&quot; then
&#9;&#9;&#9;normalAttack()
&#9;&#9;end
&#9;end)
end

setUp()</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXC8EC589EF3804BFD9B519A5B8053001E">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">InputClient</string>
				<ProtectedString name="Source">--our player is usually a nice thing to have
local Player = game:GetService(&quot;Players&quot;).LocalPlayer
--the mouse is handy
local Mouse = Player:GetMouse()
--we&apos;ll want an easy reference to the tool
local Tool = script.Parent
--this is our way of communicating with the server side of things
local Remote = Tool:WaitForChild(&quot;Remote&quot;)
--first, acquire our input source
local CAS = game:GetService(&quot;ContextActionService&quot;)
--we&apos;ll use this variable later to uniquely identify our context actions
local ActionName = &quot;LightReflectionSword&quot;

--this function is filtered to by context action service
function onAttack(actionName, inputState, inputObject)
&#9;if inputState == Enum.UserInputState.Begin then
&#9;&#9;Remote:FireServer(&quot;AttackStarted&quot;, Mouse.Hit.p)
&#9;end
&#9;
&#9;if inputState == Enum.UserInputState.End then
&#9;&#9;Remote:FireServer(&quot;AttackEnded&quot;, Mouse.Hit.p)
&#9;end
end

--when the sword is equipped, bind our actions
function onEquipped()
&#9;--make sure we unequipped
&#9;onUnequipped()
&#9;
&#9;--bind
&#9;CAS:BindActionToInputTypes(
&#9;&#9;ActionName,
&#9;&#9;onAttack,
&#9;&#9;false,
&#9;&#9;Enum.UserInputType.MouseButton1,
&#9;&#9;Enum.UserInputType.Touch
&#9;)
end
Tool.Equipped:connect(onEquipped)

--when we unequip, unbind the action
function onUnequipped()
&#9;CAS:UnbindAction(ActionName)
end
Tool.Unequipped:connect(onUnequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="RemoteEvent" referent="RBX6418FDC6B86742369B50E5E9C5750123">
			<Properties>
				<string name="Name">Remote</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX3F357A141E5E4E5EA03BFD3B1E615FDF">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">AnimationClient</string>
				<ProtectedString name="Source">--get references to important objects
local Player = game:GetService(&quot;Players&quot;).LocalPlayer
local Tool = script.Parent
local Remote = Tool:WaitForChild(&quot;Remote&quot;)

--this function plays an animation on demand
--inefficient, but prevents edge cases with dropping the weapon
function playAnimation(animationName, speed)
&#9;local animation = Tool:FindFirstChild(animationName)
&#9;if animation and Tool.Parent and Tool.Parent:FindFirstChild(&quot;Humanoid&quot;) then
&#9;&#9;local human = Tool.Parent.Humanoid
&#9;&#9;local track = human:LoadAnimation(animation)
&#9;&#9;track:Play(nil, nil, speed)
&#9;end
end

--hook up the remote
Remote.OnClientEvent:connect(function(func, ...)
&#9;local args = {...}
&#9;
&#9;if func == &quot;PlayAnimation&quot; then
&#9;&#9;playAnimation(args[1], args[2])
&#9;end
end)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX8E2E0ADF46B3476E86FE2254819A27B7">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=183412182</url></Content>
				<string name="Name">Normal1</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX3F55BC8C4AB84DFA888B909CB3DE2DBD">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=183412214</url></Content>
				<string name="Name">Normal2</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX728F903AFA564B0A87B8A8A00172BE34">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=183412246</url></Content>
				<string name="Name">Special</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBXA79495604844431F9DCC321B9F319915">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>3.7186079</X>
					<Y>27.1600418</Y>
					<Z>3.12041998</Z>
					<R00>-0.218624234</R00>
					<R01>0.0670203939</R01>
					<R02>0.973504841</R02>
					<R10>-0</R10>
					<R11>0.997638702</R11>
					<R12>-0.0686818585</R12>
					<R20>-0.975809216</R20>
					<R21>-0.0150155183</R21>
					<R22>-0.218107954</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-1.10000002</X>
					<Y>27.5</Y>
					<Z>4.20000029</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>