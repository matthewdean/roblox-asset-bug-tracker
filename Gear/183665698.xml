<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXE8AC5D687701486A8B0D8AFE165589ED">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>-1.25</X>
				<Y>-1</Y>
				<Z>0.100000001</Z>
				<R00>-0.823578298</R00>
				<R01>-0.031555742</R01>
				<R02>0.566324174</R02>
				<R10>-0.453762144</R10>
				<R11>-0.5624156</R11>
				<R12>-0.691222489</R12>
				<R20>0.34032163</R20>
				<R21>-0.826252341</R21>
				<R22>0.448874444</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">OrbitalViolinStrike</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset?id=181327214</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX5FEF14721F0A43078642B0C4156F6FF5">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>9.69513321</X>
					<Y>5.83370972</Y>
					<Z>6.9079895</Z>
					<R00>0.866025329</R00>
					<R01>0.49999994</R01>
					<R02>1.83110473e-007</R02>
					<R10>-0.353553355</R10>
					<R11>0.612372577</R11>
					<R12>-0.70710659</R12>
					<R20>-0.353553295</R20>
					<R21>0.612372041</R21>
					<R22>0.707106829</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1.5</X>
					<Y>3.5625</Y>
					<Z>0.75</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX87C67DF04BEC41D9B29830CF71900612">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset?id=183439731</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.850000024</X>
						<Y>0.850000024</Y>
						<Z>0.850000024</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=181327196</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX288067226C1C4BCC927515DB98A9CDE5">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">ViolinSong</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=183434101</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX181072C0968744109FF067E0A24D524E">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
ContentProvider = game:GetService(&quot;ContentProvider&quot;)

Animations = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ClientControl.OnClientInvoke = (function(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;elseif Mode == &quot;Preload&quot; and Value then
&#9;&#9;ContentProvider:Preload(Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;elseif Mode == &quot;DisableJump&quot; then
&#9;&#9;DisableJump(Value)
&#9;end
end)

function InvokeServer(Mode, Value)
&#9;pcall(function()
&#9;&#9;local ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;&#9;return ServerReturn
&#9;end)
end

function DisableJump(Boolean)
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;if Boolean then
&#9;&#9;PreventJump = Humanoid.Changed:connect(function(Property)
&#9;&#9;&#9;if Property ==  &quot;Jump&quot; then
&#9;&#9;&#9;&#9;Humanoid.Jump = false
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
end

function Unequipped()
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX66A6F52A2356487BAE79AC53923EA026">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = &quot;rbxasset://textures/GunCursor.png&quot;
Reloading_Icon = &quot;rbxasset://textures/GunWaitCursor.png&quot;

Tool = script.Parent

Mouse = nil

function UpdateIcon()
&#9;if Mouse then
&#9;&#9;Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
&#9;end
end

function OnEquipped(ToolMouse)
&#9;Mouse = ToolMouse
&#9;UpdateIcon()
end

function OnChanged(Property)
&#9;if Property == &quot;Enabled&quot; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX8FA833D1A5D444BBA8681F5A0ED6B438">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=183428213</url></Content>
				<string name="Name">BowEquip</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX181E5AE568054714A477236E738AA17B">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=183436589</url></Content>
				<string name="Name">StartPlaying</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX24F1790F90A348D2B86CA0FBFA26FE03">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=183438463</url></Content>
				<string name="Name">Playing</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX295B7AFCBA6E47F585CA467B597BB2F0">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)
Mesh = Handle:WaitForChild(&quot;Mesh&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

ViolinSong = Handle:WaitForChild(&quot;ViolinSong&quot;)

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

Grips = {
&#9;Equipped = CFrame.new(-1.25, -1, 0.100000001, -0.823578298, -0.031555742, 0.566324174, -0.453762144, -0.5624156, -0.691222489, 0.34032163, -0.826252341, 0.448874444),
&#9;Default = CFrame.new(0, 0.5, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
}

Meshes = {
&#9;ViolinWithBow = &quot;http://www.roblox.com/asset?id=183439731&quot;,
&#9;Violin = &quot;http://www.roblox.com/asset?id=181327153&quot;,
&#9;Bow = &quot;http://www.roblox.com/asset?id=181327174&quot;
}

Animations = {
&#9;BowEquip = {Animation = Tool:WaitForChild(&quot;BowEquip&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = 2},
&#9;StartPlaying = {Animation = Tool:WaitForChild(&quot;StartPlaying&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = 1},
&#9;Playing = {Animation = Tool:WaitForChild(&quot;Playing&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil}
}

Sounds = {
}

StrikeDamage = 15
Duration = 60 --Song is 54 seconds long
ReloadTime = 60

LaunchDistance = 200
PossibleIncomingVectors = {}

Bow = BasePart:Clone()
Bow.Name = &quot;ViolinBow&quot;
Bow.Size = Vector3.new(0.25, 4.5, 0.5)
BowMesh = Instance.new(&quot;SpecialMesh&quot;)
BowMesh.MeshType = Enum.MeshType.FileMesh
BowMesh.MeshId = Meshes.Bow
BowMesh.TextureId = Mesh.TextureId
BowMesh.Scale = Mesh.Scale
BowMesh.Parent = Bow

OrbitalViolinModel = Instance.new(&quot;Model&quot;)
OrbitalViolinModel.Name = &quot;OrbitalViolin&quot;
OrbitalViolin = BasePart:Clone()
OrbitalViolin.Name = &quot;Violin&quot;
OrbitalViolin.Size = Vector3.new(2, 4.75, 1)
ViolinMesh = Instance.new(&quot;SpecialMesh&quot;)
ViolinMesh.MeshType = Enum.MeshType.FileMesh
ViolinMesh.MeshId = Meshes.Violin
ViolinMesh.TextureId = Mesh.TextureId
ViolinMesh.Scale = Vector3.new(1, 1, 1)
ViolinMesh.Parent = OrbitalViolin
OrbitalViolin.Parent = OrbitalViolinModel
OrbitalBow = BasePart:Clone()
OrbitalBow.Name = &quot;Bow&quot;
OrbitalBow.Size = Vector3.new(2, 4.75, 1)
BowMesh = Instance.new(&quot;SpecialMesh&quot;)
BowMesh.MeshType = Enum.MeshType.FileMesh
BowMesh.MeshId = Meshes.Bow
BowMesh.TextureId = Mesh.TextureId
BowMesh.Scale = Vector3.new(1, 1, 1)
BowMesh.Parent = OrbitalBow
OrbitalBow.Parent = OrbitalViolinModel
OrbitalViolinWeld = Instance.new(&quot;Weld&quot;)
OrbitalViolinWeld.Part0 = OrbitalViolin
OrbitalViolinWeld.Part1 = OrbitalBow
OrbitalViolinWeld.C0 = CFrame.new(0.5, -0.5, -0.5) * CFrame.Angles(0, math.pi, (math.pi / 2.75))
OrbitalViolinWeld.Parent = OrbitalViolin

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Mesh.MeshId = Meshes.Violin
Tool.Grip = Grips.Default
Tool.Enabled = true

ServerControl.OnServerInvoke = (function(player, Mode, Value)
&#9;if player == Player then
&#9;&#9;if Mode == &quot;MouseClick&quot; and Value.Down then
&#9;&#9;&#9;Activated()
&#9;&#9;elseif Mode == &quot;KeyPress&quot; then
&#9;&#9;&#9;local Key = Value.Key
&#9;&#9;&#9;local Down = Value.Down
&#9;&#9;end
&#9;end
end)

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

-- Create table of possible incoming vectors
for x = -1, 1 do
&#9;for z = -1, 1 do
&#9;&#9;table.insert(PossibleIncomingVectors, Vector3.new(x, 1, z).unit)
&#9;end
end

function GetRandomFloat(Minimum, Maximum)
&#9;local UnitRandom = math.random()
&#9;local Interval = (Maximum - Minimum)
&#9;-- there is potential overflow here if the interval is larger than max float
&#9;if Interval &lt;= 0 then
&#9;&#9;return --The range beween minimum and maximum is less than zero.
&#9;end
&#9;return ((UnitRandom * Interval) + Minimum)
end

function RandomPointInCircle(MinRadius, MaxRadius)
&#9;local OutwardVector = Vector3.new(0, 0, GetRandomFloat(MinRadius, MaxRadius))
&#9;local Rotation = (math.random() * math.pi * 2)
&#9;return CFrame.Angles(0, Rotation, 0) * OutwardVector&#9;
end

function CheckTable(Table, String)
&#9;for i, v in pairs(Table) do
&#9;&#9;if string.lower(v) == string.lower(String) then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function RayIgnoreCheck(Hit)
&#9;if not Hit or not Hit.Parent then
&#9;&#9;return
&#9;end
&#9;local IgnoreNames = {&quot;Water&quot;, &quot;Effect&quot;, &quot;Rocket&quot;, &quot;Bullet&quot;, &quot;Handle&quot;, &quot;Projectile&quot;, &quot;Arrow&quot;}
&#9;if Hit.Transparency &gt;= 1 or CheckTable(IgnoreNames, Hit.Name) then
&#9;&#9;return true
&#9;end
&#9;return false
end

-- @preconditions: vec should be a unit vector, and 0 &lt; rayLength &lt;= 1000
function RayCast(StartPos, Vector, RayLength)
&#9;local HitObject, HitPos = game:GetService(&quot;Workspace&quot;):FindPartOnRayWithIgnoreList(Ray.new((StartPos + (Vector * 0.01)), (Vector * RayLength)), {Character})
&#9;if HitObject and HitPos then
&#9;&#9;local Distance = (RayLength - (HitPos - StartPos).magnitude)
&#9;&#9;if RayIgnoreCheck(HitObject) and Distance &gt; 0 then
&#9;&#9;&#9;-- there is a chance here for potential infinite recursion
&#9;&#9;&#9;return RayCast(HitPos, Vector, Distance)
&#9;&#9;end
&#9;end
&#9;return HitObject, HitPos
end

function FindOptimalLaunchVector(Destination)
&#9;local BestDistance = 0
&#9;local BestVector = Vector3.new(0, 1, 0)
&#9;local BestPosition = (Destination + BestVector)
&#9;for i, v in pairs(PossibleIncomingVectors) do
&#9;&#9;local HitObject, HitPos = RayCast(Destination, v, LaunchDistance)
&#9;&#9;if (HitPos - Destination).magnitude &gt; BestDistance then
&#9;&#9;&#9;BestVector = v
&#9;&#9;&#9;BestDistance = (HitPos - Destination).magnitude
&#9;&#9;&#9;BestPosition = HitPos
&#9;&#9;end
&#9;end
&#9;return BestVector, BestPosition, BestDistance
end

function Activated()
&#9;if not Tool.Enabled or not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;local LeftArm = Character:FindFirstChild(&quot;Left Arm&quot;)
&#9;if not LeftArm then
&#9;&#9;return
&#9;end
&#9;Tool.Enabled = false
&#9;local CurrentlyEquipped = true
&#9;ToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;CurrentlyEquipped = false
&#9;end)
&#9;ViolinBow = Bow:Clone()
&#9;local Weld = Instance.new(&quot;Weld&quot;)
&#9;Weld.Part0 = Torso
&#9;Weld.Part1 = ViolinBow
&#9;Weld.C0 = CFrame.new(1.05, -1, 1) * CFrame.Angles((math.pi / 2),0,0)
&#9;Weld.Parent = ViolinBow
&#9;ViolinBow.Parent = Tool
&#9;local BowEquip = Animations.BowEquip
&#9;InvokeClient(&quot;PlayAnimation&quot;, BowEquip)
&#9;wait(BowEquip.Duration / 2)
&#9;if not CurrentlyEquipped then
&#9;&#9;return
&#9;end
&#9;Weld.Part0 = LeftArm
&#9;Weld.C0 = CFrame.new(0, -1, -2) * CFrame.Angles(-(math.pi / 2), 0, 0)
&#9;Weld.C0 = Weld.C0 * CFrame.Angles(0, -(math.pi / 4), 0)
&#9;wait(BowEquip.Duration / 2)
&#9;if not CurrentlyEquipped then
&#9;&#9;return
&#9;end
&#9;Tool.Grip = Grips.Equipped
&#9;local StartPlaying = Animations.StartPlaying
&#9;InvokeClient(&quot;PlayAnimation&quot;, StartPlaying)
&#9;wait(StartPlaying.Duration)
&#9;if not CurrentlyEquipped then
&#9;&#9;return
&#9;end
&#9;local Playing = Animations.Playing
&#9;InvokeClient(&quot;PlayAnimation&quot;, Playing)
&#9;ViolinSong:Play()
&#9;local StartTime = tick()
&#9;local Creator = Player
&#9;local CreatorCharacter = Character
&#9;while (tick() - StartTime) &lt; Duration and CurrentlyEquipped do
&#9;&#9;local ViolinOffset = RandomPointInCircle(20, 100)
&#9;&#9;local MeteorViolinModel = OrbitalViolinModel:Clone()
&#9;&#9;local MeteorViolin = MeteorViolinModel.Violin
&#9;&#9;local MeteorBow = MeteorViolinModel.Bow
&#9;&#9;local MeteorFire = Instance.new(&quot;Fire&quot;)
&#9;&#9;MeteorFire.Heat = 20
&#9;&#9;MeteorFire.Size = 18
&#9;&#9;MeteorFire.Parent = MeteorViolin
&#9;&#9;MeteorViolinModel.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;local TargetPoint = Instance.new(&quot;Part&quot;)
&#9;&#9;TargetPoint.Transparency = 1
&#9;&#9;TargetPoint.CanCollide = false
&#9;&#9;TargetPoint.Anchored = true
&#9;&#9;TargetPoint.CFrame = CFrame.new(ViolinOffset) + Torso.CFrame.p
&#9;&#9;Debris:AddItem(TargetPoint, 30)
&#9;&#9;Debris:AddItem(MeteorViolinModel, 30)
&#9;&#9;local ViolinPropulsion = Instance.new(&quot;RocketPropulsion&quot;)
&#9;&#9;ViolinPropulsion.Target = TargetPoint
&#9;&#9;ViolinPropulsion.MaxThrust = 100000
&#9;&#9;ViolinPropulsion.MaxSpeed = 40
&#9;&#9;ViolinPropulsion.Parent = MeteorViolin
&#9;&#9;local MeteorHit = false
&#9;&#9;for i, v in pairs(MeteorViolinModel:GetChildren()) do
&#9;&#9;&#9;if v:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;&#9;v.Touched:connect(function(Hit)
&#9;&#9;&#9;&#9;&#9;if Hit == MeteorViolin or Hit == MeteorBow or MeteorHit then
&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;local Explosion = Instance.new(&quot;Explosion&quot;)
&#9;&#9;&#9;&#9;&#9;Explosion.BlastPressure = 0
&#9;&#9;&#9;&#9;&#9;Explosion.BlastRadius = 15
&#9;&#9;&#9;&#9;&#9;Explosion.Position = MeteorViolin.CFrame.p
&#9;&#9;&#9;&#9;&#9;Explosion.Hit:connect(function(Hit2)
&#9;&#9;&#9;&#9;&#9;&#9;if not Hit2 or not Hit2.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;local character = Hit2.Parent
&#9;&#9;&#9;&#9;&#9;&#9;if character == CreatorCharacter then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;if humanoid then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;TagHumanoid(humanoid, Creator)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(StrikeDamage)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;Explosion.Parent = MeteorViolinModel
&#9;&#9;&#9;&#9;&#9;for ii, vv in pairs(MeteorViolinModel:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;if vv:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;vv.Anchored = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;vv.Transparency = 1
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;if MeteorFire and MeteorFire.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;MeteorFire.Enabled = false
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;Debris:AddItem(MeteorViolinModel, 2)
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local BestVector, BestPosition, BestDistance = FindOptimalLaunchVector(TargetPoint.CFrame.p)
&#9;&#9;TargetPoint.Parent = MeteorViolinModel
&#9;&#9;MeteorViolin.CFrame = CFrame.new(BestPosition)
&#9;&#9;ViolinPropulsion:Fire()
&#9;&#9;wait(2)
&#9;end
&#9;ViolinSong:Stop()
&#9;InvokeClient(&quot;StopAnimation&quot;, Playing)
&#9;Tool.Grip = Grips.Default
&#9;if ViolinBow and ViolinBow.Parent then
&#9;&#9;ViolinBow:Destroy()
&#9;end
&#9;wait(ReloadTime)
&#9;Tool.Enabled = true
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent)
end

function Equipped()
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;Mesh.MeshId = Meshes.Violin
end

function Unequipped()
&#9;Mesh.MeshId = Meshes.ViolinWithBow
&#9;Tool.Grip = Grips.Default
&#9;ViolinSong:Stop()
&#9;if ViolinBow and ViolinBow.Parent then
&#9;&#9;ViolinBow:Destroy()
&#9;end
&#9;if ToolUnequipped then
&#9;&#9;ToolUnequipped:disconnect()
&#9;end
&#9;for i, v in pairs(Animations) do
&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;end
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX169550263A4643CA9827EDE666A30667">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>10.2942219</X>
					<Y>7.03714466</Y>
					<Z>4.71103716</Z>
					<R00>-0.961260378</R00>
					<R01>-0.143468782</R01>
					<R02>0.235362083</R02>
					<R10>7.4505806e-009</R10>
					<R11>0.853868306</R11>
					<R12>0.520489275</R12>
					<R20>-0.275642157</R20>
					<R21>0.500325739</R21>
					<R22>-0.820789695</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>9.82349777</X>
					<Y>5.99616623</Y>
					<Z>6.35261631</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>