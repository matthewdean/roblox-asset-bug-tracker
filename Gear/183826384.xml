<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX56E4BA9BD79843688037D496849F3667">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>1.79999995</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>-0</R10>
				<R11>8.10000586e-007</R11>
				<R12>1</R12>
				<R20>0</R20>
				<R21>-1</R21>
				<R22>8.10000586e-007</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">SwordOfTheLand</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset?id=181209221</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX06EC3C1345D2442E82BB230D0099B081">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0.5</X>
					<Y>3.30000019</Y>
					<Z>1.20000029</Z>
					<R00>-9.90244686e-009</R00>
					<R01>0.707106352</R01>
					<R02>0.707107008</R02>
					<R10>-7.95045096e-008</R10>
					<R11>0.707106888</R11>
					<R12>-0.707106411</R12>
					<R20>-0.999999881</R20>
					<R21>-2.98023206e-008</R21>
					<R22>1.86413409e-008</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.5</X>
					<Y>1</Y>
					<Z>5.5</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXE7564AEA816D4F43B4040ECEBE1C5F94">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset?id=181209181</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=181209199</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXA17F048498DD4214A54CACDD4BC7B8C4">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Lunge</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/swordlunge.wav</url></Content>
					<float name="Volume">0.600000024</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXDBC6301F7DCB4E1CB269DAB01DEE55C7">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Slash</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/swordslash.wav</url></Content>
					<float name="Volume">0.699999988</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXD340F154D9F64EE1A697D60FD4E35FEC">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Unsheath</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/unsheath.wav</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBXFE01BC873B70474E9DFEC2A5AEB171AB">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
ContentProvider = game:GetService(&quot;ContentProvider&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Animations = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ClientControl.OnClientInvoke = (function(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;elseif Mode == &quot;Preload&quot; and Value then
&#9;&#9;ContentProvider:Preload(Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;elseif Mode == &quot;DisableJump&quot; then
&#9;&#9;DisableJump(Value)
&#9;end
end)

function InvokeServer(Mode, Value)
&#9;pcall(function()
&#9;&#9;local ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;&#9;return ServerReturn
&#9;end)
end

function DisableJump(Boolean)
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;if Boolean then
&#9;&#9;PreventJump = Humanoid.Changed:connect(function(Property)
&#9;&#9;&#9;if Property ==  &quot;Jump&quot; then
&#9;&#9;&#9;&#9;Humanoid.Jump = false
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
end

function Unequipped()
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXE3A064B9727A4EC1A7399C61BA27BC09">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = &quot;rbxasset://textures/GunCursor.png&quot;
Reloading_Icon = &quot;rbxasset://textures/GunWaitCursor.png&quot;

Tool = script.Parent

Mouse = nil

function UpdateIcon()
&#9;if Mouse then
&#9;&#9;Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
&#9;end
end

function OnEquipped(ToolMouse)
&#9;Mouse = ToolMouse
&#9;UpdateIcon()
end

function OnChanged(Property)
&#9;if Property == &quot;Enabled&quot; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXF3FEDCB0EBAC4C9E92238AC8B30B6327">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=74894663</url></Content>
				<string name="Name">LeftSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX8F84FADA5C86484F8B23D168E4ACF95D">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=74813494</url></Content>
				<string name="Name">RightSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXFD49068491DC4B55B730EE9DDC1A349D">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=183798221</url></Content>
				<string name="Name">Rise</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBXB692A6AA3BD84A778799E48AC6091ADB">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

Animations = {
&#9;LeftSlash = {Animation = Tool:WaitForChild(&quot;LeftSlash&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = 0.75, Damage = 15},
&#9;RightSlash = {Animation = Tool:WaitForChild(&quot;RightSlash&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = 0.75, Damage = 15},
&#9;Rise = {Animation = Tool:WaitForChild(&quot;Rise&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil, Damage = 5, MaxDamage = 50}
}

Sounds = {
&#9;Unsheath = Handle:WaitForChild(&quot;Unsheath&quot;),
&#9;Slash = Handle:WaitForChild(&quot;Slash&quot;),
&#9;Lunge = Handle:WaitForChild(&quot;Lunge&quot;)
}

Gravity = 196.20

Damage = 5

Equipped = false

CurrentAnimation = nil

Special = {
&#9;Enabled = true,
&#9;Active = false,
&#9;ReloadTime = 20,
&#9;Damage = 10,
}

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Tool.Enabled = true

ServerControl.OnServerInvoke = (function(player, Mode, Value)
&#9;if player == Player and Equipped and CheckIfAlive() then
&#9;&#9;if Mode == &quot;KeyPress&quot; then
&#9;&#9;&#9;local Key = Value.Key
&#9;&#9;&#9;local Down = Value.Down
&#9;&#9;&#9;if Key == &quot;q&quot; and Down then
&#9;&#9;&#9;&#9;if Special.Enabled and not Special.Active and Tool.Enabled then
&#9;&#9;&#9;&#9;&#9;Special.Enabled = false
&#9;&#9;&#9;&#9;&#9;Special.Active = true
&#9;&#9;&#9;&#9;&#9;local CurrentlyEquipped = true
&#9;&#9;&#9;&#9;&#9;if ActivatedToolUnequipped then
&#9;&#9;&#9;&#9;&#9;&#9;ActivatedToolUnequipped:disconnect()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;ActivatedToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;&#9;&#9;&#9;&#9;CurrentlyEquipped = false
&#9;&#9;&#9;&#9;&#9;&#9;if ActivatedToolUnequipped then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;ActivatedToolUnequipped:disconnect()
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;local player = Player
&#9;&#9;&#9;&#9;&#9;local character = Character
&#9;&#9;&#9;&#9;&#9;local humanoid = Humanoid
&#9;&#9;&#9;&#9;&#9;local torso = Torso
&#9;&#9;&#9;&#9;&#9;local Rise = Animations.Rise
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Rise)
&#9;&#9;&#9;&#9;&#9;local Mass = (GetTotalMass(Character) * Gravity * 1.5)
&#9;&#9;&#9;&#9;&#9;BodyPosition = Instance.new(&quot;BodyPosition&quot;)
&#9;&#9;&#9;&#9;&#9;BodyPosition.maxForce = Vector3.new(math.huge, Mass, math.huge)
&#9;&#9;&#9;&#9;&#9;local FloatPosition = (torso.Position.Y + 25)
&#9;&#9;&#9;&#9;&#9;BodyPosition.position = Vector3.new(torso.Position.X, FloatPosition, torso.Position.Z)
&#9;&#9;&#9;&#9;&#9;Debris:AddItem(BodyPosition, 20)
&#9;&#9;&#9;&#9;&#9;BodyPosition.Parent = Torso
&#9;&#9;&#9;&#9;&#9;wait(3)
&#9;&#9;&#9;&#9;&#9;if CurrentlyEquipped and humanoid and humanoid.Parent and humanoid.Health &gt; 0 and torso and torso.Parent and BodyPosition and BodyPosition.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition.maxForce = Vector3.new(math.huge, math.huge, math.huge)
&#9;&#9;&#9;&#9;&#9;&#9;local PX, PY, PZ, R00, R01, R02, R10, R11, R12,R20, R21, R22 = torso.CFrame:components()
&#9;&#9;&#9;&#9;&#9;&#9;torso.CFrame = CFrame.new(PX, FloatPosition, PZ, R00, R01, R02, R10, R11, R12, R20, R21, R22)
&#9;&#9;&#9;&#9;&#9;&#9;local TorsoCFrame = Torso.CFrame
&#9;&#9;&#9;&#9;&#9;&#9;LandModel = Instance.new(&quot;Model&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;LandModel.Name = &quot;LandModel&quot;
&#9;&#9;&#9;&#9;&#9;&#9;Debris:AddItem(LandModel, 15)
&#9;&#9;&#9;&#9;&#9;&#9;LandModel.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;local IncreaseRadius = 5
&#9;&#9;&#9;&#9;&#9;&#9;local Radius = Character:GetModelSize().Y
&#9;&#9;&#9;&#9;&#9;&#9;local GrassParts = {}
&#9;&#9;&#9;&#9;&#9;&#9;local EarthParts = {}
&#9;&#9;&#9;&#9;&#9;&#9;for i = 1, math.random(10, 15) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if humanoid and humanoid.Parent and humanoid.Health &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for ii = 1, math.random(20, 35) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local LandPart = Instance.new(&quot;Model&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;LandPart.Name = &quot;LandPart&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Size = (math.random(500, 1500) * 0.001)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Grass = BasePart:Clone()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Grass.Name = &quot;Grass&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Grass.BrickColor = BrickColor.new(&quot;Bright green&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Grass.Material = Enum.Material.Grass
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Grass.Size = Vector3.new(Size, 0.2, Size)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Grass.CanCollide = false
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Dirt = Grass:Clone()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Dirt.Name = &quot;Dirt&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Dirt.BrickColor = BrickColor.new(&quot;Brown&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Weld = Instance.new(&quot;Weld&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Weld.Part0 = Grass
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Weld.Part1 = Dirt
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Weld.C1 = CFrame.new(0, ((Grass.Size.Y / 2) + (Dirt.Size.Y / 2)), 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Weld.Parent = Grass
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Grass.Parent = LandPart
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Dirt.Parent = LandPart
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;LandPart.Parent = LandModel
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Direction = CFrame.Angles(math.random(0, 360), math.random(0, 360), math.random(0, 360)).lookVector
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local StartPosition = (TorsoCFrame + Direction * (Radius + (IncreaseRadius * 2)))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local EndPosition = (TorsoCFrame + Direction * (Radius + (IncreaseRadius * 1))).p
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Grass.CFrame = StartPosition
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Grass.CFrame = CFrame.new(Grass.Position, TorsoCFrame.p) * CFrame.Angles((math.pi / 2), 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Grass.Anchored = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local LandMass = (GetTotalMass(LandPart) * Gravity * 6)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local BP = Instance.new(&quot;BodyPosition&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BP.maxForce = Vector3.new(LandMass, LandMass, LandMass)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BP.position = EndPosition
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BP.Parent = Grass
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Grass.Anchored = false
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(EarthParts, Grass)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(EarthParts, Dirt)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(GrassParts, {Part = Grass, Dirt = Dirt, BodyPosition = BP, Direction = Direction, Mass = LandMass})
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;wait(0.1)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;wait(3)
&#9;&#9;&#9;&#9;&#9;&#9;if CurrentlyEquipped then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Limbs = {&quot;Head&quot;, &quot;Torso&quot;, &quot;Left Arm&quot;, &quot;Right Arm&quot;, &quot;Left Leg&quot;, &quot;Right Leg&quot;}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local PlayerConnections = {}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i, v in pairs(Players:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if v:IsA(&quot;Player&quot;) and v ~= player and v.Character then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local EnemyPlayer = v
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local EnemyCharacter = EnemyPlayer.Character
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local EnemyHumanoid = EnemyCharacter:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if EnemyHumanoid then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for ii, vv in pairs(EnemyCharacter:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if vv:IsA(&quot;BasePart&quot;) and CheckTableForString(Limbs, vv.Name) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local PlayerHit = vv.Touched:connect(function(Hit)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not Hit or not Hit.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if CheckTableForInstance(EarthParts, Hit) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;UntagHumanoid(EnemyHumanoid)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TagHumanoid(EnemyHumanoid, EnemyPlayer)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;EnemyHumanoid:TakeDamage(Special.Damage)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(PlayerConnections, PlayerHit)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Delay(5, function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i, v in pairs(PlayerConnections) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if v then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v:disconnect()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i, v in pairs(GrassParts) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if v.Part and v.Part.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if v.BodyPosition and v.BodyPosition.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.BodyPosition:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Part.CanCollide = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if v.Dirt and v.Dirt.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Dirt.CanCollide = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Velocity = v.Direction * 50
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local BV = Instance.new(&quot;BodyVelocity&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BV.maxForce = Vector3.new(v.LandMass, v.LandMass, v.LandMass)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BV.velocity = Velocity
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BV.Parent = v.Part
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Part.Velocity = Velocity
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;wait(5)
&#9;&#9;&#9;&#9;&#9;if CurrentlyEquipped then
&#9;&#9;&#9;&#9;&#9;&#9;if BodyPosition and BodyPosition.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, Rise)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;Special.Active = false
&#9;&#9;&#9;&#9;&#9;wait(Special.ReloadTime)
&#9;&#9;&#9;&#9;&#9;Special.Enabled = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end)

function InvokeClient(Mode, Value)
&#9;local ReturnValue = nil
&#9;pcall(function()
&#9;&#9;ReturnValue = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ReturnValue
end

function CheckTableForInstance(Table, Instance)
&#9;for i, v in pairs(Table) do
&#9;&#9;if v == Instance then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function CheckTableForString(Table, String)
&#9;for i, v in pairs(Table) do
&#9;&#9;if string.lower(v) == string.lower(String) then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function GetTotalMass(Parent)
&#9;local Mass = 0
&#9;local function GetMass(Parent)
&#9;&#9;for i, v in pairs(Parent:GetChildren()) do
&#9;&#9;&#9;if v:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;&#9;Mass = (Mass + v:GetMass())
&#9;&#9;&#9;end
&#9;&#9;&#9;GetMass(v)
&#9;&#9;end
&#9;end
&#9;GetMass(Parent)
&#9;return Mass
end

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function Blow(Part)
&#9;Part.Touched:connect(function(Hit)
&#9;&#9;if not Hit or not Hit.Parent or not Equipped or not CheckIfAlive() then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;local RightArm = Character:FindFirstChild(&quot;Right Arm&quot;)
&#9;&#9;if not RightArm then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;local RightGrip = RightArm:FindFirstChild(&quot;RightGrip&quot;)
&#9;&#9;if not RightGrip or (RightGrip.Part0 ~= Handle and RightGrip.Part1 ~= Handle) then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;local character = Hit.Parent
&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;if character ~= Character and humanoid and humanoid.Health &gt; 0 then
&#9;&#9;&#9;local DamageValue = ((CurrentAnimation and CurrentAnimation.Damage) or Damage)
&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;&#9;humanoid:TakeDamage(DamageValue)
&#9;&#9;end
&#9;end)
end

function Activated()
&#9;if not Tool.Enabled or not Equipped or not CheckIfAlive() or Special.Active then
&#9;&#9;return
&#9;end
&#9;Tool.Enabled = false
&#9;Sounds.Slash:Play()
&#9;local CurrentlyEquipped = true
&#9;if ActivatedToolUnequipped then
&#9;&#9;ActivatedToolUnequipped:disconnect()
&#9;end
&#9;ActivatedToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;CurrentlyEquipped = false
&#9;&#9;if ActivatedToolUnequipped then
&#9;&#9;&#9;ActivatedToolUnequipped:disconnect()
&#9;&#9;end
&#9;end)
&#9;local SlashAnims = {Animations.LeftSlash, Animations.RightSlash}
&#9;local SlashAnim = SlashAnims[math.random(1, #SlashAnims)]
&#9;CurrentAnimation = SlashAnim
&#9;InvokeClient(&quot;PlayAnimation&quot;, SlashAnim)
&#9;InvokeClient(&quot;PlaySound&quot;, Sounds.Slash)
&#9;wait(SlashAnim.Duration)
&#9;if CurrentlyEquipped then
&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, SlashAnim)
&#9;&#9;CurrentAnimation = nil
&#9;end
&#9;Tool.Enabled = true
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent)
end

function Equipped(Mouse)
&#9;Equipped = true
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;Sounds.Unsheath:Play()
end

function Unequipped()
&#9;Equipped = false
&#9;CurrentAnimation = nil
&#9;for i, v in pairs({BodyPosition, LandModel}) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs({ActivatedToolUnequipped}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(Sounds) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Stop()
&#9;&#9;&#9;InvokeClient(&quot;StopSound&quot;, v)
&#9;&#9;end
&#9;end
end

Blow(Handle)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX9CFFD674C1E54568872719941CBF757B">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>0.571345448</X>
					<Y>3.55064297</Y>
					<Z>-2.27200723</Z>
					<R00>-0.999977231</R00>
					<R01>-0.000268653384</R01>
					<R02>0.00675008586</R02>
					<R10>-2.91038339e-011</R10>
					<R11>0.999208927</R11>
					<R12>0.0397685021</R12>
					<R20>-0.00675543072</R20>
					<R21>0.0397675969</R21>
					<R22>-0.999186099</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>0.559870303</X>
					<Y>3.48303652</Y>
					<Z>-0.573390961</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>