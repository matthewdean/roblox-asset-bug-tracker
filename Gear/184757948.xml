<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX1DB0C464C5C54AA48CBFDCD75CFE8BD4">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>2</Z>
				<R00>-1</R00>
				<R01>0</R01>
				<R02>8.10038e-006</R02>
				<R10>-8.10038e-006</R10>
				<R11>0</R11>
				<R12>-1</R12>
				<R20>0</R20>
				<R21>-1</R21>
				<R22>0</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">BlackKnightSword</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset?id=183842637</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX34565DDBE8074206BF8F20A3D9F49AE2">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>39.7079964</X>
					<Y>5.4529438</Y>
					<Z>-65.6562576</Z>
					<R00>-0.279289693</R00>
					<R01>0.691702724</R01>
					<R02>0.665991187</R02>
					<R10>5.30882744e-007</R10>
					<R11>0.693591535</R11>
					<R12>-0.720368385</R12>
					<R20>-0.960206747</R20>
					<R21>-0.201191112</R21>
					<R22>-0.193713337</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.25</X>
					<Y>1</Y>
					<Z>6.5</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXFF41016A85D342B3A0A456067F301F65">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset?id=183842572</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=183842620</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX1FA1601263AD4765B4B8773EC4063F86">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Lunge</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/swordlunge.wav</url></Content>
					<float name="Volume">0.600000024</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXFC9FE4F9861A438BB2CA73AEFCAA84DC">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Slash</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/swordslash.wav</url></Content>
					<float name="Volume">0.699999988</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXDECDE2003A754C45AE72611C50BD1F42">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Unsheath</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/unsheath.wav</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXA47E50F73D34411496E21FE5CE5ED8FC">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">ShockWave</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=96478505</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX76407ED363F446079F08350AA1465DF9">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

Animations = {
&#9;LeftSlash = {Animation = Tool:WaitForChild(&quot;LeftSlash&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = 0.75, Damage = 15},
&#9;RightSlash = {Animation = Tool:WaitForChild(&quot;RightSlash&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = 0.75, Damage = 15},
}

Sounds = {
&#9;Unsheath = Handle:WaitForChild(&quot;Unsheath&quot;),
&#9;Slash = Handle:WaitForChild(&quot;Slash&quot;),
&#9;Lunge = Handle:WaitForChild(&quot;Lunge&quot;),
&#9;ShockWave = Handle:WaitForChild(&quot;ShockWave&quot;)
}

Gravity = 196.20

Damage = 5

Equipped = false

SecondaryAttack = {
&#9;Enabled = true,
&#9;Active = false,
&#9;ReloadTime = 5
}

CurrentAnimation = nil

SpecialAttacks = {
&#9;Enabled = true,
&#9;Active = false,
&#9;ReloadTime = 5,
&#9;Strike = {
&#9;&#9;Enabled = true,
&#9;&#9;Active = false,
&#9;&#9;Duration = 20,
&#9;&#9;ReloadTime = 20,
&#9;&#9;Damage = 5,
&#9;},
&#9;Throw = {
&#9;&#9;Enabled = true,
&#9;&#9;Active = false,
&#9;&#9;ReloadTime = 20,
&#9;&#9;Damage = 5,
&#9;&#9;TouchDamage = 15,
&#9;&#9;Damage = 5,
&#9;&#9;Radius = 50
&#9;}
}

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Tool.Enabled = true

ServerControl.OnServerInvoke = (function(player, Mode, Value)
&#9;if player == Player and Equipped and CheckIfAlive() then
&#9;&#9;if Mode == &quot;KeyPress&quot; and SpecialAttacks.Enabled and not SpecialAttacks.Active and Tool.Enabled then
&#9;&#9;&#9;local Key = Value.Key
&#9;&#9;&#9;local Down = Value.Down
&#9;&#9;&#9;local SpecialAttack = nil
&#9;&#9;&#9;if Key == &quot;q&quot; and Down then
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;SpecialAttack = SpecialAttacks.Strike
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;if SpecialAttack.Enabled and not SpecialAttack.Active then
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;SpecialAttacks.Enabled = false
&#9;&#9;&#9;&#9;&#9;SpecialAttacks.Active = true
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;SpecialAttack.Enabled = false
&#9;&#9;&#9;&#9;&#9;SpecialAttack.Active = true
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local CurrentlyEquipped = true
&#9;&#9;&#9;&#9;&#9;if ActivatedToolUnequipped then
&#9;&#9;&#9;&#9;&#9;&#9;ActivatedToolUnequipped:disconnect()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;ActivatedToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;&#9;&#9;&#9;&#9;CurrentlyEquipped = false
&#9;&#9;&#9;&#9;&#9;&#9;if ActivatedToolUnequipped then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;ActivatedToolUnequipped:disconnect()
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;local MousePosition = InvokeClient(&quot;MousePosition&quot;)
&#9;&#9;&#9;&#9;&#9;local Swords = {}
&#9;&#9;&#9;&#9;&#9;local SwordClone = Handle:Clone()
&#9;&#9;&#9;&#9;&#9;SwordClone.Name = &quot;Sword&quot;
&#9;&#9;&#9;&#9;&#9;SwordClone.Size = (SwordClone.Size * 2)
&#9;&#9;&#9;&#9;&#9;SwordClone.Mesh.Scale = (SwordClone.Mesh.Scale * 2)
&#9;&#9;&#9;&#9;&#9;SwordClone.CanCollide = true
&#9;&#9;&#9;&#9;&#9;table.insert(Swords, SwordClone)
&#9;&#9;&#9;&#9;&#9;for i = 1, math.random(75, 100) do
&#9;&#9;&#9;&#9;&#9;&#9;local SecondarySword = SwordClone:Clone()
&#9;&#9;&#9;&#9;&#9;&#9;SecondarySword.Size = (SecondarySword.Size / 4)
&#9;&#9;&#9;&#9;&#9;&#9;SecondarySword.Mesh.Scale = (SecondarySword.Mesh.Scale / 4)
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(Swords, SecondarySword)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;local OriginalStartPosition = Head.Position + Vector3.new(0, 1, 0) * 25
&#9;&#9;&#9;&#9;&#9;for i, v in pairs(Swords) do
&#9;&#9;&#9;&#9;&#9;&#9;if v then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Mass = (v:GetMass() * Gravity * 2)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local BodyPosition = Instance.new(&quot;BodyPosition&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition.maxForce = Vector3.new(Mass, Mass, Mass)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition.position = OriginalStartPosition
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition.Parent = v
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local BodyGyro = Instance.new(&quot;BodyGyro&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyGyro.maxTorque = Vector3.new(math.huge, math.huge, math.huge)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyGyro.Parent = v
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local BodyVelocity = Instance.new(&quot;BodyVelocity&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyVelocity.maxForce = Vector3.new(0, 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyVelocity.Parent = v
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Radius = 10
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Offset = ((v ~= SwordClone and Vector3.new((math.random(-(Radius * 100), (Radius * 100)) * 0.01), (math.random(-(Radius * 100), (Radius * 100)) * 0.01), (math.random(-(Radius * 100), (Radius * 100)) * 0.01))) or Vector3.new(0, 0, 0))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Swords[i] = {Sword = v, Mass = Mass, BodyPosition = BodyPosition, BodyGyro = BodyGyro, BodyVelocity = BodyVelocity, Offset = Offset}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.CFrame = CFrame.new(OriginalStartPosition + Offset)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Debris:AddItem(v, 30)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;local WaitTick = tick()
&#9;&#9;&#9;&#9;&#9;while (tick() - WaitTick) &lt; 3 and CurrentlyEquipped do
&#9;&#9;&#9;&#9;&#9;&#9;MousePosition = InvokeClient(&quot;MousePosition&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;for i, v in pairs(Swords) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if v.Sword and v.Sword.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local StartPosition = (Vector3.new(Head.Position.X, OriginalStartPosition.Y, Head.Position.Z) + v.Offset)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Direction = CFrame.new(StartPosition, MousePosition)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.BodyPosition.position = StartPosition
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.BodyVelocity.velocity = Direction.lookVector * 250
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.BodyGyro.cframe = Direction
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;if CurrentlyEquipped then
&#9;&#9;&#9;&#9;&#9;&#9;for i, v in pairs(Swords) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if v.Sword and v.Sword.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Untouched = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Sword.Touched:connect(function(Hit)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not Hit or not Hit.Parent or Hit.Name == &quot;Sword&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local character = Hit.Parent
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if character:IsA(&quot;Hat&quot;) or character:IsA(&quot;Tool&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;character = character.Parent
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if character == Character then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if humanoid and humanoid.Health &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(((v.Sword == SwordClone and humanoid.MaxHealth) or SpecialAttack.Damage))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if Untouched then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local BodyPosition = Instance.new(&quot;BodyPosition&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition.maxForce = Vector3.new(math.huge, math.huge, math.huge)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition.position = v.Sword.Position
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition.Parent = v.Sword
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Sword.Velocity = Vector3.new(0, 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Sword.RotVelocity = Vector3.new(0, 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Untouched = false
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;for i = 1, #Swords do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;for ii = 1, math.random(2, 10) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local v = Swords[ii]
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if v and v.Sword and v.Sword.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Sword.CFrame = CFrame.new(v.Sword.Position, MousePosition)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.BodyVelocity.maxForce = Vector3.new(v.Mass, v.Mass, v.Mass)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Sword.Velocity = (v.BodyVelocity.velocity / 2)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if v.BodyPosition and v.BodyPosition.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.BodyPosition:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.remove(Swords, ii)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;wait(0.1)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;Delay(3, function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i, v in pairs(Swords) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if v.Sword and v.Sword.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Sword:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;for i, v in pairs(Swords) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if v.Sword and v.Sword.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Sword:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;SpecialAttack.Active = false
&#9;&#9;&#9;&#9;&#9;SpecialAttacks.Active = false
&#9;&#9;&#9;&#9;&#9;Delay(SpecialAttack.ReloadTime, function()
&#9;&#9;&#9;&#9;&#9;&#9;SpecialAttack.Enabled = true
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif Key == &quot;e&quot; and Down then
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;SpecialAttack = SpecialAttacks.Throw
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;if SpecialAttack.Enabled and not SpecialAttack.Active then
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;SpecialAttacks.Enabled = false
&#9;&#9;&#9;&#9;&#9;SpecialAttacks.Active = true
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;SpecialAttack.Enabled = false
&#9;&#9;&#9;&#9;&#9;SpecialAttack.Active = true
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local CurrentlyEquipped = true
&#9;&#9;&#9;&#9;&#9;if ActivatedToolUnequipped then
&#9;&#9;&#9;&#9;&#9;&#9;ActivatedToolUnequipped:disconnect()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;ActivatedToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;&#9;&#9;&#9;&#9;CurrentlyEquipped = false
&#9;&#9;&#9;&#9;&#9;&#9;if ActivatedToolUnequipped then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;ActivatedToolUnequipped:disconnect()
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local MousePosition = InvokeClient(&quot;MousePosition&quot;)
&#9;&#9;&#9;&#9;&#9;local Distance = (Handle.Position - MousePosition).magnitude
&#9;&#9;&#9;&#9;&#9;SwordClone = Handle:Clone()
&#9;&#9;&#9;&#9;&#9;SwordClone.Name = &quot;Sword&quot;
&#9;&#9;&#9;&#9;&#9;SwordClone.CanCollide = true
&#9;&#9;&#9;&#9;&#9;SwordClone.Size = (SwordClone.Size * 3)
&#9;&#9;&#9;&#9;&#9;SwordClone.Mesh.Scale = (SwordClone.Mesh.Scale * 3)
&#9;&#9;&#9;&#9;&#9;local Mass = (SwordClone:GetMass() * Gravity * 2)
&#9;&#9;&#9;&#9;&#9;local BodyPosition = Instance.new(&quot;BodyPosition&quot;)
&#9;&#9;&#9;&#9;&#9;BodyPosition.maxForce = Vector3.new(math.huge, math.huge, math.huge)
&#9;&#9;&#9;&#9;&#9;BodyPosition.position = Head.Position + Vector3.new(0, 1, 0) * (Distance / 2)
&#9;&#9;&#9;&#9;&#9;BodyPosition.position = BodyPosition.position + CFrame.new(BodyPosition.position, Vector3.new(MousePosition.X, BodyPosition.position.Y, MousePosition.Z)).lookVector * (Distance / 2)
&#9;&#9;&#9;&#9;&#9;BodyPosition.Parent = SwordClone
&#9;&#9;&#9;&#9;&#9;local BodyGyro = Instance.new(&quot;BodyGyro&quot;)
&#9;&#9;&#9;&#9;&#9;BodyGyro.maxTorque = Vector3.new(math.huge, math.huge, math.huge)
&#9;&#9;&#9;&#9;&#9;BodyGyro.cframe = CFrame.new(SwordClone.Position) * CFrame.Angles(-(math.pi / 2), 0, 0)
&#9;&#9;&#9;&#9;&#9;BodyGyro.Parent = SwordClone
&#9;&#9;&#9;&#9;&#9;SwordClone.CFrame = Handle.CFrame
&#9;&#9;&#9;&#9;&#9;Debris:AddItem(SwordClone, 20)
&#9;&#9;&#9;&#9;&#9;SwordClone.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;&#9;&#9;&#9;wait(5)
&#9;&#9;&#9;&#9;&#9;if CurrentlyEquipped then
&#9;&#9;&#9;&#9;&#9;&#9;local Direction = CFrame.new(SwordClone.Position, MousePosition)
&#9;&#9;&#9;&#9;&#9;&#9;BodyGyro.cframe = Direction
&#9;&#9;&#9;&#9;&#9;&#9;local BodyVelocity = Instance.new(&quot;BodyVelocity&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;BodyVelocity.maxForce = Vector3.new(Mass, Mass, Mass)
&#9;&#9;&#9;&#9;&#9;&#9;BodyVelocity.velocity = Direction.lookVector * 500
&#9;&#9;&#9;&#9;&#9;&#9;SwordClone.Velocity = BodyVelocity.velocity
&#9;&#9;&#9;&#9;&#9;&#9;if BodyPosition and BodyPosition.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;local Untouched = true
&#9;&#9;&#9;&#9;&#9;&#9;SwordClone.Touched:connect(function(Hit)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not Hit or not Hit.Parent or Hit.Name == &quot;Sword&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local character = Hit.Parent
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if character:IsA(&quot;Hat&quot;) or character:IsA(&quot;Tool&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;character = character.Parent
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if character == Character then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if humanoid and humanoid.Health &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(SpecialAttack.TouchDamage)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if Untouched then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Untouched = false
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local BodyPosition = Instance.new(&quot;BodyPosition&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition.maxForce = Vector3.new(math.huge, math.huge, math.huge)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition.position = SwordClone.Position
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition.Parent = SwordClone
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;SwordClone.Velocity = Vector3.new(0, 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;SwordClone.RotVelocity = Vector3.new(0, 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local ShockWave = BasePart:Clone()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ShockWave.Name = &quot;ShockWave&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ShockWave.Transparency = 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ShockWave.Size = Vector3.new(0.2, 4, 0.2)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ShockWave.Anchored = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ShockWave.CanCollide = false
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Mesh = Instance.new(&quot;SpecialMesh&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.MeshType = Enum.MeshType.Brick
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.Scale = Vector3.new(1, 0, 1)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.Parent = ShockWave
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local ShockWaveTransparency = 0.125
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i = 1, 2 do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Decal = Instance.new(&quot;Decal&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Decal.Texture = &quot;http://www.roblox.com/asset?id=183210124&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Decal.Transparency = ShockWaveTransparency
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Decal.Face = ((i == 1 and Enum.NormalId.Top) or Enum.NormalId.Bottom)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Decal.Parent = ShockWave
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local ShockWaveCFrame = (CFrame.new(SwordClone.Position) - Vector3.new(0, (SwordClone.Size.Z / 4), 0)) * CFrame.Angles(math.pi, 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Debris:AddItem(ShockWave, 5)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Sound = Sounds.ShockWave:Clone()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Sound.Parent = SwordClone
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Sound:Play()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ShockWave.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ShockWave.CFrame = CFrame.new(Handle.Position)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ShockWave.Touched:connect(function(Hit)&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not Hit or not Hit.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local character = Hit.Parent
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if character:IsA(&quot;Hat&quot;) or character:IsA(&quot;Tool&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;character = character.Parent
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if character == Character then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local torso = character:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not humanoid or humanoid.Health == 0 or not Torso then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(SpecialAttack.Damage)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;humanoid.Sit = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local PushBack = CFrame.new(torso.Position, ShockWave.Position).lookVector * -50
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;PushBack = Vector3.new(PushBack.X, -math.random(10, 50), PushBack.Z)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;torso.Velocity = PushBack
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end)&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Radius = 50
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Transparency = (1 - ShockWaveTransparency)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i = 1, 25 do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if ShockWave and ShockWave.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local RadiusSize = ((SpecialAttack.Radius / 25) * i)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for ii, vv in pairs(ShockWave:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if vv:IsA(&quot;Decal&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;vv.Transparency = ((Transparency / 25) * i)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ShockWave.Size = Vector3.new(RadiusSize, ShockWave.Size.Y, RadiusSize)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ShockWave.CFrame = ShockWaveCFrame
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;wait(0.025)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if ShockWave and ShockWave.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ShockWave:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition.position = MousePosition
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;SpecialAttack.Active = false
&#9;&#9;&#9;&#9;&#9;SpecialAttacks.Active = false
&#9;&#9;&#9;&#9;&#9;Delay(SpecialAttack.ReloadTime, function()
&#9;&#9;&#9;&#9;&#9;&#9;SpecialAttack.Enabled = true
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;if SpecialAttack then
&#9;&#9;&#9;&#9;wait(SpecialAttacks.ReloadTime)
&#9;&#9;&#9;&#9;SpecialAttacks.Enabled = true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end)

function InvokeClient(Mode, Value)
&#9;local ReturnValue = nil
&#9;pcall(function()
&#9;&#9;ReturnValue = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ReturnValue
end

function RayCast(Position, Direction, MaxDistance, IgnoreList)
&#9;return game:GetService(&quot;Workspace&quot;):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList) 
end

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function Blow(Part)
&#9;Part.Touched:connect(function(Hit)
&#9;&#9;if not Hit or not Hit.Parent or not Equipped or not CheckIfAlive() or SpecialAttacks.Active then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;local RightArm = Character:FindFirstChild(&quot;Right Arm&quot;)
&#9;&#9;if not RightArm then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;local RightGrip = RightArm:FindFirstChild(&quot;RightGrip&quot;)
&#9;&#9;if not RightGrip or (RightGrip.Part0 ~= Handle and RightGrip.Part1 ~= Handle) then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;local character = Hit.Parent
&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;if character ~= Character and humanoid and humanoid.Health &gt; 0 then
&#9;&#9;&#9;local DamageValue = ((CurrentAnimation and CurrentAnimation.Damage) or Damage)
&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;&#9;humanoid:TakeDamage(DamageValue)
&#9;&#9;end
&#9;end)
end

function Activated()
&#9;if not Tool.Enabled or not Equipped or SecondaryAttack.Active or SpecialAttacks.Active then
&#9;&#9;return
&#9;end
&#9;local CurrentlyEquipped = true
&#9;ToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;CurrentlyEquipped = false
&#9;end)
&#9;Tool.Enabled = false
&#9;local SlashAnims = {Animations.LeftSlash, Animations.RightSlash}
&#9;local SlashAnim = SlashAnims[math.random(1, #SlashAnims)]
&#9;CurrentAnimation = SlashAnim
&#9;InvokeClient(&quot;PlayAnimation&quot;, CurrentAnimation)
&#9;InvokeClient(&quot;PlaySound&quot;, Sounds.Slash)
&#9;wait(CurrentAnimation.Duration)
&#9;if not CurrentlyEquipped then
&#9;&#9;return
&#9;end
&#9;InvokeClient(&quot;StopAnimation&quot;, CurrentAnimation)
&#9;CurrentAnimation = nil
&#9;InvokeClient(&quot;DisableJump&quot;, false)
&#9;InvokeClient(&quot;StopAnimation&quot;, CurrentAnimation)
&#9;CurrentAnimation = nil
&#9;Tool.Enabled = true
end
function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Head and Head.Parent and Torso and Torso.Parent)
end

function Equipped(Mouse)
&#9;Equipped = true
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Head = Character:WaitForChild(&quot;Head&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;Sounds.Unsheath:Play()
end

function Unequipped()
&#9;Equipped = false
&#9;CurrentAnimation = nil
&#9;for i, v in pairs({ToolUnequipped, ActivatedToolUnequipped}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;if SwordClone and SwordClone.Parent then
&#9;&#9;SwordClone:Destroy()
&#9;end
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(Sounds) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Stop()
&#9;&#9;&#9;InvokeClient(&quot;StopSound&quot;, v)
&#9;&#9;end
&#9;end
end

Blow(Handle)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX7E03E3467C8449D0A34824564DA4C0B1">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
ContentProvider = game:GetService(&quot;ContentProvider&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Animations = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ClientControl.OnClientInvoke = (function(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;elseif Mode == &quot;Preload&quot; and Value then
&#9;&#9;ContentProvider:Preload(Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;CoordinateFrame&quot; then
&#9;&#9;return Camera.CoordinateFrame
&#9;elseif Mode == &quot;SetCamera&quot; and (Value.CameraType or Value.CoordinateFrame) then
&#9;&#9;if Value.CameraType then
&#9;&#9;&#9;Camera.CameraType = Value.CameraType
&#9;&#9;end
&#9;&#9;if Value.CoordinateFrame then
&#9;&#9;&#9;Camera.CoordinateFrame = Value.CoordinateFrame
&#9;&#9;end
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;elseif Mode == &quot;DisableJump&quot; then
&#9;&#9;DisableJump(Value)
&#9;end
end)

function InvokeServer(Mode, Value)
&#9;pcall(function()
&#9;&#9;local ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;&#9;return ServerReturn
&#9;end)
end

function DisableJump(Boolean)
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;if Boolean then
&#9;&#9;PreventJump = Humanoid.Changed:connect(function(Property)
&#9;&#9;&#9;if Property ==  &quot;Jump&quot; then
&#9;&#9;&#9;&#9;Humanoid.Jump = false
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
end

function Unequipped()
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXA5331FE3B4944391891054491C948A37">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = &quot;rbxasset://textures/GunCursor.png&quot;
Reloading_Icon = &quot;rbxasset://textures/GunWaitCursor.png&quot;

Tool = script.Parent

Mouse = nil

function UpdateIcon()
&#9;if Mouse then
&#9;&#9;Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
&#9;end
end

function OnEquipped(ToolMouse)
&#9;Mouse = ToolMouse
&#9;UpdateIcon()
end

function OnChanged(Property)
&#9;if Property == &quot;Enabled&quot; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXBE0F8B9494E1428587CF661F7139FF53">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=74894663</url></Content>
				<string name="Name">LeftSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXC53E1432DC4347DBAA8467A84F6FAC55">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=74813494</url></Content>
				<string name="Name">RightSlash</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBXEEE267D48BB2435AA5D3F1647A2AC779">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>39.4217415</X>
					<Y>6.03741741</Y>
					<Z>-69.0843582</Z>
					<R00>-0.994952142</R00>
					<R01>0.0174008403</R01>
					<R02>-0.0988305509</R02>
					<R10>1.86264515e-009</R10>
					<R11>0.98485142</R11>
					<R12>0.173400238</R12>
					<R20>0.100350723</R20>
					<R21>0.172524944</R21>
					<R22>-0.979879975</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>39.6490517</X>
					<Y>5.63859701</Y>
					<Z>-66.8306351</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>