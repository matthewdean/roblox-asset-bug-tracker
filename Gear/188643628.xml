<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX7855CE505C51459EB4A03CB28B7796FB">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.899999976</Y>
				<Z>0.25</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">KillerWhaleLauncher</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset?id=187501002</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX9E4A0F2BD559459D9D5A9764738AAC97">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>40.3000031</X>
					<Y>5.69999981</Y>
					<Z>-66.3000031</Z>
					<R00>-0.258819044</R00>
					<R01>0</R01>
					<R02>0.965925813</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>-0.965925813</R20>
					<R21>0</R21>
					<R22>-0.258819044</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>2</Y>
					<Z>2.5</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX43A24824C8CF47979A3CA9815B8F9891">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset?id=187011066</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=187011167</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX0CC921108EF044C88F775A407536DC65">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Zoom</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=187771720</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXCA67843A13EA409CA648935B7DB2CC99">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Reload</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=187771708</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX2C3BCADABF684C5785B3CF246A8CD5A0">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Fire</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=187771701</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX2D75FDF10F044287AD5F08B093C88E77">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
ContentProvider = game:GetService(&quot;ContentProvider&quot;)
RunService = game:GetService(&quot;RunService&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Animations = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

Equipped = false

ClientControl.OnClientInvoke = (function(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and Equipped and Humanoid then
&#9;&#9;SetAnimation(&quot;PlayAnimation&quot;, Value)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;SetAnimation(&quot;StopAnimation&quot;, Value)
&#9;elseif Mode == &quot;Preload&quot; and Value then
&#9;&#9;ContentProvider:Preload(Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;elseif Mode == &quot;DisableJump&quot; then
&#9;&#9;DisableJump(Value)
&#9;elseif Mode == &quot;SetMouseIcon&quot; and Value then
&#9;&#9;PlayerMouse.Icon = Value
&#9;elseif Mode == &quot;SetLocalTransparencyModifier&quot; and Value then
&#9;&#9;pcall(function()
&#9;&#9;&#9;Value.Object.LocalTransparencyModifier = Value.Transparency
&#9;&#9;end)
&#9;elseif Mode == &quot;GetCamera&quot; and Value then
&#9;&#9;local PropertyValue = nil
&#9;&#9;if Value.Property then
&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;PropertyValue = Camera[Value.Property]
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;&#9;return PropertyValue
&#9;elseif Mode == &quot;SetCamera&quot; and Value then
&#9;&#9;if Value.Property and Value.Value then
&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;Camera[Value.Property] = Value.Value
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;elseif Mode == &quot;SetMouseSensitivity&quot; and Value then
&#9;&#9;if Value.Sensitivity == 1 then
&#9;&#9;&#9;if MouseSensivityConnection then
&#9;&#9;&#9;&#9;MouseSensivityConnection:disconnect()
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;SetMouseSensitivity(Value.Sensitivity)
&#9;&#9;end
&#9;end
end)

function InvokeServer(Mode, Value)
&#9;pcall(function()
&#9;&#9;local ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;&#9;return ServerReturn
&#9;end)
end

function SetAnimation(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and Equipped and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function DisableJump(Boolean)
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;if Boolean then
&#9;&#9;PreventJump = Humanoid.Changed:connect(function(Property)
&#9;&#9;&#9;if Property ==  &quot;Jump&quot; then
&#9;&#9;&#9;&#9;Humanoid.Jump = false
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

function SetMouseSensitivity(Sensitivity)

&#9;if MouseSensivityConnection then
&#9;&#9;MouseSensivityConnection:disconnect()
&#9;end&#9;
&#9;
&#9;local function EulerAnglesYX(cframe)
&#9;&#9;local X, Y, Z, R00, R01, R02, R10, R11, R12, R20, R21, R22 = cframe:components(cframe)
&#9;&#9;return -math.asin(R12), ((math.abs(R12) &gt; 0.99999 and -math.atan2(-R20, R00)) or -math.atan2(-R02, R22))
&#9;end
&#9;
&#9;local DirectionX, DirectionY = EulerAnglesYX(Camera.CoordinateFrame)
&#9;
&#9;local function UpdateSensitivity()
&#9;&#9;local CFrameX, CFrameY = EulerAnglesYX(Camera.CoordinateFrame)
&#9;&#9;DirectionX = (DirectionX * (1 - Sensitivity) + (CFrameX + (math.pi * 2) * math.floor((DirectionX - CFrameX) / (math.pi * 2) + 0.5)) * Sensitivity)
&#9;&#9;DirectionY = (DirectionY * (1 - Sensitivity) + (CFrameY + (math.pi * 2) * math.floor((DirectionY - CFrameY) / (math.pi * 2) + 0.5)) * Sensitivity)
&#9;&#9;Camera.CoordinateFrame = CFrame.Angles(0, DirectionY, 0) * CFrame.Angles(DirectionX, 0, 0) * CFrame.new(0, 0, 0.5) + Camera.Focus.p
&#9;end
&#9;
&#9;MouseSensivityConnection = RunService.RenderStepped:connect(UpdateSensitivity)
&#9;
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Equipped = true
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
&#9;Mouse.WheelForward:connect(function()
&#9;&#9;InvokeServer(&quot;WheelMoved&quot;, {Forward = true})
&#9;end)
&#9;Mouse.WheelBackward:connect(function()
&#9;&#9;InvokeServer(&quot;WheelMoved&quot;, {Forward = false})
&#9;end)
end

function Unequipped()
&#9;Equipped = false
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs({PreventJump, MouseSensivityConnection}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;PlayerMouse.Icon = &quot;&quot;
&#9;Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXCBA3330F440C4DC9A8EFA8FCF56FA9B9">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent

Players = game:GetService(&quot;Players&quot;)

Player = Players.LocalPlayer

Icons = {
&#9;Normal = &quot;rbxasset://textures/GunCursor.png&quot;,
&#9;Reloading = &quot;rbxasset://textures/GunWaitCursor.png&quot;
}

ToolEquipped = false

function UpdateIcon()
&#9;if Mouse and ToolEquipped then
&#9;&#9;Mouse.Icon = (((Tool.Enabled and (Mouse.Icon == Icons.Reloading or Mouse.Icon == &quot;&quot;)) and Icons.Normal) or ((not Tool.Enabled and (Mouse.Icon == Icons.Normal or Mouse.Icon == &quot;&quot;)) and Icons.Reloading) or Mouse.Icon)
&#9;end
end

function Equipped()
&#9;ToolEquipped = true
&#9;Mouse = Player:GetMouse()
&#9;MouseChanged = Mouse.Changed:connect(Changed)
&#9;UpdateIcon()
end

function Unequipped()
&#9;ToolEquipped = false
&#9;Mouse.Icon = &quot;&quot;
&#9;if MouseChanged then
&#9;&#9;MouseChanged:disconnect()
&#9;end
end

function Changed(Property)
&#9;if Property == &quot;Enabled&quot; or (Property == &quot;Icon&quot; and Mouse.Icon == &quot;&quot;) then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Changed:connect(Changed)

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBXDCB5CD09840D4C33B73004CAF8A8E8A6">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

Remover = script:WaitForChild(&quot;Remover&quot;)

Objects = require(Tool:WaitForChild(&quot;Objects&quot;))

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

KillerWhale = BasePart:Clone()
KillerWhale.Name = &quot;KillerWhale&quot;
KillerWhale.Size = Vector3.new(1, 1, 2.25)
KillerWhaleMesh = Instance.new(&quot;SpecialMesh&quot;)
KillerWhaleMesh.MeshType = Enum.MeshType.FileMesh
KillerWhaleMesh.MeshId = &quot;http://www.roblox.com/asset?id=187011088&quot;
KillerWhaleMesh.TextureId = &quot;http://www.roblox.com/asset?id=187011121&quot;
KillerWhaleMesh.Scale = Vector3.new(0.5, 0.5, 0.5)
KillerWhaleMesh.VertexColor = Vector3.new(1, 1, 1)
KillerWhaleMesh.Parent = KillerWhale

MouseIcon = &quot;http://www.roblox.com/asset?id=187746799&quot;

Grips = {
&#9;Equipped = CFrame.new(0, -0.899999976, 0.25, 1, 0, 0, 0, 1, 0, 0, 0, 1),
&#9;Zoom = CFrame.new(0, -0.899999976, 0.25, 0.73201704, 0.0497210845, 0.679469526, -0.208041042, 0.966009676, 0.153441057, -0.648744941, -0.253679007, 0.717479587),
}

Animations = {
&#9;Zoom = {Animation = Tool:WaitForChild(&quot;Zoom&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
&#9;ZoomFire = {Animation = Tool:WaitForChild(&quot;ZoomFire&quot;), FadeTime = nil, Weight = nil, Speed = 2, Duration = 1},
&#9;Fire = {Animation = Tool:WaitForChild(&quot;Fire&quot;), FadeTime = nil, Weight = nil, Speed = 2, Duration = 1},
}

Sounds = {
&#9;Zoom = Handle:WaitForChild(&quot;Zoom&quot;),
&#9;Reload = Handle:WaitForChild(&quot;Reload&quot;),
&#9;Fire = Handle:WaitForChild(&quot;Fire&quot;)
}

ToolEquipped = false

ReloadTime = 10

SpreadCoolDownTime = 0.125
ZoomSpread = 0

Gravity = 196.20

Zoomed = false

DisplayModel = Tool:FindFirstChild(&quot;DisplayModel&quot;)
if DisplayModel then
&#9;DisplayModel:Destroy()
end

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Tool.Enabled = true

ServerControl.OnServerInvoke = (function(player, Mode, Value)
&#9;if player == Player then
&#9;&#9;if Mode == &quot;MouseClick&quot; then
&#9;&#9;&#9;Activated()
&#9;&#9;elseif Mode == &quot;KeyPress&quot; then
&#9;&#9;&#9;local Key = Value.Key
&#9;&#9;&#9;local Down = Value.Down
&#9;&#9;&#9;if (Key == &quot;q&quot; or Key == &quot;z&quot;) and Down then
&#9;&#9;&#9;&#9;Zoomed = not Zoomed
&#9;&#9;&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if Zoomed then
&#9;&#9;&#9;&#9;&#9;Player.CameraMode = Enum.CameraMode.LockFirstPerson
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;SetLocalTransparencyModifier&quot;, {Object = Handle, Transparency = 1})
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;SetMouseSensitivity&quot;, {Sensitivity = 0.1})
&#9;&#9;&#9;&#9;&#9;for i, v in pairs({ZoomGui, CrosshairGui}) do
&#9;&#9;&#9;&#9;&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;v:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.Zoom)
&#9;&#9;&#9;&#9;&#9;Tool.Grip = Grips.Zoom
&#9;&#9;&#9;&#9;&#9;Zoomed = true
&#9;&#9;&#9;&#9;&#9;ZoomGui = Objects.CreateZoomGui()
&#9;&#9;&#9;&#9;&#9;ZoomGui.Parent = PlayerGui
&#9;&#9;&#9;&#9;&#9;local CrosshairGuiTable = Objects.CreateCrosshairGui()
&#9;&#9;&#9;&#9;&#9;CrosshairGui = CrosshairGuiTable.Gui
&#9;&#9;&#9;&#9;&#9;Spread = CrosshairGuiTable.Spread
&#9;&#9;&#9;&#9;&#9;CrosshairGui.Parent = PlayerGui
&#9;&#9;&#9;&#9;&#9;Spread:InvokeServer(&quot;SetSpread&quot;, ((Tool.Enabled and {Spread = ZoomSpread, Speed = 0.5}) or (Tool.Enabled and {Spread = SpreadCoolDownTime, Speed = 0})))
&#9;&#9;&#9;&#9;&#9;CrosshairGui.ReloadingLabel.Visible = ((not Tool.Enabled and true) or false)
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;SetMouseIcon&quot;, MouseIcon)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Player.CameraMode = Enum.CameraMode.Classic
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;SetCamera&quot;, {Property = &quot;FieldOfView&quot;, Value = 70})
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;SetLocalTransparencyModifier&quot;, {Object = Handle, Transparency = 0})
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;SetMouseSensitivity&quot;, {Sensitivity = 1})
&#9;&#9;&#9;&#9;&#9;for i, v in pairs({ZoomGui, CrosshairGui}) do
&#9;&#9;&#9;&#9;&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;v:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;SetMouseIcon&quot;, &quot;&quot;)
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, Animations.Zoom)
&#9;&#9;&#9;&#9;&#9;Tool.Grip = Grips.Equipped
&#9;&#9;&#9;&#9;&#9;Zoomed = false
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;elseif Mode == &quot;WheelMoved&quot; and Zoomed then
&#9;&#9;&#9;InvokeClient(&quot;PlaySound&quot;, Sounds.Zoom)
&#9;&#9;&#9;local FieldOfView = InvokeClient(&quot;GetCamera&quot;, {Property = &quot;FieldOfView&quot;})
&#9;&#9;&#9;local MinimumZoom = 70
&#9;&#9;&#9;local MaximumZoom = 1
&#9;&#9;&#9;local ChangeInterval = 2.5
&#9;&#9;&#9;if Value.Forward then
&#9;&#9;&#9;&#9;if FieldOfView and FieldOfView &gt; MaximumZoom then
&#9;&#9;&#9;&#9;&#9;local NewFieldOfView = (((FieldOfView - ChangeInterval) &lt; MaximumZoom and MaximumZoom) or (FieldOfView - ChangeInterval))
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;SetCamera&quot;, {Property = &quot;FieldOfView&quot;, Value = NewFieldOfView})
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;SetMouseSensitivity&quot;, {Sensitivity = ((GetPercentage(MaximumZoom, MinimumZoom, NewFieldOfView) + 1) / 1000)})
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;if FieldOfView and FieldOfView &lt; MinimumZoom then
&#9;&#9;&#9;&#9;&#9;local NewFieldOfView = (((FieldOfView + ChangeInterval) &gt; MinimumZoom and MinimumZoom) or (FieldOfView + ChangeInterval))
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;SetCamera&quot;, {Property = &quot;FieldOfView&quot;, Value = NewFieldOfView})
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;SetMouseSensitivity&quot;, {Sensitivity = ((GetPercentage(MaximumZoom, MinimumZoom, NewFieldOfView) + 1) / 1000)})
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end)

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

function GetPercentage(Start, End, Number)
&#9;return (((Number - Start) / (End - Start)) * 100)
end

function RayCast(Position, Direction, MaxDistance, IgnoreList)
&#9;return game:GetService(&quot;Workspace&quot;):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList) 
end

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function CreateKillerWhale()
&#9;
&#9;local MaxDistance = 500
&#9;local HandleCFrame = Handle.CFrame&#9;
&#9;
&#9;local KillerWhaleClone = KillerWhale:Clone()
&#9;KillerWhaleClone.CanCollide = false
&#9;&#9;
&#9;local Destination = InvokeClient(&quot;MousePosition&quot;)&#9;
&#9;local SpawnPosition = HandleCFrame + HandleCFrame.lookVector * ((Handle.Size.Z / 2) + (KillerWhale.Size.Z / 2))&#9;
&#9;local Distance = (HandleCFrame.p - Destination).magnitude
&#9;
&#9;if Distance &gt;= MaxDistance then
&#9;&#9;Destination = (SpawnPosition + CFrame.new(SpawnPosition.p, Destination).lookVector * MaxDistance).p
&#9;end
&#9;
&#9;Distance = (HandleCFrame.p - Destination).magnitude
&#9;
&#9;local MidPoint = HandleCFrame + CFrame.new(SpawnPosition.p, Destination).lookVector * (Distance / 2)
&#9;MidPoint = MidPoint.p + Vector3.new(0, (Distance / 2), 0)

&#9;local Direction = CFrame.new(SpawnPosition.p, MidPoint)
&#9;
&#9;local Mass = (KillerWhaleClone:GetMass() * Gravity * 10000)
&#9;local BodyPosition = Instance.new(&quot;BodyPosition&quot;)
&#9;BodyPosition.maxForce = Vector3.new(Mass, Mass, Mass)
&#9;BodyPosition.Parent = KillerWhaleClone
&#9;BodyPosition.position = SpawnPosition.p
&#9;
&#9;local BodyGyro = Instance.new(&quot;BodyGyro&quot;)
&#9;BodyGyro.maxTorque = Vector3.new(math.huge, math.huge, math.huge)
&#9;BodyGyro.Parent = KillerWhaleClone
&#9;BodyGyro.cframe = Direction
&#9;
&#9;local MaximumSize = Vector3.new(10, 10, 20)
&#9;
&#9;Debris:AddItem(KillerWhaleClone, 10)
&#9;KillerWhaleClone.Parent = game:GetService(&quot;Workspace&quot;)
&#9;KillerWhaleClone.CFrame = SpawnPosition
&#9;KillerWhaleClone.CFrame = Direction
&#9;
&#9;Delay(0.25, function()
&#9;&#9;if KillerWhaleClone and KillerWhaleClone.Parent then
&#9;&#9;&#9;KillerWhaleClone.CanCollide = true
&#9;&#9;end
&#9;end)
&#9;
&#9;local Touched = false

&#9;local CurrentPlayer = Player
&#9;local CurrentCharacter = Character
&#9;
&#9;local KillerWhaleHit = KillerWhaleClone.Touched:connect(function(Hit)
&#9;&#9;if not Hit or not Hit.Parent or KillerWhaleClone.Velocity.Y &gt;= 10 then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;local character = Hit.Parent
&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;if character == CurrentCharacter then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;if humanoid and humanoid.Health &gt; 0 then
&#9;&#9;&#9;for i, v in pairs(character:GetChildren()) do
&#9;&#9;&#9;&#9;if v:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;&#9;&#9;v.Velocity = Vector3.new(0, 0, 0)
&#9;&#9;&#9;&#9;&#9;v.RotVelocity = Vector3.new(0, 0, 0)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;TagHumanoid(humanoid, CurrentPlayer)
&#9;&#9;&#9;humanoid:TakeDamage(10)
&#9;&#9;end
&#9;end)
&#9;
&#9;Spawn(function()
&#9;&#9;for i = 1, 10 do
&#9;&#9;&#9;local WhaleCFrame = KillerWhaleClone.CFrame
&#9;&#9;&#9;KillerWhaleClone.Size = ((MaximumSize / 10) * i)
&#9;&#9;&#9;KillerWhaleClone.Mesh.Scale = Vector3.new((KillerWhaleClone.Size.X / 2), (KillerWhaleClone.Size.Y / 2), (KillerWhaleClone.Size.Z / 4))
&#9;&#9;&#9;KillerWhaleClone.CFrame = WhaleCFrame
&#9;&#9;&#9;wait(0.01)
&#9;&#9;end
&#9;end)
&#9;
&#9;Spawn(function()
&#9;&#9;local AttemptTick = tick()
&#9;&#9;while KillerWhaleClone and KillerWhaleClone.Parent and BodyPosition and BodyPosition.Parent and BodyGyro and BodyGyro.Parent and (KillerWhaleClone.Position - MidPoint).magnitude &gt; 10 and (tick() - AttemptTick) &lt; 5 do
&#9;&#9;&#9;Direction = CFrame.new(KillerWhaleClone.Position, MidPoint)
&#9;&#9;&#9;BodyGyro.cframe = Direction
&#9;&#9;&#9;BodyPosition.position = BodyPosition.position + Direction.lookVector * 5
&#9;&#9;&#9;wait()
&#9;&#9;end
&#9;&#9;if KillerWhaleClone and KillerWhaleClone.Parent and BodyPosition and BodyPosition.Parent and BodyGyro and BodyGyro.Parent then
&#9;&#9;&#9;local AttemptTick = tick()
&#9;&#9;&#9;while KillerWhaleClone and KillerWhaleClone.Parent and BodyPosition and BodyPosition.Parent and BodyGyro and BodyGyro.Parent and (KillerWhaleClone.Position - Destination).magnitude &gt; 10 and (tick() - AttemptTick) &lt; 5 do
&#9;&#9;&#9;&#9;Direction = CFrame.new(KillerWhaleClone.Position, Destination)
&#9;&#9;&#9;&#9;BodyGyro.cframe = Direction * CFrame.Angles((math.pi / 4), 0, 0)
&#9;&#9;&#9;&#9;BodyPosition.position = BodyPosition.position + Direction.lookVector * 5
&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;end
&#9;&#9;&#9;local RayHit, RayPos = RayCast(KillerWhaleClone.Position, Vector3.new(0, -1, 0), KillerWhaleClone.Size.Y, {CurrentCharacter, KillerWhaleClone})
&#9;&#9;&#9;if not RayHit then
&#9;&#9;&#9;&#9;if BodyPosition and BodyPosition.Parent then
&#9;&#9;&#9;&#9;&#9;BodyPosition.maxForce = Vector3.new(BodyPosition.maxForce.X, 0, BodyPosition.maxForce.Y)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;Delay(2, function()
&#9;&#9;&#9;&#9;if KillerWhaleHit then
&#9;&#9;&#9;&#9;&#9;KillerWhaleHit:disconnect()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;end)
end

function Activated()
&#9;
&#9;if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;
&#9;Tool.Enabled = false
&#9;
&#9;local CurrentlyEquipped = true
&#9;local ToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;CurrentlyEquipped = false
&#9;end)
&#9;Sounds.Fire:Play()
&#9;
&#9;local Animation = ((Zoomed and Animations.ZoomFire) or Animations.Fire)
&#9;InvokeClient(&quot;PlayAnimation&quot;, Animation)
&#9;
&#9;if Zoomed and CrosshairGui and Spread then
&#9;&#9;CrosshairGui.ReloadingLabel.Visible = true
&#9;&#9;Spread:InvokeServer(&quot;SetSpread&quot;, {Spread = SpreadCoolDownTime, Speed = 0.5})
&#9;end
&#9;
&#9;Spawn(function()
&#9;&#9;CreateKillerWhale()
&#9;end)
&#9;
&#9;Spawn(function()
&#9;&#9;wait(Animation.Duration)
&#9;&#9;if CurrentlyEquipped then
&#9;&#9;&#9;if ToolUnequipped then
&#9;&#9;&#9;&#9;ToolUnequipped:disconnect()
&#9;&#9;&#9;end
&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, Animation)
&#9;&#9;end
&#9;end)
&#9;
&#9;wait(ReloadTime)
&#9;
&#9;if ToolEquipped then
&#9;&#9;Sounds.Reload:Play()
&#9;end
&#9;
&#9;wait(0.25)
&#9;
&#9;if Zoomed and CrosshairGui and Spread then
&#9;&#9;CrosshairGui.ReloadingLabel.Visible = false
&#9;&#9;Spread:InvokeServer(&quot;SetSpread&quot;, {Spread = ZoomSpread, Speed = 0.25})
&#9;end
&#9;
&#9;Tool.Enabled = true
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and PlayerGui and PlayerGui.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped()
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;PlayerGui = Player:FindFirstChild(&quot;PlayerGui&quot;)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;Tool.Grip = Grips.Equipped
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.Animation then
&#9;&#9;&#9;InvokeClient(&quot;Preload&quot;, v.Animation.AnimationId)
&#9;&#9;end
&#9;end
&#9;local RemoverScript = game:GetService(&quot;Workspace&quot;):FindFirstChild(Player.Name .. Remover.Name)
&#9;if RemoverScript then
&#9;&#9;RemoverScript:Destroy()
&#9;end
&#9;local RemoverClone = Remover:Clone()
&#9;RemoverClone.Name = (Player.Name .. Remover.Name)
&#9;local CreatorValue = Instance.new(&quot;ObjectValue&quot;)
&#9;CreatorValue.Name = &quot;Creator&quot;
&#9;CreatorValue.Value = Player
&#9;CreatorValue.Parent = RemoverClone
&#9;local ToolValue = Instance.new(&quot;ObjectValue&quot;)
&#9;ToolValue.Name = &quot;Tool&quot;
&#9;ToolValue.Value = Tool
&#9;ToolValue.Parent = RemoverClone
&#9;RemoverClone.Disabled = false
&#9;RemoverClone.Parent = game:GetService(&quot;Workspace&quot;)
&#9;ToolEquipped = true
end

function Unequipped()
&#9;Zoomed = false
&#9;InvokeClient(&quot;SetCamera&quot;, {Property = &quot;FieldOfView&quot;, Value = 70})
&#9;InvokeClient(&quot;SetMouseSensitivity&quot;, {Sensitivity = 1})
&#9;if Player and Player.Parent then
&#9;&#9;Player.CameraMode = Enum.CameraMode.Classic
&#9;end
&#9;for i, v in pairs({ZoomGui, CrosshairGui}) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs({ToolUnequipped}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(Animations) do
&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;end
&#9;InvokeClient(&quot;SetLocalTransparencyModifier&quot;, {Object = Handle, Transparency = 0})
&#9;ToolEquipped = false
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
			<Item class="Script" referent="RBXD82C8CCA4DAF4B2F808BE28732859589">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Remover</string>
					<ProtectedString name="Source">--Made by Luckymaxer

Model = script

Debris = game:GetService(&quot;Debris&quot;)

FixCamera = script:FindFirstChild(&quot;FixCamera&quot;)

Creator = Model:FindFirstChild(&quot;Creator&quot;)
Tool = Model:FindFirstChild(&quot;Tool&quot;)

function DestroyModel()
&#9;Debris:AddItem(Model, 2)
&#9;if Creator and Creator.Parent then
&#9;&#9;local Backpack = Creator:FindFirstChild(&quot;Backpack&quot;)
&#9;&#9;local FixCameraClone = FixCamera:Clone()
&#9;&#9;FixCameraClone.Disabled = false
&#9;&#9;FixCameraClone.Parent = ((Backpack and Backpack) or Character)
&#9;end
end

if not FixCamera or not Creator or not Creator.Value or not Creator.Value:IsA(&quot;Player&quot;) or not Creator.Value.Parent or not Tool or not Tool.Value or not Tool.Value.Parent then
&#9;DestroyModel()
&#9;return
end

Creator = Creator.Value
Tool = Tool.Value

Character = Creator.Character
if not Character then
&#9;DestroyModel()
&#9;return
end

Creator.Changed:connect(function(Property)
&#9;if Property == &quot;Parent&quot; and not Creator.Parent then
&#9;&#9;DestroyModel()
&#9;end
end)

Character.Changed:connect(function(Property)
&#9;if Property == &quot;Parent&quot; and not Character.Parent then
&#9;&#9;DestroyModel()
&#9;end
end)

Tool.Changed:connect(function(Property)
&#9;if Property == &quot;Parent&quot; and Tool.Parent ~= Character then
&#9;&#9;DestroyModel()
&#9;end
end)</ProtectedString>
				</Properties>
				<Item class="LocalScript" referent="RBX24EE3E9A08574502A97F5ED60EC56608">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">FixCamera</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera
Player = Players.LocalPlayer

PlayerMouse = Player:GetMouse()

Camera.FieldOfView = 70
Player.CameraMode = Enum.CameraMode.Classic
PlayerMouse.Icon = &quot;&quot;

Debris:AddItem(script, 2)</ProtectedString>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBX5BAA4C89E32A4790945F5757564142AD">
			<Properties>
				<string name="Name">Objects</string>
				<ProtectedString name="Source">--Made by Luckymaxer

ScreenAdjust = script:WaitForChild(&quot;ScreenAdjust&quot;)

Objects = {}

function Objects.CreateZoomGui()
&#9;local ZoomGui = Instance.new(&quot;ScreenGui&quot;)
&#9;ZoomGui.Name = &quot;ZoomGui&quot;
&#9;local Frame1 = Instance.new(&quot;Frame&quot;)
&#9;Frame1.Name = &quot;Frame1&quot;
&#9;Frame1.BackgroundColor3 = Color3.new(0, 0, 0)
&#9;Frame1.BorderColor3 = Color3.new(0, 0, 0)
&#9;Frame1.Position = UDim2.new(0, -10, 0, -10)
&#9;Frame1.Size = UDim2.new(0, 248, 1, 20)
&#9;Frame1.ZIndex = 1
&#9;Frame1.Parent = ZoomGui
&#9;local Frame2 = Instance.new(&quot;Frame&quot;)
&#9;Frame2.Name = &quot;Frame2&quot;
&#9;Frame2.BackgroundColor3 = Color3.new(0, 0, 0)
&#9;Frame2.BorderColor3 = Color3.new(0, 0, 0)
&#9;Frame2.Position = UDim2.new(1, -238, 0, -10)
&#9;Frame2.Size = UDim2.new(0, 248, 1, 20)
&#9;Frame2.ZIndex = 1
&#9;Frame2.Parent = ZoomGui
&#9;local Scope = Instance.new(&quot;ImageLabel&quot;)
&#9;Scope.Name = &quot;Scope&quot;
&#9;Scope.BackgroundColor3 = Color3.new(0, 0, 0)
&#9;Scope.BorderColor3 = Color3.new(0, 0, 0)
&#9;Scope.BackgroundTransparency = 1
&#9;Scope.Image = &quot;http://www.roblox.com/asset/?id=72002022&quot;
&#9;Scope.ImageColor3 = Color3.new(255, 255, 255)
&#9;Scope.Position = UDim2.new(0.5, -330, 0, -10)
&#9;Scope.Size = UDim2.new(0, 659, 0, 659)
&#9;Scope.ZIndex = 1
&#9;Scope.Parent = ZoomGui
&#9;local ScreenAdjustScript = ScreenAdjust:Clone()
&#9;ScreenAdjustScript.Disabled = false
&#9;ScreenAdjustScript.Parent = ZoomGui
&#9;return ZoomGui
end

function Objects.CreateCrosshairGui()
&#9;local CrosshairGui = Instance.new(&quot;ScreenGui&quot;)
&#9;CrosshairGui.Name = &quot;CrosshairGui&quot;
&#9;local CrosshairFrame = Instance.new(&quot;Frame&quot;)
&#9;CrosshairFrame.Name = &quot;CrosshairFrame&quot;
&#9;CrosshairFrame.BackgroundColor3 = Color3.new(0, 255, 0)
&#9;CrosshairFrame.BackgroundTransparency = 1
&#9;CrosshairFrame.Position = UDim2.new(0.5, -32, 0.5, -32)
&#9;CrosshairFrame.Size = UDim2.new(0, 64, 0, 64)
&#9;CrosshairFrame.BorderSizePixel = 0
&#9;CrosshairFrame.ZIndex = 1
&#9;CrosshairFrame.Parent = CrosshairGui
&#9;local TopFrame = Instance.new(&quot;Frame&quot;)
&#9;TopFrame.Name = &quot;TopFrame&quot;
&#9;TopFrame.BackgroundColor3 = Color3.new(0, 0, 0)
&#9;TopFrame.BorderColor3 = Color3.new(0, 255, 0)
&#9;TopFrame.BorderSizePixel = 1
&#9;TopFrame.Position = UDim2.new(0.5, -1, 0, -15)
&#9;TopFrame.Size = UDim2.new(0, 2, 0, 15)
&#9;TopFrame.ZIndex = 1
&#9;TopFrame.Parent = CrosshairFrame
&#9;local BottomFrame = Instance.new(&quot;Frame&quot;)
&#9;BottomFrame.Name = &quot;BottomFrame&quot;
&#9;BottomFrame.BackgroundColor3 = Color3.new(0, 0, 0)
&#9;BottomFrame.BorderColor3 = Color3.new(0, 255, 0)
&#9;BottomFrame.BorderSizePixel = 1
&#9;BottomFrame.Position = UDim2.new(0.5, -1, 1, 0)
&#9;BottomFrame.Size = UDim2.new(0, 2, 0, 15)
&#9;BottomFrame.ZIndex = 1
&#9;BottomFrame.Parent = CrosshairFrame
&#9;local LeftFrame = Instance.new(&quot;Frame&quot;)
&#9;LeftFrame.Name = &quot;LeftFrame&quot;
&#9;LeftFrame.BackgroundColor3 = Color3.new(0, 0, 0)
&#9;LeftFrame.BorderColor3 = Color3.new(0, 255, 0)
&#9;LeftFrame.BorderSizePixel = 1
&#9;LeftFrame.Position = UDim2.new(0, -15, 0.5, -1)
&#9;LeftFrame.Size = UDim2.new(0, 15, 0, 2)
&#9;LeftFrame.ZIndex = 1
&#9;LeftFrame.Parent = CrosshairFrame
&#9;local RightFrame = Instance.new(&quot;Frame&quot;)
&#9;RightFrame.Name = &quot;RightFrame&quot;
&#9;RightFrame.BackgroundColor3 = Color3.new(0, 0, 0)
&#9;RightFrame.BorderColor3 = Color3.new(0, 255, 0)
&#9;RightFrame.BorderSizePixel = 1
&#9;RightFrame.Position = UDim2.new(1, -0, 0.5, -1)
&#9;RightFrame.Size = UDim2.new(0, 15, 0, 2)
&#9;RightFrame.ZIndex = 1
&#9;RightFrame.Parent = CrosshairFrame
&#9;local ReloadingLabel = Instance.new(&quot;TextLabel&quot;)
&#9;ReloadingLabel.BackgroundTransparency = 1
&#9;ReloadingLabel.Name = &quot;ReloadingLabel&quot;
&#9;ReloadingLabel.Position = UDim2.new(0.5, 20, 0.5, -20)
&#9;ReloadingLabel.Size = UDim2.new(0, 0, 0)
&#9;ReloadingLabel.Font = Enum.Font.ArialBold
&#9;ReloadingLabel.FontSize = Enum.FontSize.Size18
&#9;ReloadingLabel.TextColor3 = Color3.new(0, 0, 0)
&#9;ReloadingLabel.TextStrokeColor3 = Color3.new(0, 255, 0)
&#9;ReloadingLabel.TextStrokeTransparency = 0
&#9;ReloadingLabel.TextTransparency = 0
&#9;ReloadingLabel.Text = &quot;Reloading&quot;
&#9;ReloadingLabel.TextXAlignment = Enum.TextXAlignment.Left
&#9;ReloadingLabel.TextYAlignment = Enum.TextYAlignment.Bottom
&#9;ReloadingLabel.ZIndex = 1
&#9;ReloadingLabel.Visible = false
&#9;ReloadingLabel.Parent = CrosshairGui
&#9;local Spread = 0.1
&#9;local SpreadChanged = Instance.new(&quot;RemoteFunction&quot;)
&#9;SpreadChanged.OnServerInvoke = (function(Player, Mode, Value)
&#9;&#9;if Mode == &quot;SetSpread&quot; and Value then
&#9;&#9;&#9;Spread = Value.Spread
&#9;&#9;&#9;local Speed = Value.Speed
&#9;&#9;&#9;CrosshairFrame:TweenPosition(UDim2.new(0.5, ((1 - (Spread * CrosshairGui.AbsoluteSize.Y)) / 2), 0.5, (1 - ((Spread * CrosshairGui.AbsoluteSize.Y)) / 2)), Enum.EasingDirection.InOut, Enum.EasingStyle.Quad, Speed, true, (function() end))
&#9;&#9;&#9;CrosshairFrame:TweenSize(UDim2.new(0, (Spread * CrosshairGui.AbsoluteSize.Y), 0, (Spread * CrosshairGui.AbsoluteSize.Y)), Enum.EasingDirection.InOut, Enum.EasingStyle.Quad, Speed, true, (function() end))
&#9;&#9;end
&#9;end)
&#9;return {Gui = CrosshairGui, Spread = SpreadChanged}
end

return Objects</ProtectedString>
			</Properties>
			<Item class="LocalScript" referent="RBX4E03B3A49CB54B1CBF7DFBD5C1A8A560">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ScreenAdjust</string>
					<ProtectedString name="Source">--Made by Luckymaxer

wait()

ZoomGui = script.Parent
Scope = ZoomGui:WaitForChild(&quot;Scope&quot;)
Frame1 = ZoomGui:WaitForChild(&quot;Frame1&quot;)
Frame2 = ZoomGui:WaitForChild(&quot;Frame2&quot;)

function AdjustScreenSize()
&#9;Scope.Position = UDim2.new(0.5, (-10 - (ZoomGui.AbsoluteSize.Y / 2)), 0, -10)
&#9;Scope.Size = UDim2.new(0, (20 + ZoomGui.AbsoluteSize.Y), 0, (30 + ZoomGui.AbsoluteSize.Y), 1, 20)
&#9;Frame1.Size = UDim2.new(0, (30 + ((ZoomGui.AbsoluteSize.X - ZoomGui.AbsoluteSize.Y) / 2)), 1, 30)
&#9;Frame2.Size = UDim2.new(0, (30 + ((ZoomGui.AbsoluteSize.X - ZoomGui.AbsoluteSize.Y) / 2)), 1, 30)
&#9;Frame2.Position = UDim2.new(1, (-10 - ((ZoomGui.AbsoluteSize.X - ZoomGui.AbsoluteSize.Y) / 2)), 0, -10)
end

ZoomGui.Changed:connect(function()
&#9;AdjustScreenSize()
end)

AdjustScreenSize()</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBX714E20A6E39A43FA88ABF73430CDBBD5">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=187772539</url></Content>
				<string name="Name">Fire</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX496558E31B1F4BD08D994D6C47B620E9">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=187633322</url></Content>
				<string name="Name">Zoom</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXC3E25ADB5F6A4CB5AD8D6F3A97106020">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=187774830</url></Content>
				<string name="Name">ZoomFire</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX4C47DBFAE7014E7397700C3A5984BF83">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>38.0996704</X>
					<Y>6.30036449</Y>
					<Z>-67.3394012</Z>
					<R00>-0.490245104</R00>
					<R01>0.14911519</R01>
					<R02>-0.85873425</R02>
					<R10>-7.45058149e-009</R10>
					<R11>0.985256374</R11>
					<R12>0.171085134</R12>
					<R20>0.871584713</R20>
					<R21>0.0838736594</R21>
					<R22>-0.483017027</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>39.8171387</X>
					<Y>5.95819426</Y>
					<Z>-66.3733673</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>