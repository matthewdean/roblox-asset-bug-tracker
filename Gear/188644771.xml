<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXC0218E0E191242888A6E41D3B2B14535">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0.125</Y>
				<Z>1.25</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>-0</R02>
				<R10>0</R10>
				<R11>0</R11>
				<R12>1</R12>
				<R20>0</R20>
				<R21>-1</R21>
				<R22>0</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">BoneKnightAxe</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset?id=187684038</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX0854BA3B7EB44F3D9E1F9FBEB2E221A2">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>22.2212811</X>
					<Y>4.24852753</Y>
					<Z>17.1441193</Z>
					<R00>-0.511467338</R00>
					<R01>-0.603556991</R01>
					<R02>-0.611653507</R02>
					<R10>-0.015668653</R10>
					<R11>0.71823442</R11>
					<R12>-0.695624709</R12>
					<R20>0.859159768</R20>
					<R21>-0.346205503</R21>
					<R22>-0.376810312</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.25</X>
					<Y>1.24000001</Y>
					<Z>4.25</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX28284B0E6ED24AC1B542A85A7A6AC2D0">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset?id=187684006</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>3</X>
						<Y>3</Y>
						<Z>3</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=187684028</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBXE384700DC6EB4A8BBC95123F9BB32AEB">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=187918653</url></Content>
				<string name="Name">RightSwing</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX5EFEE8E81A554EDE8C39DFCEDFDA5E70">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=187919240</url></Content>
				<string name="Name">LeftSwing</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX56E48671C46247A8A44F0B287968021A">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

Animations = {
&#9;LeftSwing = {Animation = Tool:WaitForChild(&quot;LeftSwing&quot;), FadeTime = nil, Weight = nil, Speed = 2, Duration = 0.75},
&#9;RightSwing = {Animation = Tool:WaitForChild(&quot;RightSwing&quot;), FadeTime = nil, Weight = nil, Speed = 2, Duration = 0.75},
&#9;KickHit = {Animation = Tool:WaitForChild(&quot;KickHit&quot;), FadeTime = nil, Weight = nil, Speed = 1.5, Duration = 0.75},
&#9;ArmsUp = {Animation = Tool:WaitForChild(&quot;ArmsUp&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
&#9;ArmsOut = {Animation = Tool:WaitForChild(&quot;ArmsOut&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil}
}

Sounds = {
}

Damage = {
&#9;Hit = 6,
&#9;Swing = 16,
}

SpecialAttacks = {
&#9;Enabled = true,
&#9;Active = false,
&#9;ReloadTime = 5,
&#9;Rise = {
&#9;&#9;Damage = 15,
&#9;&#9;ReloadTime = 60,
&#9;&#9;Duration = 60,
&#9;&#9;Enabled = true,
&#9;&#9;Active = false,
&#9;&#9;SkeletalRemains = {
&#9;&#9;&#9;{Name = &quot;HornedVelociraptorSkull&quot;, Size = Vector3.new(1.5, 1.75, 2.25), MeshId = &quot;http://www.roblox.com/asset/?id=14028428&quot;, TextureId = &quot;http://www.roblox.com/asset/?id=14027832&quot;, Scale = Vector3.new(1, 1, 1), VertexColor = Vector3.new(1, 1, 1)},
&#9;&#9;&#9;{Name = &quot;TriceratopsSkull&quot;, Size = Vector3.new(2, 2, 3), MeshId = &quot;http://www.roblox.com/asset/?id=13157130&quot;, TextureId = &quot;http://www.roblox.com/asset/?id=13157137&quot;, Scale = Vector3.new(1, 1, 1), VertexColor = Vector3.new(1, 1, 1)},
&#9;&#9;&#9;{Name = &quot;RiddlingSkull&quot;, Size = Vector3.new(1.5, 1.5, 1.75), MeshId = &quot;http://www.roblox.com/asset/?id=4770583&quot;, TextureId = &quot;http://www.roblox.com/asset/?id=4770560&quot;, Scale = Vector3.new(3.2, 3.2, 3.2), VertexColor = Vector3.new(1, 1, 1)},
&#9;&#9;&#9;{Name = &quot;SkeletalTorsoRemains&quot;, Size = Vector3.new(1.5, 1.5, 1.75), MeshId = &quot;http://www.roblox.com/asset/?id=36780113&quot;, TextureId = &quot;http://www.roblox.com/asset/?id=187949411&quot;, Scale = Vector3.new(1, 1, 1), VertexColor = Vector3.new(1, 1, 1)},
&#9;&#9;&#9;{Name = &quot;SkeletalRightArmRemains&quot;, Size = Vector3.new(0.5, 2, 0.5), MeshId = &quot;http://www.roblox.com/asset/?id=36780156&quot;, TextureId = &quot;http://www.roblox.com/asset/?id=187949411&quot;, Scale = Vector3.new(1, 1, 1), VertexColor = Vector3.new(1, 1, 1)},
&#9;&#9;&#9;{Name = &quot;SkeletalLeftArmRemains&quot;, Size = Vector3.new(0.5, 2, 0.5), MeshId = &quot;http://www.roblox.com/asset/?id=36780032&quot;, TextureId = &quot;http://www.roblox.com/asset/?id=187949411&quot;, Scale = Vector3.new(1, 1, 1), VertexColor = Vector3.new(1, 1, 1)},
&#9;&#9;&#9;{Name = &quot;SkeletalRightLegRemains&quot;, Size = Vector3.new(0.5, 2, 0.5), MeshId = &quot;http://www.roblox.com/asset/?id=36780195&quot;, TextureId = &quot;http://www.roblox.com/asset/?id=187949411&quot;, Scale = Vector3.new(1, 1, 1), VertexColor = Vector3.new(1, 1, 1)},
&#9;&#9;&#9;{Name = &quot;SkeletalLeftLegRemains&quot;, Size = Vector3.new(0.5, 2, 0.5), MeshId = &quot;http://www.roblox.com/asset/?id=36780079&quot;, TextureId = &quot;http://www.roblox.com/asset/?id=187949411&quot;, Scale = Vector3.new(1, 1, 1), VertexColor = Vector3.new(1, 1, 1)}
&#9;&#9;}
&#9;},
&#9;Uprise = {
&#9;&#9;Radius = 25,
&#9;&#9;Damage = 10,
&#9;&#9;Duration = 15,
&#9;&#9;ReloadTime = 45,
&#9;&#9;Enabled = true,
&#9;&#9;Active = false
&#9;}
}

ReloadTime = 0.25

Clicks = 0
FirstClick = false

Gravity = 196.20

ToolEquipped = false

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Handle.Transparency = 0
Tool.Enabled = true

ServerControl.OnServerInvoke = (function(player, Mode, Value)
&#9;if player == Player then
&#9;&#9;if Mode == &quot;MouseClick&quot; and Value.Down then
&#9;&#9;&#9;Activated()
&#9;&#9;elseif Mode == &quot;KeyPress&quot; and SpecialAttacks.Enabled and not SpecialAttacks.Active then
&#9;&#9;&#9;local Key = Value.Key
&#9;&#9;&#9;local ByteKey = string.byte(Key)
&#9;&#9;&#9;local Down = Value.Down
&#9;&#9;&#9;if Key == &quot;x&quot; and Down then
&#9;&#9;&#9;&#9;SpecialAttack = SpecialAttacks.Rise
&#9;&#9;&#9;&#9;if SpecialAttack.Enabled then
&#9;&#9;&#9;&#9;&#9;SpecialAttacks.Enabled = false
&#9;&#9;&#9;&#9;&#9;SpecialAttacks.Active = true
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;SpecialAttack.Enabled = false
&#9;&#9;&#9;&#9;&#9;SpecialAttack.Active = true
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local CurrentlyEquipped = true
&#9;&#9;&#9;&#9;&#9;ToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;&#9;&#9;&#9;&#9;CurrentlyEquipped = false
&#9;&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;&#9;&#9;local RayHit, RayPos = RayCast(Torso.Position, Vector3.new(0, -1, 0), (Torso.Size.Y * 2), {Character})
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;if RayHit and CurrentlyEquipped then
&#9;&#9;&#9;&#9;&#9;&#9;local Animation = Animations.ArmsUp
&#9;&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animation)
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;local SkeletalRemainsPile = Instance.new(&quot;Model&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;SkeletalRemainsPile.Name = &quot;SkeletalRemainsPile&quot;
&#9;&#9;&#9;&#9;&#9;&#9;local SpawnPosition = RayPos
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;Debris:AddItem(SkeletalRemainsPile, SpecialAttack.Duration)
&#9;&#9;&#9;&#9;&#9;&#9;SkeletalRemainsPile.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;local CurrentPlayer = Player
&#9;&#9;&#9;&#9;&#9;&#9;local CurrentCharacter = Character
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;local Parts = {}
&#9;&#9;&#9;&#9;&#9;&#9;local SkeletalRemains = SpecialAttack.SkeletalRemains
&#9;&#9;&#9;&#9;&#9;&#9;local Rows = 20
&#9;&#9;&#9;&#9;&#9;&#9;for i = 1, Rows do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local NumberParts = (i * 1.25)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local InsideRow = {}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;for ii = 1, NumberParts do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local FillInParts = Round((i / 1), 0.5)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for iii = 1, FillInParts do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Part = BasePart:Clone()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local ObjectChosen = SkeletalRemains[math.random(1, #SkeletalRemains)]
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if i == 1 then --Make sure the top of the pile has a skull
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local SkeletonHeads = {SkeletalRemains[1], SkeletalRemains[2], SkeletalRemains[3]}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ObjectChosen = SkeletonHeads[math.random(1, #SkeletonHeads)]
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (i &gt; 12 and iii &lt; (FillInParts - 10)) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(InsideRow, Part)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(Parts, Part)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if iii &gt; (FillInParts - 3) then --Only make the outer layer of parts deadly
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.Touched:connect(function(Hit)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not Hit or not Hit.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local character = Hit.Parent
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if CurrentCharacter == character then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if humanoid and humanoid.Health &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TagHumanoid(humanoid, CurrentPlayer)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(SpecialAttack.Damage)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.Name = ObjectChosen.Name
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.Size = ObjectChosen.Size
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.Anchored = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local AddFire = math.random(1, (Rows / 4))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if AddFire == 1 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Fire = Instance.new(&quot;Fire&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Fire.Color = Color3.new(0, 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Fire.SecondaryColor = Fire.Color
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Fire.Heat = 9
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Fire.Size = 5
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Fire.Enabled = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Fire.Parent = Part
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Mesh = Instance.new(&quot;SpecialMesh&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.MeshType = Enum.MeshType.FileMesh
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.MeshId = ObjectChosen.MeshId
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.TextureId = ObjectChosen.TextureId
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.Scale = ObjectChosen.Scale
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.VertexColor = ObjectChosen.VertexColor
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.Parent = Part
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.Parent = SkeletalRemainsPile
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.CFrame = CFrame.new(SpawnPosition) + Vector3.new(0, -1, 0) * (i / 1)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.CFrame = Part.CFrame + Vector3.new(0, 1, 0) * ((i - 10) + 10)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.CFrame = Part.CFrame + CFrame.Angles(0, math.random(-360, 360), 0).lookVector * iii
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.CFrame = Part.CFrame * ((i == 1 and CFrame.Angles(0, math.random(-360, 360), 0)) or (i &gt; 1 and CFrame.Angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360))))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.Parent = SkeletalRemainsPile
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;for ii, vv in pairs(InsideRow) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if vv and vv.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;vv:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;for ii = 1, 10 do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for iii, vvv in pairs(Parts) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if vvv and vvv.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;vvv.CFrame = vvv.CFrame + Vector3.new(0, (1 / 10), 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;wait(0.0001)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;if CurrentlyEquipped then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, Animation)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;if ToolUnequipped then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;ToolUnequipped:disconnect()
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;SpecialAttack.Active = false
&#9;&#9;&#9;&#9;&#9;SpecialAttacks.Active = false
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;Delay(((RayHit and SpecialAttack.ReloadTime) or 0), function()
&#9;&#9;&#9;&#9;&#9;&#9;SpecialAttack.Enabled = true
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif Key == &quot;v&quot; and Down then
&#9;&#9;&#9;&#9;SpecialAttack = SpecialAttacks.Uprise
&#9;&#9;&#9;&#9;if SpecialAttack.Enabled then
&#9;&#9;&#9;&#9;&#9;SpecialAttacks.Enabled = false
&#9;&#9;&#9;&#9;&#9;SpecialAttacks.Active = true
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;SpecialAttack.Enabled = false
&#9;&#9;&#9;&#9;&#9;SpecialAttack.Active = true
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local character = Character
&#9;&#9;&#9;&#9;&#9;local humanoid = Humanoid
&#9;&#9;&#9;&#9;&#9;local torso = Torso
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local Animation = Animations.ArmsOut
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animation)
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local CurrentlyEquipped = true
&#9;&#9;&#9;&#9;&#9;ToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;&#9;&#9;&#9;&#9;CurrentlyEquipped = false
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local RayHit, RayPos = RayCast(Torso.Position, Vector3.new(0, -1, 0), (Torso.Size.Y * 2), {Character})
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;if RayHit and CurrentlyEquipped then
&#9;&#9;&#9;&#9;&#9;&#9;local PortalPart = BasePart:Clone()
&#9;&#9;&#9;&#9;&#9;&#9;PortalPart.Name = &quot;PortalPart&quot;
&#9;&#9;&#9;&#9;&#9;&#9;PortalPart.BrickColor = BrickColor.new(&quot;Really black&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;PortalPart.Size = Vector3.new((SpecialAttack.Radius * 2), 0.2, (SpecialAttack.Radius * 2))
&#9;&#9;&#9;&#9;&#9;&#9;PortalPart.Anchored = true
&#9;&#9;&#9;&#9;&#9;&#9;PortalPart.CanCollide = false
&#9;&#9;&#9;&#9;&#9;&#9;local CylinderMesh = Instance.new(&quot;CylinderMesh&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;CylinderMesh.Parent = PortalPart
&#9;&#9;&#9;&#9;&#9;&#9;Debris:AddItem(PortalPart, SpecialAttack.Duration)
&#9;&#9;&#9;&#9;&#9;&#9;PortalPart.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;PortalPart.CFrame = CFrame.new(RayPos)
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;local StartTick = tick()
&#9;&#9;&#9;&#9;&#9;&#9;local SkeletalRemains = SpecialAttacks.Rise.SkeletalRemains
&#9;&#9;&#9;&#9;&#9;&#9;local SkeletonHeads = {SkeletalRemains[1], SkeletalRemains[2], SkeletalRemains[3]}
&#9;&#9;&#9;&#9;&#9;&#9;local CurrentPlayer = Player
&#9;&#9;&#9;&#9;&#9;&#9;local CurrentCharacter = Character
&#9;&#9;&#9;&#9;&#9;&#9;while (tick() - StartTick) &lt; SpecialAttack.Duration and PortalPart and PortalPart.Parent and CheckIfAlive() and ToolEquipped do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Spawn(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i = 1, 10 do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local ObjectChosen = SkeletonHeads[math.random(1, #SkeletonHeads)]
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local MousePosition = InvokeClient(&quot;MousePosition&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Part = BasePart:Clone()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.Name = ObjectChosen.Name
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.Size = (ObjectChosen.Size * 1.5)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.Anchored = false
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.CanCollide = false
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.Touched:connect(function(Hit)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not Hit or not Hit.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local character = Hit.Parent
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if CurrentCharacter == character then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if humanoid and humanoid.Health &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TagHumanoid(humanoid, CurrentPlayer)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(SpecialAttack.Damage)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Fire = Instance.new(&quot;Fire&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Fire.Color = Color3.new(0, 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Fire.SecondaryColor = Fire.Color
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Fire.Heat = 9
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Fire.Size = 5
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Fire.Enabled = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Fire.Parent = Part
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Mesh = Instance.new(&quot;SpecialMesh&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.MeshType = Enum.MeshType.FileMesh
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.MeshId = ObjectChosen.MeshId
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.TextureId = ObjectChosen.TextureId
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.Scale = ObjectChosen.Scale
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.VertexColor = ObjectChosen.VertexColor
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.Parent = Part
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Mass = (Part:GetMass() * Gravity * 100)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local BodyGyro = Instance.new(&quot;BodyGyro&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyGyro.maxTorque = Vector3.new(math.huge, math.huge, math.huge)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyGyro.Parent = Part
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local BodyVelocity = Instance.new(&quot;BodyVelocity&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyVelocity.maxForce = Vector3.new(Mass, Mass, Mass)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyVelocity.velocity = Vector3.new(0, 1, 0) * math.random(150, 200)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyVelocity.Parent = Part
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Debris:AddItem(Part, 3)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.CFrame = PortalPart.CFrame + (PortalPart.CFrame * CFrame.Angles(0, math.random(-360, 360), 0)).lookVector * (math.random(-(SpecialAttack.Radius * 1000), (SpecialAttack.Radius * 1000)) *  0.001)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part.CFrame = Part.CFrame * CFrame.Angles(0, math.random(-360, 360), 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyGyro.cframe = Part.CFrame
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;wait(math.random(0, 0.35))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;wait(0.5)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;if CurrentlyEquipped then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, Animation)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;if ToolUnequipped then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;ToolUnequipped:disconnect()
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;SpecialAttack.Active = false
&#9;&#9;&#9;&#9;&#9;SpecialAttacks.Active = false
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;Delay(((RayHit and SpecialAttack.ReloadTime) or 0), function()
&#9;&#9;&#9;&#9;&#9;&#9;SpecialAttack.Enabled = true
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;if SpecialAttack then
&#9;&#9;&#9;&#9;wait(SpecialAttacks.ReloadTime)
&#9;&#9;&#9;&#9;SpecialAttacks.Enabled = true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end)

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

function RayCast(Position, Direction, MaxDistance, IgnoreList)
&#9;return game:GetService(&quot;Workspace&quot;):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList) 
end

function Round(Number, RoundDecimal)
&#9;local WholeNumber, Decimal = math.modf(Number)
&#9;return ((Decimal &gt;= RoundDecimal and math.ceil(Number)) or (Decimal &lt; RoundDecimal and math.floor(Number)))
end

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function Activated()
&#9;if not Tool.Enabled or not ToolEquipped or SpecialAttacks.Active then
&#9;&#9;return
&#9;end
&#9;Clicks = (Clicks + 1)
&#9;if not FirstClick then
&#9;&#9;FirstClick = true
&#9;&#9;local CurrentlyEquipped = true
&#9;&#9;ToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;&#9;CurrentlyEquipped = false
&#9;&#9;end)
&#9;&#9;wait(0.15)
&#9;&#9;if ToolUnequipped then
&#9;&#9;&#9;ToolUnequipped:disconnect()
&#9;&#9;end
&#9;&#9;if not CurrentlyEquipped then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;Tool.Enabled = false
&#9;&#9;if Clicks == 1 then
&#9;&#9;&#9;local SwingAnimations = {Animations.LeftSwing, Animations.RightSwing}
&#9;&#9;&#9;local Animation = SwingAnimations[math.random(1, #SwingAnimations)]
&#9;&#9;&#9;AnimationChosen = Animation
&#9;&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, AnimationChosen)
&#9;&#9;&#9;wait(AnimationChosen.Duration)
&#9;&#9;&#9;if CurrentlyEquipped then
--&#9;&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, AnimationChosen)
&#9;&#9;&#9;end
&#9;&#9;&#9;AnimationChosen = nil
&#9;&#9;&#9;wait(ReloadTime)
&#9;&#9;elseif Clicks &gt; 1 then
&#9;&#9;&#9;local Animation = Animations.KickHit
&#9;&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animation)
&#9;&#9;&#9;wait(Animation.Duration / 4)
&#9;&#9;&#9;local SkeletalRemains = SpecialAttacks.Rise.SkeletalRemains
&#9;&#9;&#9;local SkeletonHeads = {SkeletalRemains[1], SkeletalRemains[2], SkeletalRemains[3]}
&#9;&#9;&#9;local ObjectChosen = SkeletonHeads[math.random(1, #SkeletonHeads)]
&#9;&#9;&#9;local MousePosition = InvokeClient(&quot;MousePosition&quot;)
&#9;&#9;&#9;local Part = BasePart:Clone()
&#9;&#9;&#9;Part.Name = ObjectChosen.Name
&#9;&#9;&#9;Part.Size = ObjectChosen.Size
&#9;&#9;&#9;Part.Anchored = false
&#9;&#9;&#9;Part.CanCollide = false
&#9;&#9;&#9;local Fire = Instance.new(&quot;Fire&quot;)
&#9;&#9;&#9;Fire.Color = Color3.new(0, 0, 0)
&#9;&#9;&#9;Fire.SecondaryColor = Fire.Color
&#9;&#9;&#9;Fire.Heat = 9
&#9;&#9;&#9;Fire.Size = 5
&#9;&#9;&#9;Fire.Enabled = true
&#9;&#9;&#9;Fire.Parent = Part
&#9;&#9;&#9;local Mesh = Instance.new(&quot;SpecialMesh&quot;)
&#9;&#9;&#9;Mesh.MeshType = Enum.MeshType.FileMesh
&#9;&#9;&#9;Mesh.MeshId = ObjectChosen.MeshId
&#9;&#9;&#9;Mesh.TextureId = ObjectChosen.TextureId
&#9;&#9;&#9;Mesh.Scale = ObjectChosen.Scale
&#9;&#9;&#9;Mesh.VertexColor = ObjectChosen.VertexColor
&#9;&#9;&#9;Mesh.Parent = Part
&#9;&#9;&#9;local Mass = (Part:GetMass() * Gravity)
&#9;&#9;&#9;local BodyGyro = Instance.new(&quot;BodyGyro&quot;)
&#9;&#9;&#9;BodyGyro.maxTorque = Vector3.new(math.huge, math.huge, math.huge)
&#9;&#9;&#9;BodyGyro.Parent = Part
&#9;&#9;&#9;local BodyPosition = Instance.new(&quot;BodyPosition&quot;)
&#9;&#9;&#9;BodyPosition.maxForce = Vector3.new((Mass * 100), (Mass * 100), (Mass * 100))
&#9;&#9;&#9;BodyPosition.position = (Torso.CFrame + Torso.CFrame.lookVector * (((Torso.Size.Z / 2) + (Part.Size.Z / 2)) + 0.5)).p
&#9;&#9;&#9;BodyPosition.Parent = Part
&#9;&#9;&#9;local BodyVelocity = Instance.new(&quot;BodyVelocity&quot;)
&#9;&#9;&#9;BodyVelocity.maxForce = Vector3.new(0, 0, 0)
&#9;&#9;&#9;BodyVelocity.Parent = Part
&#9;&#9;&#9;Debris:AddItem(Part, 5)
&#9;&#9;&#9;Part.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;&#9;local OriginalCFrame = Torso.CFrame + Torso.CFrame.lookVector * (((Torso.Size.Z / 2) + (Part.Size.Z / 2)) + 0.5)
&#9;&#9;&#9;Part.CFrame = OriginalCFrame
&#9;&#9;&#9;local Direction = CFrame.new(Part.Position, MousePosition)
&#9;&#9;&#9;Part.CFrame = Direction
&#9;&#9;&#9;BodyGyro.cframe = Direction
&#9;&#9;&#9;Part.CFrame = Part.CFrame + (Part.CFrame * CFrame.Angles(-(math.pi / 2), 0, 0)).lookVector * (Torso.Size.Y * 1)
&#9;&#9;&#9;BodyPosition.position = Part.CFrame.p
&#9;&#9;&#9;Part.CanCollide = true
&#9;&#9;&#9;wait(Animation.Duration / 2)
&#9;&#9;&#9;BodyPosition.position = OriginalCFrame.p
&#9;&#9;&#9;local Velocity = CFrame.new(Part.Position, MousePosition).lookVector * 200
&#9;&#9;&#9;wait(Animation.Duration / 4)
&#9;&#9;&#9;local CurrentPlayer = Player
&#9;&#9;&#9;local CurrentCharacter = Character
&#9;&#9;&#9;Part.Touched:connect(function(Hit)
&#9;&#9;&#9;&#9;if not Hit or not Hit.Parent and Hit == Handle then
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;local character = Hit.Parent
&#9;&#9;&#9;&#9;if CurrentCharacter == character then
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;&#9;if humanoid and humanoid.Health &gt; 0 then
&#9;&#9;&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;TagHumanoid(humanoid, CurrentPlayer)
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(25)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;&#9;if CurrentlyEquipped then
--&#9;&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, Animation)
&#9;&#9;&#9;end
&#9;&#9;&#9;BodyPosition.maxForce = Vector3.new(0, 0, 0)
&#9;&#9;&#9;BodyVelocity.maxForce = Vector3.new(Mass, Mass, Mass)
&#9;&#9;&#9;BodyVelocity.velocity = Velocity
&#9;&#9;&#9;Part.Velocity = Velocity
&#9;&#9;end
&#9;&#9;FirstClick = false
&#9;&#9;Clicks = 0
&#9;&#9;Tool.Enabled = true
&#9;end
end

function Blow(Hit)
&#9;if not Hit or not Hit.Parent or not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;local character = Hit.Parent
&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if character == Character or not humanoid or humanoid.Health == 0 then
&#9;&#9;return
&#9;end
&#9;local RightArm = Character:FindFirstChild(&quot;Right Arm&quot;)
&#9;if not RightArm then
&#9;&#9;return
&#9;end
&#9;local RightGrip = RightArm:FindFirstChild(&quot;RightGrip&quot;)
&#9;if not RightGrip or not (RightGrip.Part0 == Handle or RightGrip.Part1 == Handle) then
&#9;&#9;return
&#9;end
&#9;UntagHumanoid(humanoid)
&#9;TagHumanoid(humanoid, Player)
&#9;humanoid:TakeDamage((AnimationChosen and Damage.Swing) or Damage.Hit)
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent)
end

function Equipped()
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;local CurrentlyEquipped = true
&#9;EquippedToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;CurrentlyEquipped = false
&#9;end)
&#9;if EquippedToolUnequipped then
&#9;&#9;EquippedToolUnequipped:disconnect()
&#9;end
&#9;if not CurrentlyEquipped then
&#9;&#9;return
&#9;end
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.Animation then
&#9;&#9;&#9;InvokeClient(&quot;Preload&quot;, v.Animation.AnimationId)
&#9;&#9;end
&#9;end
&#9;ToolEquipped = true
end

function Unequipped()
&#9;FirstClick = false
&#9;Clicks = 0
&#9;for i, v in pairs({EquippedToolUnequipped, ToolUnequipped}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;for i ,v in pairs(Sounds) do
&#9;&#9;InvokeClient(&quot;StopSound&quot;, v)
&#9;&#9;v:Stop()
&#9;end
&#9;for i, v in pairs(Animations) do
&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;end
&#9;ToolEquipped = false
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)

Handle.Touched:connect(Blow)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX0986AF99F19E4AAA8402088A2B0682D7">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=187951261</url></Content>
				<string name="Name">ArmsUp</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXEFCE73A03BB8439E94D60357AEAF0D9D">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = &quot;rbxasset://textures/GunCursor.png&quot;
Reloading_Icon = &quot;rbxasset://textures/GunWaitCursor.png&quot;

Tool = script.Parent

Mouse = nil

function UpdateIcon()
&#9;if Mouse then
&#9;&#9;Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
&#9;end
end

function OnEquipped(ToolMouse)
&#9;Mouse = ToolMouse
&#9;UpdateIcon()
end

function OnChanged(Property)
&#9;if Property == &quot;Enabled&quot; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXB1167EDAA1BC44B8A8492A4AEC9BD19D">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
ContentProvider = game:GetService(&quot;ContentProvider&quot;)

Animations = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

Equipped = false

ClientControl.OnClientInvoke = (function(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Equipped and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;elseif Mode == &quot;Preload&quot; and Value then
&#9;&#9;ContentProvider:Preload(Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;elseif Mode == &quot;DisableJump&quot; then
&#9;&#9;DisableJump(Value)
&#9;end
end)

function InvokeServer(Mode, Value)
&#9;pcall(function()
&#9;&#9;local ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;&#9;return ServerReturn
&#9;end)
end

function DisableJump(Boolean)
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;if Boolean then
&#9;&#9;PreventJump = Humanoid.Changed:connect(function(Property)
&#9;&#9;&#9;if Property ==  &quot;Jump&quot; then
&#9;&#9;&#9;&#9;Humanoid.Jump = false
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Equipped = true
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
end

function Unequipped()
&#9;Equipped = false
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX6C06C991E9D34FBDAD8A768DA41FC509">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=188443632</url></Content>
				<string name="Name">KickHit</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX63F8ECFB6EDD4D2684D5DF9A3DCFC5A8">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=188242481</url></Content>
				<string name="Name">ArmsOut</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBXF3E4264793AC4ACB945010B888AF760B">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>20.6811523</X>
					<Y>4.2760148</Y>
					<Z>19.702198</Z>
					<R00>0.853862286</R00>
					<R01>-0.0219457354</R01>
					<R02>-0.52003628</R02>
					<R10>1.86264537e-009</R10>
					<R11>0.999110878</R11>
					<R12>-0.0421628617</R12>
					<R20>0.52049917</R20>
					<R21>0.0360012762</R21>
					<R22>0.853102922</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>21.7212257</X>
					<Y>4.3603406</Y>
					<Z>17.9959908</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>