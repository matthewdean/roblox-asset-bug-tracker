<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXA19649A40A5B4F5C99623EFE20DF08F1">
		<Properties>
			<bool name="CanBeDropped">false</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>1.39999998</X>
				<Y>2</Y>
				<Z>-1.25</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>-3.9340253e-007</R12>
				<R20>0</R20>
				<R21>3.9340253e-007</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">Bike</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=189754022</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX2D0FDBF6ECD44DD3BBD5449420ECE0DE">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>14.5424986</X>
					<Y>4.25051594</Y>
					<Z>4.46839333</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0</float>
				<float name="Friction">0</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>3.5</Y>
					<Z>7</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXBCD56125682E4758AC5584E80BCD9B3A">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=189852118</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>2</X>
						<Y>2</Y>
						<Z>2</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=189753994</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX7DE0AD2D84414391884F4C9D9FB6B1AF">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Bell</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=189797299</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBXD2D7718AD3114905BF51FF31EE0B6E5A">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

VehicleModule = require(Tool:WaitForChild(&quot;VehicleModule&quot;))

Controls = {
&#9;Forward = false,
&#9;Backward = false,
&#9;Left = false,
&#9;Right = false,
&#9;Up = false,
&#9;Down = false
}

LastSpace = 0

Animations = {
&#9;Hold = {Animation = Tool:WaitForChild(&quot;Hold&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
}

Sounds = {
&#9;--EngineSound = Handle:WaitForChild(&quot;Running&quot;),
&#9;Bell = Handle:WaitForChild(&quot;Bell&quot;)
}

BasePercentageIncrease = 1 --Determins the percentage difference from the base speed

Accelerations = {
&#9;Acceleration = {
&#9;&#9;Normal = (10 * BasePercentageIncrease),
&#9;&#9;Boost = (30 * BasePercentageIncrease),
&#9;},
&#9;Deceleration = {
&#9;&#9;Normal = (10 * BasePercentageIncrease),
&#9;&#9;Boost = (30 * BasePercentageIncrease)
&#9;}
}

MaxSpeed = {
&#9;Normal = (100 * BasePercentageIncrease),
}

CurrentMaxSpeed = MaxSpeed.Normal

Acceleration = Accelerations.Acceleration.Normal
Deceleration = Accelerations.Deceleration.Normal

TurnAlpha = (0.30 * BasePercentageIncrease)
AlphaDampening = (0.2 * BasePercentageIncrease)
CurrentSpeed = 0
TurnSpeed = 0

Gravity = 196.20

ToolEquipped = false

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

for i, v in pairs(Tool:GetChildren()) do
&#9;if v:IsA(&quot;BasePart&quot;) and v ~= Handle then
&#9;&#9;v:Destroy()
&#9;end
end

ServerControl.OnServerInvoke = (function(Player, Mode, Value)
&#9;if Mode == &quot;KeyPress&quot; and Value then
&#9;&#9;local Key = string.lower(Value.Key)
&#9;&#9;local ByteKey = string.byte(Key)
&#9;&#9;local Down = Value.Down
&#9;&#9;if Key == &quot;w&quot; or ByteKey == 17 then
&#9;&#9;&#9;Controls.Forward = Down
&#9;&#9;&#9;while Controls.Forward and ToolEquipped do
&#9;&#9;&#9;&#9;CurrentSpeed = math.min(CurrentMaxSpeed, (CurrentSpeed + (Acceleration * (1 / 30))))
&#9;&#9;&#9;&#9;wait(1 / 30)
&#9;&#9;&#9;end
&#9;&#9;elseif Key == &quot;a&quot; or ByteKey == 20 then
&#9;&#9;&#9;Controls.Left = Down
&#9;&#9;&#9;while Controls.Left and ToolEquipped do
&#9;&#9;&#9;&#9;TurnSpeed = math.min(5, (TurnSpeed + (TurnAlpha)))
&#9;&#9;&#9;&#9;wait(1 / 30)
&#9;&#9;&#9;end
&#9;&#9;elseif Key == &quot;s&quot; or ByteKey == 18 then
&#9;&#9;&#9;Controls.Backward = Down
&#9;&#9;&#9;while Controls.Backward and ToolEquipped do
&#9;&#9;&#9;&#9;if CurrentSpeed &gt; 0 then
&#9;&#9;&#9;&#9;&#9;CurrentSpeed = math.max(-20, (CurrentSpeed - (Deceleration * 2.8 * (1 / 30))))
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;CurrentSpeed = math.max(-20, (CurrentSpeed - (Deceleration * (1 / 30))))
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;wait(1 / 30)
&#9;&#9;&#9;end
&#9;&#9;elseif Key == &quot;d&quot; or ByteKey == 19 then
&#9;&#9;&#9;Controls.Right = Down
&#9;&#9;&#9;while Controls.Right and ToolEquipped do
&#9;&#9;&#9;&#9;TurnSpeed = math.max(-5, (TurnSpeed - (TurnAlpha)))
&#9;&#9;&#9;&#9;wait(1 / 30)
&#9;&#9;&#9;end
&#9;&#9;elseif Key == &quot; &quot; and Down then
&#9;&#9;&#9;if (LastSpace == 0 or (tick() - LastSpace) &gt; 1.9) then
&#9;&#9;&#9;&#9;LastSpace = tick()
&#9;&#9;&#9;&#9;local BodyForce = Instance.new(&quot;BodyForce&quot;)
&#9;&#9;&#9;&#9;BodyForce.force = Vector3.new(0, (((GetTotalMass(Character) * Gravity) * 4) * 4), 0)
&#9;&#9;&#9;&#9;Debris:AddItem(BodyForce, 0.1)
&#9;&#9;&#9;&#9;BodyForce.Parent = FakeHandle
&#9;&#9;&#9;end
&#9;&#9;elseif Key == &quot;h&quot; and Down then
&#9;&#9;&#9;Sounds.Bell:Play()
&#9;&#9;end
&#9;end
end)

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

function RayCast(Position, Direction, MaxDistance, IgnoreList)
&#9;return game:GetService(&quot;Workspace&quot;):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList) 
end

function GetTotalMass(Parent)
&#9;local TotalMass = 0
&#9;for i, v in pairs(Parent:GetChildren()) do
&#9;&#9;if v:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;TotalMass = TotalMass + v:GetMass()
&#9;&#9;end
&#9;&#9;GetTotalMass(v)
&#9;end
&#9;return TotalMass
end

function ThrustUpdater()
&#9;--Sounds.EngineSound:Play()
&#9;while ToolEquipped and FakeHandle and FakeHandle.Parent do
&#9;&#9;local Direction = Torso.CFrame.lookVector
&#9;&#9;Direction = Vector3.new(Direction.x, 0, Direction.z).unit
&#9;&#9;ThrustForce.velocity = (Direction * CurrentSpeed)
&#9;&#9;--Sounds.EngineSound.Pitch = (1 + (math.abs(CurrentSpeed / 50) * 1))
&#9;&#9;
&#9;&#9;local DesiredAngle = (999999999 * (-CurrentSpeed / math.abs(CurrentSpeed)))
&#9;&#9;local MaxVelocity = (CurrentSpeed / 250)
&#9;&#9;if FrontMotor and FrontMotor.Parent then
&#9;&#9;&#9;FrontMotor.DesiredAngle = DesiredAngle
&#9;&#9;&#9;FrontMotor.MaxVelocity = MaxVelocity
&#9;&#9;end
&#9;&#9;if BackMotor and BackMotor.Parent then 
&#9;&#9;&#9;BackMotor.DesiredAngle = DesiredAngle
&#9;&#9;&#9;BackMotor.MaxVelocity = MaxVelocity
&#9;&#9;end
&#9;&#9;
&#9;&#9;RotationForce.angularvelocity = Vector3.new(0, TurnSpeed, 0)
&#9;&#9;if math.abs(TurnSpeed) &gt; AlphaDampening&#9; then
&#9;&#9;&#9;TurnSpeed = (TurnSpeed - (AlphaDampening * (math.abs(TurnSpeed) / TurnSpeed)))
&#9;&#9;else 
&#9;&#9;&#9;TurnSpeed = 0&#9;&#9;
&#9;&#9;end
&#9;&#9;local LeanAmount = (-TurnSpeed * (math.pi / 6) / 4)
&#9;&#9;
&#9;&#9;if not Controls.Forward or Controls.Backward then
&#9;&#9;&#9;CurrentSpeed = (CurrentSpeed * 0.99)&#9;&#9;
&#9;&#9;end
&#9;&#9;
&#9;&#9;local XZAngle = math.atan2(Torso.CFrame.lookVector.z, 0, Torso.CFrame.lookVector.x)
--&#9;&#9;TurnGyro.cframe = CFrame.Angles((LeanAmount * Direction.x), 0, (LeanAmount * Direction.z))
&#9;&#9;if LastPosition then
&#9;&#9;&#9;local NPos = Vector3.new(Torso.CFrame.p.x, 0, Torso.CFrame.p.z)
&#9;&#9;&#9;local MySpeed = Vector3.new(FakeHandle.Velocity.X, 0, FakeHandle.Velocity.Z).magnitude
&#9;&#9;&#9;local VelocityDifference = math.abs((MySpeed - (ThrustForce.velocity.magnitude)))
&#9;&#9;&#9;if MySpeed &gt; 3 and ThrustForce.velocity.magnitude &gt; 3 and VelocityDifference &gt; (0.7 * ThrustForce.velocity.magnitude) then
&#9;&#9;&#9;&#9;CurrentSpeed = (CurrentSpeed * 0.9)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;LastPosition = Vector3.new(Torso.CFrame.p.x, 0, Torso.CFrame.p.z)
&#9;&#9;wait(1 / 60)
&#9;end
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped()
&#9;local CurrentlyEquipped = true
&#9;ToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;CurrentlyEquipped = false
&#9;&#9;ToolUnequipped:disconnect()
&#9;end)
&#9;wait(0.3)
&#9;if ToolUnequipped then
&#9;&#9;ToolUnequipped:disconnect()
&#9;end
&#9;if not CurrentlyEquipped then
&#9;&#9;return
&#9;end
&#9;ToolEquipped = true
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;
&#9;Spawn(function()

&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.Hold)
&#9;&#9;
&#9;&#9;Handle.Velocity = Vector3.new(0, 0, 0)
&#9;&#9;
&#9;&#9;Torso.Velocity = Vector3.new(0, 0, 0)
&#9;&#9;
&#9;&#9;local Hit, EndPosition = RayCast(Torso.Position, Vector3.new(0, -1, 0), (Torso.Size.Y * 2), {Character})
&#9;&#9;if Hit then
&#9;&#9;&#9;Torso.CFrame = Torso.CFrame + Vector3.new(0, ((Torso.Size.Y * 2) + Handle.Size.Y), 0)
&#9;&#9;end
&#9;&#9;
&#9;&#9;if FakeHandle and FakeHandle.Parent then
&#9;&#9;&#9;FakeHandle:Destroy()
&#9;&#9;end
&#9;&#9;
&#9;&#9;Handle.Transparency = 1
&#9;&#9;
&#9;&#9;FakeHandle = VehicleModule:Clone()
&#9;&#9;FrontMotor = FakeHandle:FindFirstChild(&quot;FrontMotor&quot;)
&#9;&#9;BackMotor = FakeHandle:FindFirstChild(&quot;BackMotor&quot;)
&#9;&#9;
&#9;&#9;Handle.CFrame = Torso.CFrame
&#9;&#9;Humanoid.WalkSpeed = 0
&#9;&#9;Humanoid.PlatformStand = true
&#9;&#9;
&#9;&#9;RotationForce = Instance.new(&quot;BodyAngularVelocity&quot;)
&#9;&#9;RotationForce.maxTorque = Vector3.new(0, math.huge, 0)
&#9;&#9;RotationForce.angularvelocity = Vector3.new(0, 0, 0)
&#9;&#9;RotationForce.Parent = FakeHandle
&#9;&#9;
&#9;&#9;ThrustForce = Instance.new(&quot;BodyVelocity&quot;)
&#9;&#9;ThrustForce.maxForce = Vector3.new(math.huge, 0, math.huge)
&#9;&#9;ThrustForce.velocity = Vector3.new(0, 0, 0)
&#9;&#9;ThrustForce.P = 100
&#9;&#9;ThrustForce.Parent = FakeHandle
&#9;&#9;
&#9;&#9;TurnGyro = Instance.new(&quot;BodyGyro&quot;)
&#9;&#9;TurnGyro.maxTorque = Vector3.new(5000, 0, 5000)
&#9;&#9;TurnGyro.P = 300
&#9;&#9;TurnGyro.D = 100
&#9;&#9;TurnGyro.Parent = FakeHandle
&#9;&#9;
&#9;&#9;Spawn(function()
&#9;&#9;&#9;ThrustUpdater()
&#9;&#9;end)
&#9;&#9;&#9;
&#9;&#9;LastSpace = tick()
&#9;&#9;
&#9;&#9;Spawn(function()
&#9;&#9;&#9;if FakeHandle then
&#9;&#9;&#9;&#9;TorsoWeld = Instance.new(&quot;Weld&quot;)
&#9;&#9;&#9;&#9;TorsoWeld.C0 = CFrame.new(0, -1.75, -1.55) * CFrame.Angles((math.pi / 6), 0, 0)
&#9;&#9;&#9;&#9;TorsoWeld.Part0 = Torso
&#9;&#9;&#9;&#9;TorsoWeld.Part1 = FakeHandle
&#9;&#9;&#9;&#9;TorsoWeld.Parent = FakeHandle
&#9;&#9;&#9;&#9;FakeHandle.CanCollide = true
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;&#9;
&#9;&#9;if CurrentlyEquipped then
&#9;&#9;&#9;Torso.CFrame = Torso.CFrame + Vector3.new(0, 1, 0) * (Torso.Size.Y * 2)
&#9;&#9;&#9;FakeHandle.Parent = Tool
&#9;&#9;&#9;FakeHandle = Tool:FindFirstChild(FakeHandle.Name)
&#9;&#9;&#9;for i, v in pairs({&quot;FrontWheel&quot;, &quot;BackWheel&quot;}) do
&#9;&#9;&#9;&#9;local Object = FakeHandle:FindFirstChild(v)
&#9;&#9;&#9;&#9;if Object and Object:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;SetLocalTransparencyModifier&quot;, {Object = Object, Transparency = 0, AutoUpdate = true})
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;for i, v in pairs({&quot;Left Arm&quot;, &quot;Right Arm&quot;}) do
&#9;&#9;&#9;&#9;local Object = Character:FindFirstChild(v)
&#9;&#9;&#9;&#9;if Object and Object:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;SetLocalTransparencyModifier&quot;, {Object = Object, Transparency = 0, AutoUpdate = false})
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;
&#9;end)
&#9;
end

function Unequipped()
&#9;local CurrentlyEquipped = ToolEquipped
&#9;ToolEquipped = false
&#9;CurrentSpeed = 0
&#9;TurnSpeed = 0
&#9;for i, v in pairs(Controls) do
&#9;&#9;Controls[i] = false
&#9;end
&#9;for i, v in pairs({ToolUnequipped}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;if FakeHandle and FakeHandle.Parent then
&#9;&#9;FakeHandle:Destroy()
&#9;end
&#9;for i, v in pairs(Animations) do
&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;end
&#9;for i, v in pairs(Sounds) do
&#9;&#9;v:Stop()
&#9;&#9;InvokeClient(&quot;StopSound&quot;, v)
&#9;end
&#9;Handle.Transparency = 0
&#9;Handle.Velocity = Vector3.new(0, 0, 0)
&#9;Handle.RotVelocity = Vector3.new(0, 0, 0)
&#9;if Torso then
&#9;&#9;Torso.Velocity = Vector3.new(0, -10, 0)
&#9;end
&#9;if Humanoid and Humanoid.Parent and CurrentlyEquipped then
&#9;&#9;Humanoid.WalkSpeed = 16
&#9;&#9;Humanoid.PlatformStand = false
&#9;&#9;Humanoid.Jump = true
&#9;end
end

Tool.Unequipped:connect(Unequipped)
Tool.Equipped:connect(Equipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXC30255366A3B40F1A3C1C077A3F7635C">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=189854234</url></Content>
				<string name="Name">Hold</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX2D15E01FBCE94B588648E8502D18CDBB">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
ContentProvider = game:GetService(&quot;ContentProvider&quot;)
RunService = game:GetService(&quot;RunService&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ToolEquipped = false

ClientControl.OnClientInvoke = (function(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;SetAnimation(&quot;PlayAnimation&quot;, Value)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;SetAnimation(&quot;StopAnimation&quot;, Value)
&#9;elseif Mode == &quot;Preload&quot; and Value then
&#9;&#9;ContentProvider:Preload(Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;elseif Mode == &quot;DisableJump&quot; then
&#9;&#9;DisableJump(Value)
&#9;elseif Mode == &quot;SetMouseIcon&quot; and Value then
&#9;&#9;PlayerMouse.Icon = Value
&#9;elseif Mode == &quot;SetLocalTransparencyModifier&quot; and Value and ToolEquipped then
&#9;&#9;pcall(function()
&#9;&#9;&#9;local ObjectFound = false
&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;if v == Value then
&#9;&#9;&#9;&#9;&#9;ObjectFound = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;if not ObjectFound then
&#9;&#9;&#9;&#9;table.insert(LocalObjects, Value)
&#9;&#9;&#9;&#9;if ObjectLocalTransparencyModifier then
&#9;&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier:disconnect()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
&#9;&#9;&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;&#9;&#9;if v.Object and v.Object.Parent and ((not v.AutoUpdate and (v.Object.LocalTransparencyModifier == 1 or  v.Object.LocalTransparencyModifier == 0)) or v.AutoUpdate) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Object.LocalTransparencyModifier = v.Transparency
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;elseif Mode == &quot;GetCamera&quot; and Value then
&#9;&#9;local PropertyValue = nil
&#9;&#9;if Value.Property then
&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;PropertyValue = Camera[Value.Property]
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;&#9;return PropertyValue
&#9;elseif Mode == &quot;SetCamera&quot; and Value then
&#9;&#9;if Value.Property and Value.Value then
&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;Camera[Value.Property] = Value.Value
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;elseif Mode == &quot;SetMouseSensitivity&quot; and Value then
&#9;&#9;if Value.Sensitivity == 1 then
&#9;&#9;&#9;if MouseSensivityConnection then
&#9;&#9;&#9;&#9;MouseSensivityConnection:disconnect()
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;SetMouseSensitivity(Value.Sensitivity)
&#9;&#9;end
&#9;end
end)

function InvokeServer(Mode, Value)
&#9;pcall(function()
&#9;&#9;local ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;&#9;return ServerReturn
&#9;end)
end

function SetAnimation(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function DisableJump(Boolean)
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;if Boolean then
&#9;&#9;PreventJump = Humanoid.Changed:connect(function(Property)
&#9;&#9;&#9;if Property ==  &quot;Jump&quot; then
&#9;&#9;&#9;&#9;Humanoid.Jump = false
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

function SetMouseSensitivity(Sensitivity)

&#9;if MouseSensivityConnection then
&#9;&#9;MouseSensivityConnection:disconnect()
&#9;end&#9;
&#9;
&#9;local function EulerAnglesYX(cframe)
&#9;&#9;local X, Y, Z, R00, R01, R02, R10, R11, R12, R20, R21, R22 = cframe:components(cframe)
&#9;&#9;return -math.asin(R12), ((math.abs(R12) &gt; 0.99999 and -math.atan2(-R20, R00)) or -math.atan2(-R02, R22))
&#9;end
&#9;
&#9;local DirectionX, DirectionY = EulerAnglesYX(Camera.CoordinateFrame)
&#9;
&#9;local function UpdateSensitivity()
&#9;&#9;local CFrameX, CFrameY = EulerAnglesYX(Camera.CoordinateFrame)
&#9;&#9;DirectionX = (DirectionX * (1 - Sensitivity) + (CFrameX + (math.pi * 2) * math.floor((DirectionX - CFrameX) / (math.pi * 2) + 0.5)) * Sensitivity)
&#9;&#9;DirectionY = (DirectionY * (1 - Sensitivity) + (CFrameY + (math.pi * 2) * math.floor((DirectionY - CFrameY) / (math.pi * 2) + 0.5)) * Sensitivity)
&#9;&#9;Camera.CoordinateFrame = CFrame.Angles(0, DirectionY, 0) * CFrame.Angles(DirectionX, 0, 0) * CFrame.new(0, 0, 0.5) + Camera.Focus.p
&#9;end
&#9;
&#9;MouseSensivityConnection = RunService.RenderStepped:connect(UpdateSensitivity)
&#9;
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;ToolEquipped = true
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
&#9;Mouse.WheelForward:connect(function()
&#9;&#9;InvokeServer(&quot;WheelMoved&quot;, {Forward = true})
&#9;end)
&#9;Mouse.WheelBackward:connect(function()
&#9;&#9;InvokeServer(&quot;WheelMoved&quot;, {Forward = false})
&#9;end)
end

function Unequipped()
&#9;ToolEquipped = false
&#9;LocalObjects = {}
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs({PreventJump, MouseSensivityConnection, ObjectLocalTransparencyModifier}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;PlayerMouse.Icon = &quot;&quot;
&#9;Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX011DFB6235A24D83ADBAF9BB6A2DBD19">
			<Properties>
				<string name="Name">VehicleModule</string>
				<ProtectedString name="Source">--Made by Luckymaxer

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Material = Enum.Material.Plastic
BasePart.Shape = Enum.PartType.Block
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true

MeshData = {
&#9;TextureId = &quot;http://www.roblox.com/asset/?id=189753994&quot;,
&#9;Meshes = {
&#9;&#9;Body = &quot;http://www.roblox.com/asset/?id=189852085&quot;,
&#9;&#9;FrontWheel = &quot;http://www.roblox.com/asset/?id=189753965&quot;,
&#9;&#9;BackWheel = &quot;http://www.roblox.com/asset/?id=189753981&quot;,
&#9;},
&#9;Scale = Vector3.new(2, 2, 2)
}

Body = BasePart:Clone()
Body.Name = &quot;FakeHandle&quot;
Body.Size = Vector3.new(1, 5, 6)
Body.CanCollide = false
BodyMesh = Instance.new(&quot;SpecialMesh&quot;)
BodyMesh.MeshType = Enum.MeshType.FileMesh
BodyMesh.MeshId = MeshData.Meshes.Body
BodyMesh.TextureId = MeshData.TextureId
BodyMesh.Scale = MeshData.Scale
BodyMesh.Parent = Body

Wheel = BasePart:Clone()
Wheel.CanCollide = false
WheelMesh = Instance.new(&quot;SpecialMesh&quot;)
WheelMesh.MeshType = Enum.MeshType.FileMesh
WheelMesh.TextureId = MeshData.TextureId
WheelMesh.Scale = MeshData.Scale
WheelMesh.Parent = Wheel
FrontWheel = Wheel:Clone()
FrontWheel.Name = &quot;FrontWheel&quot;
FrontWheel.Mesh.MeshId = MeshData.Meshes.FrontWheel
BackWheel = Wheel:Clone()
BackWheel.Name = &quot;BackWheel&quot;
BackWheel.Mesh.MeshId = MeshData.Meshes.BackWheel

FakeHandle = Body:Clone()
FakeHandle.CanCollide = false
&#9;&#9;
FrontWheelClone = FrontWheel:Clone()
FrontMotor = Instance.new(&quot;Motor6D&quot;)
FrontMotor.Name = &quot;FrontMotor&quot;
FrontMotor.Part0 = FakeHandle
FrontMotor.Part1 = FrontWheelClone
FrontMotor.C0 = CFrame.Angles(0, (math.pi / 2), 0) + Vector3.new(0, -1.125, -2.1)
FrontMotor.C1 = CFrame.Angles(0, -(math.pi / 2), 0)
FrontMotor.Parent = FakeHandle
FrontWheelClone.Parent = FakeHandle
&#9;&#9;
BackWheelClone = BackWheel:Clone()
BackMotor = Instance.new(&quot;Motor6D&quot;)
BackMotor.Name = &quot;BackMotor&quot;
BackMotor.Part0 = FakeHandle
BackMotor.Part1 = BackWheelClone
BackMotor.C0 = CFrame.Angles(0, (math.pi / 2), 0) + Vector3.new(0, -1.125, 2.125)
BackMotor.C1 = CFrame.Angles(0, -(math.pi / 2), 0)
BackMotor.Parent = FakeHandle
BackWheelClone.Parent = FakeHandle

return FakeHandle:Clone()</ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBXE0D7EF23525E442B9F9EBF5095773386">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">5</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>17.7488194</X>
					<Y>6.318542</Y>
					<Z>1.68990266</Z>
					<R00>-0.481755674</R00>
					<R01>-0.382700533</R01>
					<R02>0.788322091</R02>
					<R10>-1.49011612e-008</R10>
					<R11>0.899597287</R11>
					<R12>0.436720401</R12>
					<R20>-0.87630558</R20>
					<R21>0.21039252</R21>
					<R22>-0.433386117</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>16.7240047</X>
					<Y>5.75080776</Y>
					<Z>2.25330234</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>