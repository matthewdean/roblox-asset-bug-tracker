<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX95087CEE8D2B45DE990B0059C10C1EA5">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>1.5</Z>
				<R00>0</R00>
				<R01>0</R01>
				<R02>-1</R02>
				<R10>1</R10>
				<R11>0</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>-1</R21>
				<R22>0</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">WarMace</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=192710822</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBXDF3DC0A252F34A029DBB86AF4E42A23F">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-4.71018171</X>
					<Y>4.96855021</Y>
					<Z>8.96893692</Z>
					<R00>0.707106769</R00>
					<R01>0</R01>
					<R02>0.707106769</R02>
					<R10>0.49999994</R10>
					<R11>-0.707106709</R11>
					<R12>-0.49999994</R12>
					<R20>0.49999994</R20>
					<R21>0.707106709</R21>
					<R22>-0.49999994</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>1</Y>
					<Z>4.25</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX828E1CA41EE546C2A7569E078D4C5F8A">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=192710849</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>8</X>
						<Y>8</Y>
						<Z>8</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=192710830</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX2443092B59F64645BE1E844B60DA6089">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Hit</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=186936370</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX7BF77DFC3B664DB39806D74BEB50C9C4">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Swing1</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=169310429</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX105C53F72E7B4A55B7C26AD259E5F029">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Swing2</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=169310436</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXDF6BB9360EF24D399CBE876030F746AE">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Swing3</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=169310447</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX1F56C3E62C91442EA7A1C91B0A82C2F6">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Swing4</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=169310455</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBXFA8C2329D5614D96909D5CC4F493D57C">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=192911538</url></Content>
				<string name="Name">Equip</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX307C2802A99C46029D68EBE853C5A4E1">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=193330490</url></Content>
				<string name="Name">Whack</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXB26D8A06238F4B32907A19E720DEAA36">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = &quot;rbxasset://textures/GunCursor.png&quot;
Reloading_Icon = &quot;rbxasset://textures/GunWaitCursor.png&quot;

Tool = script.Parent

Mouse = nil

function UpdateIcon()
&#9;if Mouse then
&#9;&#9;Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
&#9;end
end

function OnEquipped(ToolMouse)
&#9;Mouse = ToolMouse
&#9;UpdateIcon()
end

function OnChanged(Property)
&#9;if Property == &quot;Enabled&quot; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX6430AFCFC9BE47629138FE43654A45AC">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

CameraShake = script:WaitForChild(&quot;CameraShake&quot;)

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

Animations = {
&#9;Equip = {Animation = Tool:WaitForChild(&quot;Equip&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
&#9;Whack = {Animation = Tool:WaitForChild(&quot;Whack&quot;), FadeTime = nil, Weight = nil, Speed = 4, Duration = 0.85, Damage = {Min = 20, Max = 30}},
&#9;Bash = {Animation = Tool:WaitForChild(&quot;Bash&quot;), FadeTime = nil, Weight = nil, Speed = 4, Duration = 0.85, Damage = {Min = 15, Max = 20}},
&#9;SideSwipe = {Animation = Tool:WaitForChild(&quot;SideSwipe&quot;), FadeTime = nil, Weight = nil, Speed = 4, Duration = 0.85, Damage = {Min = 12, Max = 16}}
}

Sounds = {
&#9;Swing1 = Handle:WaitForChild(&quot;Swing1&quot;),
&#9;Swing2 = Handle:WaitForChild(&quot;Swing2&quot;),
&#9;Swing3 = Handle:WaitForChild(&quot;Swing3&quot;),
&#9;Swing4 = Handle:WaitForChild(&quot;Swing4&quot;),
&#9;Hit = Handle:WaitForChild(&quot;Hit&quot;),
}

Grips = {
&#9;Unequipped = CFrame.new(0, 0, 1.5, 0, 0, -1, 1, 0, 0, 0, -1, -0),
&#9;Equipped = CFrame.new(-0.25, -0.25, 1.5, -0.379485011, 0.508547366, -0.772897601, 0.75745213, 0.650476396, 0.0560958609, 0.531279027, -0.564145386, -0.632046342)
}

ToolEquipped = false

Clicks = 0
FirstClick = false

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Tool.Grip = Grips.Unequipped
Tool.Enabled = true

ServerControl.OnServerInvoke = (function(player, Mode, Value)
&#9;if player == Player then
&#9;&#9;if Mode == &quot;MouseClick&quot; and Value.Down then
&#9;&#9;&#9;Activated()
&#9;&#9;elseif Mode == &quot;HumanoidJumped&quot; and Value then
&#9;&#9;&#9;
&#9;&#9;end
&#9;end
end)

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function Billboard(Pos, Text, Time, Color)
&#9;local Rate = (1 / 30)
&#9;local Pos = (Pos or Vector3.new(0, 0, 0))
&#9;local Text = (Text or &quot;&quot;)
&#9;local Time = (Time or 2)
&#9;local Color = (Color or Color3.new(1, 0, 0))
&#9;local EffectPart = BasePart:Clone()
&#9;EffectPart.Name = &quot;Effect&quot;
&#9;EffectPart.Size = Vector3.new(0, 0, 0)
&#9;EffectPart.CFrame = CFrame.new(Pos)
&#9;EffectPart.Anchored = true
&#9;EffectPart.CanCollide = false
&#9;EffectPart.Transparency = 1
&#9;local BillboardGui = Instance.new(&quot;BillboardGui&quot;)
&#9;BillboardGui.Size = UDim2.new(3, 0, 3, 0)
&#9;BillboardGui.Adornee = EffectPart
&#9;local TextLabel = Instance.new(&quot;TextLabel&quot;)
&#9;TextLabel.BackgroundTransparency = 1
&#9;TextLabel.Size = UDim2.new(1, 0, 1, 0)
&#9;TextLabel.Text = Text
&#9;TextLabel.TextColor3 = Color
&#9;TextLabel.TextScaled = true
&#9;TextLabel.Font = Enum.Font.ArialBold
&#9;TextLabel.Parent = BillboardGui
&#9;BillboardGui.Parent = EffectPart
&#9;Debris:AddItem(EffectPart, (Time + 0.1))
&#9;EffectPart.Parent = game:GetService(&quot;Workspace&quot;)
&#9;Delay(0, function()
&#9;&#9;local Frames = (Time / Rate)
&#9;&#9;for Frame = 1, Frames do
&#9;&#9;&#9;wait(Rate)
&#9;&#9;&#9;local Percent = (Frame / Frames)
&#9;&#9;&#9;EffectPart.CFrame = CFrame.new(Pos) + Vector3.new(0, Percent, 0)
&#9;&#9;&#9;TextLabel.TextTransparency = Percent
&#9;&#9;end
&#9;&#9;if EffectPart and EffectPart.Parent then
&#9;&#9;&#9;EffectPart:Destroy()
&#9;&#9;end
&#9;end)
end

function Blow(Hit)
&#9;if not Hit or not Hit.Parent or not CheckIfAlive() or not CurrentAnimation then
&#9;&#9;return
&#9;end
&#9;local character = Hit.Parent
&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if character == Character or not humanoid or humanoid.Health == 0 or humanoid == Humanoid then
&#9;&#9;return
&#9;end
&#9;local RightArm = Character:FindFirstChild(&quot;Right Arm&quot;)
&#9;if not RightArm then
&#9;&#9;return
&#9;end
&#9;local RightGrip = RightArm:FindFirstChild(&quot;RightGrip&quot;)
&#9;if not RightGrip or (RightGrip.Part0 ~= RightArm and RightGrip.Part1 ~= RightArm) then
&#9;&#9;return
&#9;end
&#9;local HumanoidFound = false
&#9;for i, v in pairs(HitHumanoids) do
&#9;&#9;if v.Humanoid == humanoid then
&#9;&#9;&#9;local Index = HitHumanoids[i]
&#9;&#9;&#9;Index.Hits = (Index.Hits + 1)
&#9;&#9;&#9;HitHumanoids[i] = Index
&#9;&#9;&#9;if Index.Hits &gt;= Index.MaxHits then
&#9;&#9;&#9;&#9;HumanoidFound = true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;if HumanoidFound then
&#9;&#9;return
&#9;end
&#9;if CurrentAnimation == Animations.Whack then
&#9;&#9;local ShakeDuration = 5
&#9;&#9;local player = Players:GetPlayerFromCharacter(character)
&#9;&#9;if player then
&#9;&#9;&#9;local playergui = player:FindFirstChild(&quot;PlayerGui&quot;)
&#9;&#9;&#9;if playergui then
&#9;&#9;&#9;&#9;local CameraShakeScript = playergui:FindFirstChild(&quot;CameraShake&quot;)
&#9;&#9;&#9;&#9;if not CameraShakeScript then
&#9;&#9;&#9;&#9;&#9;CameraShakeScript = CameraShake:Clone()
&#9;&#9;&#9;&#9;&#9;CameraShakeScript.Disabled = false
&#9;&#9;&#9;&#9;&#9;local DurationValue = Instance.new(&quot;NumberValue&quot;)
&#9;&#9;&#9;&#9;&#9;DurationValue.Name = &quot;Duration&quot;
&#9;&#9;&#9;&#9;&#9;DurationValue.Parent = CameraShakeScript
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;local Duration = CameraShakeScript:FindFirstChild(&quot;Duration&quot;)
&#9;&#9;&#9;&#9;if Duration then
&#9;&#9;&#9;&#9;&#9;Duration.Value = ShakeDuration
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;CameraShakeScript.Parent = playergui
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;Sounds.Hit:Play()
&#9;table.insert(HitHumanoids, {Humanoid = humanoid, Hits = 0, MaxHits = math.random(1, 3)})
&#9;UntagHumanoid(humanoid)
&#9;TagHumanoid(humanoid, Player)
&#9;local DamageValue = CurrentAnimation.Damage
&#9;local DamageAmount = math.random(DamageValue.Min, DamageValue.Max)
&#9;local Radius = Vector3.new(1.25, 0.25, 1.25)
&#9;Radius = (Radius * 100)
&#9;local Offset = Vector3.new(math.random(-Radius.X, Radius.X), math.random(-Radius.Y, Radius.Y), math.random(-Radius.Z, Radius.Z))
&#9;Offset = Offset * Vector3.new(0.01, 0.01, 0.01)
&#9;Billboard((Handle.Position + Offset + Vector3.new(0, 2.5, 0)), DamageAmount, 2, BrickColor.new(&quot;Really red&quot;).Color)
&#9;humanoid:TakeDamage(DamageAmount)
end

function Activated()
&#9;if not Tool.Enabled or not ToolEquipped then
&#9;&#9;return
&#9;end
&#9;Clicks = (Clicks + 1)
&#9;if not FirstClick then
&#9;&#9;FirstClick = true
&#9;&#9;local CurrentlyEquipped = true
&#9;&#9;ToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;&#9;CurrentlyEquipped = false
&#9;&#9;end)
&#9;&#9;wait(0.15)
&#9;&#9;if ToolUnequipped then
&#9;&#9;&#9;ToolUnequipped:disconnect()
&#9;&#9;end
&#9;&#9;if not CurrentlyEquipped then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;Tool.Enabled = false
&#9;&#9;local SingleClickAnims = {Animations.Bash}
&#9;&#9;local DoubleClickAnims = {Animations.Whack, Animations.SideSwipe}
&#9;&#9;local SlashSounds = {Sounds.Swing1, Sounds.Swing2, Sounds.Swing3, Sounds.Swing4}
&#9;&#9;SlashSounds[math.random(1, #SlashSounds)]:Play()
&#9;&#9;CurrentAnimation = (((Clicks &lt; 2 or #DoubleClickAnims == 0) and SingleClickAnims[math.random(1, #SingleClickAnims)]) or DoubleClickAnims[math.random(1, #DoubleClickAnims)])
&#9;&#9;Tool.Grip = Grips.Unequipped
&#9;&#9;HitHumanoids = {}
&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, CurrentAnimation)
&#9;&#9;wait(CurrentAnimation.Duration)
&#9;&#9;HitHumanoids = {}
&#9;&#9;Tool.Grip = Grips.Equipped
&#9;&#9;CurrentAnimation = nil
&#9;&#9;FirstClick = false
&#9;&#9;Clicks = 0
&#9;&#9;Tool.Enabled = true
&#9;end
end

function CheckIfAlive()
&#9;return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0) and true) or false)
end

function Equipped()
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;local CurrentlyEquipped = true
&#9;EquippedToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;CurrentlyEquipped = false
&#9;end)
&#9;if EquippedToolUnequipped then
&#9;&#9;EquippedToolUnequipped:disconnect()
&#9;end
&#9;if not CurrentlyEquipped then
&#9;&#9;return
&#9;end
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.Animation then
&#9;&#9;&#9;InvokeClient(&quot;Preload&quot;, v.Animation.AnimationId)
&#9;&#9;end
&#9;end
&#9;wait(0.125)
&#9;if CurrentlyEquipped then
&#9;&#9;Tool.Grip = Grips.Equipped
&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.Equip)
&#9;&#9;ToolEquipped = true
&#9;end
&#9;Spawn(function()
&#9;&#9;local RightArm = Character:WaitForChild(&quot;Right Arm&quot;)
&#9;&#9;if CurrentlyEquipped then
&#9;&#9;&#9;InvokeClient(&quot;SetLocalTransparencyModifier&quot;, {Object = RightArm, Transparency = 0, AutoUpdate = false})
&#9;&#9;end
&#9;end)
end

function Unequipped()
&#9;Clicks = 0
&#9;FirstClick = false
&#9;for i, v in pairs({EquippedToolUnequipped, ToolUnequipped}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(Animations) do
&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;end
&#9;Tool.Grip = Grips.Unequipped
&#9;ToolEquipped = false
end

Handle.Touched:connect(Blow)

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
			<Item class="LocalScript" referent="RBXEA32FC2E6099489C9E388ECFA163342A">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">CameraShake</string>
					<ProtectedString name="Source">--Made by Luckymaxer

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Debris = game:GetService(&quot;Debris&quot;)

Duration = script:WaitForChild(&quot;Duration&quot;)

while Duration and Duration.Parent and Duration.Value &gt; 0 do
&#9;local CameraRotation = Camera.CoordinateFrame - Camera.CoordinateFrame.p
&#9;local CameraScroll = (Camera.CoordinateFrame.p - Camera.Focus.p).magnitude
&#9;local NewCFrame = CFrame.new(Camera.Focus.p) * CameraRotation * CFrame.fromEulerAnglesXYZ((math.random(-10, 10) / 40), (math.random(-10, 10) / 40), 0)
&#9;Camera.CoordinateFrame = NewCFrame * CFrame.new(0, 0, CameraScroll)
&#9;Duration.Value = (Duration.Value - 0.1)
&#9;wait(.1)
end

Debris:AddItem(script, 1)</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBXDC57E5D8728A46E09BC58D3F9B1A5FC3">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=193343548</url></Content>
				<string name="Name">Bash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXEFC0D8EA431E4FA29BC4EA58AE7A3E7B">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=193347454</url></Content>
				<string name="Name">SideSwipe</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXB6F47EB08F1C4C11ACB28AB7720882A8">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
ContentProvider = game:GetService(&quot;ContentProvider&quot;)
RunService = game:GetService(&quot;RunService&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ToolEquipped = false

ClientControl.OnClientInvoke = (function(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;SetAnimation(&quot;PlayAnimation&quot;, Value)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;SetAnimation(&quot;StopAnimation&quot;, Value)
&#9;elseif Mode == &quot;Preload&quot; and Value then
&#9;&#9;ContentProvider:Preload(Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;elseif Mode == &quot;DisableJump&quot; then
&#9;&#9;DisableJump(Value)
&#9;elseif Mode == &quot;SetMouseIcon&quot; and Value then
&#9;&#9;PlayerMouse.Icon = Value
&#9;elseif Mode == &quot;SetLocalTransparencyModifier&quot; and Value and ToolEquipped then
&#9;&#9;pcall(function()
&#9;&#9;&#9;local ObjectFound = false
&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;if v == Value then
&#9;&#9;&#9;&#9;&#9;ObjectFound = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;if not ObjectFound then
&#9;&#9;&#9;&#9;table.insert(LocalObjects, Value)
&#9;&#9;&#9;&#9;if ObjectLocalTransparencyModifier then
&#9;&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier:disconnect()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
&#9;&#9;&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;&#9;&#9;if v.Object and v.Object.Parent and ((not v.AutoUpdate and (v.Object.LocalTransparencyModifier == 1 or  v.Object.LocalTransparencyModifier == 0)) or v.AutoUpdate) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Object.LocalTransparencyModifier = v.Transparency
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;elseif Mode == &quot;SetMouseSensitivity&quot; and Value then
&#9;&#9;if Value.Sensitivity == 1 then
&#9;&#9;&#9;if MouseSensivityConnection then
&#9;&#9;&#9;&#9;MouseSensivityConnection:disconnect()
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;SetMouseSensitivity(Value.Sensitivity)
&#9;&#9;end
&#9;elseif Mode == &quot;GetProperty&quot; then
&#9;&#9;local PropertyValue = nil
&#9;&#9;pcall(function()
&#9;&#9;&#9;PropertyValue = Value.Object[Value.Property]
&#9;&#9;end)
&#9;&#9;return PropertyValue
&#9;end
end)

function InvokeServer(Mode, Value)
&#9;pcall(function()
&#9;&#9;local ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;&#9;return ServerReturn
&#9;end)
end

function SetAnimation(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function DisableJump(Boolean)
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;if Boolean then
&#9;&#9;PreventJump = Humanoid.Changed:connect(function(Property)
&#9;&#9;&#9;if Property ==  &quot;Jump&quot; then
&#9;&#9;&#9;&#9;Humanoid.Jump = false
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

function SetMouseSensitivity(Sensitivity)

&#9;if MouseSensivityConnection then
&#9;&#9;MouseSensivityConnection:disconnect()
&#9;end&#9;
&#9;
&#9;local function EulerAnglesYX(cframe)
&#9;&#9;local X, Y, Z, R00, R01, R02, R10, R11, R12, R20, R21, R22 = cframe:components(cframe)
&#9;&#9;return -math.asin(R12), ((math.abs(R12) &gt; 0.99999 and -math.atan2(-R20, R00)) or -math.atan2(-R02, R22))
&#9;end
&#9;
&#9;local DirectionX, DirectionY = EulerAnglesYX(Camera.CoordinateFrame)
&#9;
&#9;local function UpdateSensitivity()
&#9;&#9;local CFrameX, CFrameY = EulerAnglesYX(Camera.CoordinateFrame)
&#9;&#9;DirectionX = (DirectionX * (1 - Sensitivity) + (CFrameX + (math.pi * 2) * math.floor((DirectionX - CFrameX) / (math.pi * 2) + 0.5)) * Sensitivity)
&#9;&#9;DirectionY = (DirectionY * (1 - Sensitivity) + (CFrameY + (math.pi * 2) * math.floor((DirectionY - CFrameY) / (math.pi * 2) + 0.5)) * Sensitivity)
&#9;&#9;Camera.CoordinateFrame = CFrame.Angles(0, DirectionY, 0) * CFrame.Angles(DirectionX, 0, 0) * CFrame.new(0, 0, 0.5) + Camera.Focus.p
&#9;end
&#9;
&#9;MouseSensivityConnection = RunService.RenderStepped:connect(UpdateSensitivity)
&#9;
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;ToolEquipped = true
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
&#9;Mouse.WheelForward:connect(function()
&#9;&#9;InvokeServer(&quot;WheelMoved&quot;, {Forward = true})
&#9;end)
&#9;Mouse.WheelBackward:connect(function()
&#9;&#9;InvokeServer(&quot;WheelMoved&quot;, {Forward = false})
&#9;end)
end

function Unequipped()
&#9;ToolEquipped = false
&#9;LocalObjects = {}
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs({PreventJump, MouseSensivityConnection, ObjectLocalTransparencyModifier}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;PlayerMouse.Icon = &quot;&quot;
&#9;Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBXBE9E75995A8146808405E18B3CE10BC9">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-2.02938318</X>
					<Y>6.67521381</Y>
					<Z>9.06862736</Z>
					<R00>0.0558288619</R00>
					<R01>-0.574111521</R01>
					<R02>0.816871464</R02>
					<R10>-0</R10>
					<R11>0.81814748</R11>
					<R12>0.575008333</R12>
					<R20>-0.998440325</R20>
					<R21>-0.0321020596</R21>
					<R22>0.0456762463</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-3.66312551</X>
					<Y>5.52519751</Y>
					<Z>8.97727489</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>