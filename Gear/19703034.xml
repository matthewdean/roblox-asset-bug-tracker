<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.699999988</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">XmasTree2</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=19701375</url></Content>
			<bool name="archivable">true</bool>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>10.5</X>
					<Y>5.20000029</Y>
					<Z>69.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">1</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>2.4000001</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=19646118</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.699999988</X>
						<Y>0.699999988</Y>
						<Z>0.699999988</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=19646165</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX3">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">SlingshotSound</string>
					<float name="Pitch">1</float>
					<int name="PlayCount">-1</int>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds\\Rubber band sling shot.wav</url></Content>
					<float name="Volume">1</float>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX4">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Local Gui</string>
				<string name="Source">local Tool = script.Parent;

local fireRate = .2

enabled = true
function onButton1Down(mouse)
	if not enabled then
		return
	end

	enabled = false
	mouse.Icon = &quot;rbxasset://textures\\GunWaitCursor.png&quot;

	wait(fireRate)
	mouse.Icon = &quot;rbxasset://textures\\GunCursor.png&quot;
	enabled = true

end

function onEquippedLocal(mouse)

	if mouse == nil then
		print(&quot;Mouse not found&quot;)
		return 
	end

	mouse.Icon = &quot;rbxasset://textures\\GunCursor.png&quot;
	mouse.Button1Down:connect(function() onButton1Down(mouse) end)
end



Tool.Equipped:connect(onEquippedLocal)
</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX5">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Slingshot</string>
				<string name="Source">Tool = script.Parent
VELOCITY = 85 -- constant
FIRERATE = 2

local Pellet = Instance.new(&quot;Part&quot;)
Pellet.Locked = true
Pellet.BackSurface = 0
Pellet.BottomSurface = 0
Pellet.FrontSurface = 0
Pellet.LeftSurface = 0
Pellet.RightSurface = 0
Pellet.TopSurface = 0
Pellet.Shape = 0
Pellet.Size = Vector3.new(1,1,1)
Pellet.BrickColor = BrickColor.new(&quot;CGA brown&quot;)
Pellet.Material = Enum.Material.Grass
script.Parent.PelletScript:clone().Parent = Pellet

function fire(mouse_pos)


	Tool.Handle.SlingshotSound:play()

-- find player&apos;s head pos

	local vCharacter = Tool.Parent
	local vPlayer = game.Players:playerFromCharacter(vCharacter)

	--local head = vCharacter:findFirstChild(&quot;Head&quot;)

	local head = locateHead()
	if head == nil then return end


	--computes a the intended direction of the projectile based on where the mouse was clicked in reference to the head
	local dir = mouse_pos - head.Position
	dir = computeDirection(dir)

	local launch = head.Position + 3 * dir

	local delta = mouse_pos - launch
	
	local dy = delta.y
	
	local new_delta = Vector3.new(delta.x, 0, delta.z)
	delta = new_delta

	local dx = delta.magnitude
	local unit_delta = delta.unit
	
	-- acceleration due to gravity in RBX units
	local g = (-9.81 * 20)

	local theta = computeLaunchAngle( dx, dy, g)

	local vy = math.sin(theta)
	local xz = math.cos(theta)
	local vx = unit_delta.x * xz
	local vz = unit_delta.z * xz
	

	local missile = Pellet:clone()
        

		

	missile.Position = launch
	missile.Velocity = Vector3.new(vx,vy,vz) * VELOCITY

	missile.PelletScript.Disabled = false

	local creator_tag = Instance.new(&quot;ObjectValue&quot;)
	creator_tag.Value = vPlayer
	creator_tag.Name = &quot;creator&quot;
	creator_tag.Parent = missile
	
	missile.Parent = game.Workspace

end

function locateHead()
	local vCharacter = Tool.Parent
	local vPlayer = game.Players:playerFromCharacter(vCharacter)

	return vCharacter:findFirstChild(&quot;Head&quot;)
end
	

function computeLaunchAngle(dx,dy,grav)
	-- arcane
	-- http://en.wikipedia.org/wiki/Trajectory_of_a_projectile
	
	local g = math.abs(grav)
	local inRoot = (VELOCITY*VELOCITY*VELOCITY*VELOCITY) - (g * ((g*dx*dx) + (2*dy*VELOCITY*VELOCITY)))
	if inRoot &lt;= 0 then
		return .25 * math.pi
	end
	local root = math.sqrt(inRoot)
	local inATan1 = ((VELOCITY*VELOCITY) + root) / (g*dx)

	local inATan2 = ((VELOCITY*VELOCITY) - root) / (g*dx)
	local answer1 = math.atan(inATan1)
	local answer2 = math.atan(inATan2)
	if answer1 &lt; answer2 then return answer1 end
	return answer2
end

function computeDirection(vec)
	local lenSquared = vec.magnitude * vec.magnitude
	local invSqrt = 1 / math.sqrt(lenSquared)
	return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end




Tool.Enabled = true
function onActivated()

	if not Tool.Enabled then
		return
	end

	Tool.Enabled = false

	local character = Tool.Parent;
	local humanoid = character.Humanoid
	if humanoid == nil then
		print(&quot;Humanoid not found&quot;)
		return 
	end

	local targetPos = humanoid.TargetPoint

	fire(targetPos)

	wait(FIRERATE)

	Tool.Enabled = true
end

script.Parent.Activated:connect(onActivated)


</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX6">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">PelletScript</string>
				<string name="Source">local debris = game:service(&quot;Debris&quot;)
pellet = script.Parent
damage = 8

local Base = Instance.new(&quot;Part&quot;)
Base.Name = &quot;XMASBase&quot;
Base.BackSurface = &quot;Smooth&quot;
Base.BottomSurface = &quot;Smooth&quot;
Base.FrontSurface = &quot;Smooth&quot;
Base.LeftSurface = 0
Base.RightSurface = 0
Base.TopSurface = &quot;Smooth&quot;
Base.Shape = 1
Base.Size = Vector3.new(2,3.2,2) --4,3,4
Base.BrickColor = BrickColor.new(192)
Base.Locked = true
Base.Material = &quot;Wood&quot;


local Branch = Instance.new(&quot;Part&quot;)
Branch.Name = &quot;XMAS&quot;
Branch.Material = &quot;Plastic&quot;
Branch.BrickColor = BrickColor.new(37)
Branch.Material = &quot;Grass&quot;
Branch.BackSurface = &quot;Smooth&quot;
Branch.BottomSurface = &quot;Smooth&quot;
Branch.FrontSurface = &quot;Smooth&quot;
Branch.LeftSurface = &quot;Smooth&quot;
Branch.RightSurface = &quot;Smooth&quot;
Branch.TopSurface = &quot;Smooth&quot;
Branch.Shape = 1
Branch.Locked = true


function onTouched(hit)
	--[[humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
	if humanoid~=nil then
		tagHumanoid(humanoid)
		humanoid:TakeDamage(damage)
	else
		damage = damage / 2
		if damage &lt; 1 then
			connection:disconnect()
			pellet.Parent = nil
		end
	end
	--]]

	local tree = Instance.new(&quot;Model&quot;)


	local bottom = Base:clone()
	bottom.Position = pellet.Position  + Vector3.new(0,1,0)
	bottom.Parent = tree
	tree.Parent = game.Workspace


	local level = Branch:clone()
	level.Size = Vector3.new(9,1.4, 9)  --13
	level.Position = bottom.Position --+ Vector3.new(0,2,0)
	level.Parent = tree

	
	w2 = Instance.new(&quot;Weld&quot;)
	w2.Name = &quot;treeWeld&quot; 
	w2.Part0 = bottom
	w2.Part1 = level
	w2.C0 = CFrame.new(0,0,0)
	w2.C1 = CFrame.new(0,-1.4,0)
	w2.Parent = game.Workspace

	buildBlocks = {}
	buildBlocks[0] = level

	for i=1,7 do
		buildBlock = Branch:clone()
		buildBlock.Size = Vector3.new(9- (1*i),1.4,9-(1*i))
		buildBlock.Position = level.Position + Vector3.new(0,1.4,0)
		buildBlock.Parent = tree
		buildBlocks[i] = buildBlock
		

		treeWeld = Instance.new(&quot;Weld&quot;)
		treeWeld.Name = &quot;treeWeld&quot;
		treeWeld.Part0 = buildBlocks[i-1]
		treeWeld.Part1 = buildBlocks[i]
		treeWeld.C0 = CFrame.new(0,0,0)
		treeWeld.C1 = CFrame.new(0,-1.2,0)
		treeWeld.Parent = game.Workspace

	end

	debris:AddItem(tree, 300)

	pellet.Parent = nil
end



connection = pellet.Touched:connect(onTouched)

r = game:service(&quot;RunService&quot;)
t, s = r.Stepped:wait()
d = t + 2.0 - s
while t &lt; d do
	t = r.Stepped:wait()
end

pellet.Parent = nil</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
	</Item>
</roblox>