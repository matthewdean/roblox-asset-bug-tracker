<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>0.800000012</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">BeachBall</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=25967670</url></Content>
			<bool name="archivable">true</bool>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>26.5</X>
					<Y>2</Y>
					<Z>6.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">1</float>
				<token name="FormFactor">0</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">0</token>
				<Vector3 name="size">
					<X>2</X>
					<Y>2</Y>
					<Z>2</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=25964275</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=25964268</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX3">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">BeachBallHit</string>
					<float name="Pitch">1</float>
					<int name="PlayCount">-1</int>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=25495689</url></Content>
					<float name="Volume">0.5</float>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX4">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">BeachBallRiff</string>
					<float name="Pitch">1</float>
					<int name="PlayCount">-1</int>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=25495733</url></Content>
					<float name="Volume">0.800000012</float>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX5">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">BounceBallScript</string>
				<ProtectedString name="Source">local Tool = script.Parent
local bounceCount = 0
local enabled = true
local beenActivated = false
local healPlayers = false
local bounceUp = Instance.new(&quot;BodyPosition&quot;)
local bounceAround = Instance.new(&quot;BodyForce&quot;)

function onTouched(part)
	
	local h = part.Parent:FindFirstChild(&quot;Humanoid&quot;)
	if h ~= nil and beenActivated then
		
		if Tool.Handle.BeachBallHit.IsPlaying == false then
			Tool.Handle.BeachBallHit:Play()
		end
		
		if healPlayers then
			if h.Health &lt; h.MaxHealth then
				h.Health = h.Health + 2
				if h.Health &gt; h.MaxHealth then
					h.Health = h.MaxHealth
				end
			end
		end

		bounceCount = bounceCount + 1

		local torsoNormal = h.Parent:FindFirstChild(&quot;Torso&quot;, false).CFrame.lookVector
		local distanceToBounce = 30
		local bounceVectorX = distanceToBounce
		local bounceVectorZ = distanceToBounce

		local denom = math.abs(torsoNormal.x) + math.abs(torsoNormal.z)
		bounceVectorX = bounceVectorX * (torsoNormal.x/denom)
		bounceVectorZ = bounceVectorZ * (torsoNormal.z/denom)

		local torso = h.Parent:FindFirstChild(&quot;Torso&quot;, false)
		bounceVectorX = bounceVectorX * math.abs(torso.Velocity.x/h.WalkSpeed)
		bounceVectorZ = bounceVectorZ * math.abs(torso.Velocity.y/h.WalkSpeed)

		local upToHere = torso.Position.y + 35
		bounceUp.position = Vector3.new(Tool.Handle.Position.x + bounceVectorX,upToHere,Tool.Handle.Position.z + bounceVectorZ)
		bounceUp.maxForce = Vector3.new(250,500,250)
		bounceUp.P = 500
		bounceUp.D = 400
		bounceUp.Parent = Tool.Handle
		wait(1)
		bounceUp.Parent = nil
		wait(0.2)
		bounceUp.Parent = Tool.Handle
		bounceUp.position = Vector3.new(Tool.Handle.Position.x  + bounceVectorX/2,upToHere - 35,Tool.Handle.Position.z +  bounceVectorZ/2)
		wait(1)
		bounceUp.Parent = nil
		
	end

	if bounceCount &gt;= 9 then

		if Tool.Handle.BeachBallRiff.IsPlaying == false then
			Tool.Handle.BeachBallRiff:Play()
		end

		
		if healPlayers == false then
			sparkly = Instance.new(&quot;Sparkles&quot;)
			sparkly.SparkleColor = Color3.new(math.random(0,1),math.random(-1,0.5),math.random(0,1))
			sparkly.Parent = Tool.Handle
			healPlayers = true
		end

		bounceCount = 0

	end

end

Tool.Handle.Touched:connect(onTouched)


function onActivated()

	if not enabled  then
		return
	end

	enabled = false

	local h = Tool.Parent:FindFirstChild(&quot;Humanoid&quot;)
	if h ~= nil then
		local playerPos = h.Parent:FindFirstChild(&quot;Torso&quot;)
		if playerPos ~= nil then

			beenActivated = true
			playerPos = playerPos.Position
			local torsoNormal = h.Parent:FindFirstChild(&quot;Torso&quot;, false).CFrame.lookVector
			local distanceToBounce = 20
			local bounceVectorX = distanceToBounce
			local bounceVectorZ = distanceToBounce

			denom = math.abs(torsoNormal.x) + math.abs(torsoNormal.z)
			bounceVectorX = bounceVectorX * (torsoNormal.x/denom)
			bounceVectorZ = bounceVectorZ * (torsoNormal.z/denom)
			
			bounceUp.position = Vector3.new(playerPos.x + bounceVectorX ,playerPos.y + distanceToBounce + 15,playerPos.z + bounceVectorZ)
			bounceUp.Parent = Tool.Handle
			bounceUp.D = 30
			bounceUp.P = 70
			h.Jump = true
			Tool.Parent = game.Workspace
			wait(0.3)

			bounceUp.Parent = nil
			wait(0.1)

			bounceUp.Parent = Tool.Handle
			bounceUp.P = 31
			bounceUp.D =  17
			bounceUp.position = Vector3.new(playerPos.x + (bounceVectorX * 2),playerPos.y,playerPos.z + (bounceVectorZ * 2))
			wait(0.5)

			bounceUp.Parent = nil
			
		end
	end
	enabled = true

end

Tool.Activated:connect(onActivated)

</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
	</Item>
</roblox>