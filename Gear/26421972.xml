<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>-1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>-1</R22>
			</CoordinateFrame>
			<string name="Name">ZombieStaff</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=26337878</url></Content>
			<bool name="archivable">true</bool>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-255.5</X>
					<Y>18.3999996</Y>
					<Z>-302.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">1</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>6</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=25922532</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=25922670</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX3">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">SummonZombies!</string>
				<ProtectedString name="Source">Tool = script.Parent

local debris = game:service(&quot;Debris&quot;)
zombies = 5
reloadTime = 30
Tool.Enabled = true

function fire(targetPos, humanoid)

	insertZombies(targetPos, humanoid)

end

function insertZombies(pos, humanoid)

	amountInFront = 15
	torsoNormal = humanoid.Parent.Torso.CFrame.lookVector
	denom = math.abs(torsoNormal.x) + math.abs(torsoNormal.z)
	posX = amountInFront * (torsoNormal.x/denom)
	posZ = amountInFront * (torsoNormal.z/denom)
	pos = Vector3.new(pos.x + posX,pos.y, pos.z + posZ)

	smoker = Instance.new(&quot;Smoke&quot;)

	smokeEmitter = Instance.new(&quot;Part&quot;)
	smokeEmitter.Size = Vector3.new(1,1,1)
	smokeEmitter.Transparency = 1
	smokeEmitter.Position = pos
	smokeEmitter.Anchored = true
	smokeEmitter.CanCollide = false
	
	smoker.Parent = smokeEmitter
	smokeEmitter.Parent = game.Workspace

	debris:AddItem(smokeEmitter, 10)

	wait(1)


	for i = 1, 5 do

		--This call will cause a &quot;wait&quot; until the data comes back
		local root = game:GetService(&quot;InsertService&quot;):LoadAsset(26612470)

		local instances = root:GetChildren()
		if #instances == 0 then
			root:Remove()
			return
		end

		--Continue the insert process

		local zombeh = root.SummonedZombie
		zombeh.Owner.Value = humanoid

		local keepYoHead = Instance.new(&quot;Weld&quot;)
		keepYoHead.Part0 = zombeh.Head
		keepYoHead.Part1 = zombeh.Torso
		keepYoHead.C0 = CFrame.new(0,-1.5,0)
		keepYoHead.Parent = zombeh.Head

		local Robotron = Tool.Robot:clone()
		local Chaser = Tool.ChaseScript:clone()
		local SoundMan = Tool.PlaySounds:clone()
		local GarbageMan = Tool.Timer:clone()
		Chaser.Parent = zombeh
		Robotron.Parent = zombeh
		SoundMan.Parent = zombeh.Head
		GarbageMan.Parent = zombeh
		local spacing = 4
		--game:GetService(&quot;InsertService&quot;):Insert(zombeh)
		zombeh.Parent = game.Workspace
		if i == 1 then
			zombeh:moveTo(Vector3.new(pos.x + spacing, pos.y,pos.z + spacing))
		elseif i == 2 then
			zombeh:moveTo(Vector3.new(pos.x - spacing, pos.y,pos.z + spacing))
		elseif i == 3 then
			zombeh:moveTo(Vector3.new(pos.x + spacing, pos.y,pos.z - spacing))
		elseif i == 4 then
			zombeh:moveTo(Vector3.new(pos.x - spacing, pos.y,pos.z - spacing))
		elseif i == 5 then
			zombeh:moveTo(pos)
		end

	end
	
end


function onActivated()

	if not Tool.Enabled then
		return
	end

	Tool.GripPos = Vector3.new(0,0.5,0)
	
	Tool.Enabled = false

	local character = Tool.Parent;
	local humanoid = character.Humanoid
	if humanoid == nil then
		print(&quot;Humanoid not found&quot;)
		return 
	end

	local targetPos = humanoid.Parent.Torso.Position

	wait(0.5)
	Tool.GripPos = Vector3.new(0,0,0)

	fire(targetPos, humanoid)
	wait(reloadTime)

	Tool.Enabled = true
end

Tool.Activated:connect(onActivated)
</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX4">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">ChaseScript</string>
				<ProtectedString name="Source">wait(3)
zombieParent = false

while zombieParent == false do

	wait(1)
	if script.Parent.Name == &quot;SummonedZombie&quot; then
		zombieParent = true
	end

end

local larm = script.Parent:FindFirstChild(&quot;Left Arm&quot;)
local rarm = script.Parent:FindFirstChild(&quot;Right Arm&quot;)
local waitTimer = 0

function findNearestTorso(pos)
	local list = game.Workspace:children()
	local torso = nil
	local dist = 100
	local temp = nil
	local human = nil
	local temp2 = nil
	for x = 1, #list do
		temp2 = list[x]
		if (temp2.className == &quot;Model&quot;) and (temp2 ~= script.Parent) and (temp2.Name ~= &quot;SummonedZombie&quot;) then
			temp = temp2:findFirstChild(&quot;Torso&quot;)
			human = temp2:findFirstChild(&quot;Humanoid&quot;)
			if (temp ~= nil) and (human ~= nil) and (human.Health &gt; 0) and (human ~= script.Parent.Owner.Value) then
				if (temp.Position - pos).magnitude &lt; dist then
					torso = temp
					dist = (temp.Position - pos).magnitude
				end
			end
		end
	end
	return torso
end

function Hit(hit)
	local human = hit.Parent:FindFirstChild(&quot;Humanoid&quot;)
	if human ~= nil and human ~=  script.Parent.Owner.Value and waitTimer == 0 and human.Parent.Name ~= &quot;SummonedZombie&quot; then
		human:TakeDamage(20)
		waitTimer = 3
	end
end

larm.Touched:connect(Hit)
rarm.Touched:connect(Hit)

while true do
	wait(1)
	local target = findNearestTorso(script.Parent.Torso.Position)
	if target ~= nil then
		script.Parent.Humanoid:MoveTo(target.Position, target)
	end
	if waitTimer &gt; 0  then
		waitTimer = waitTimer - 1
	end
	if script.Parent.Humanoid.Health &lt; 1 then
		wait(3)
		script.Parent:remove()
	end
	jumper = math.random(1,2)
	if jumper == 2 then
		script.Parent.Humanoid.Jump = true
	end
end
</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX5">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Robot</string>
				<ProtectedString name="Source">zombieParent = false

while zombieParent == false do

	wait(0.5)
	if script.Parent.Name == &quot;SummonedZombie&quot; then
		zombieParent = true
	end

end

model = script.Parent
backup = model:Clone()
regentime = 1 --5 minutes

------------------
--SPAWNING--
------------------
miked=script.Parent

itlh=miked.Torso:findFirstChild(&quot;Left Hip&quot;)
itlh.Part0=miked.Torso
itlh.Part1=miked:findFirstChild(&quot;Left Leg&quot;)
itlh.C0=CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)

itrh=miked.Torso:findFirstChild(&quot;Right Hip&quot;)
itrh.Part0=miked.Torso
itrh.Part1=miked:findFirstChild(&quot;Right Leg&quot;)
itrh.C0=CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)

itls=miked.Torso:findFirstChild(&quot;Left Shoulder&quot;)
itls.Part1=miked.Torso
itls.C0=CFrame.new(2, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
itls.Part0=miked:findFirstChild(&quot;Left Arm&quot;)

itrs=miked.Torso:findFirstChild(&quot;Right Shoulder&quot;)
itrs.Part1=miked.Torso
itrs.C0=CFrame.new(-2, 0.5, 0, 0, 0, 1, 0, -1, 0, 1, 0, 0)
itrs.Part0=miked:findFirstChild(&quot;Right Arm&quot;)

miked.Head:makeJoints()

wait(3)
miked:findFirstChild(&quot;Left Arm&quot;).Anchored = false
miked:findFirstChild(&quot;Right Arm&quot;).Anchored = false
------------------
------------------


function waitForChild(parent, childName)
	while true do
		local child = parent:findFirstChild(childName)
		if child then
			return child
		end
		parent.ChildAdded:wait()
	end
end

local Figure = script.Parent
local Torso = waitForChild(Figure, &quot;Torso&quot;)
local RightShoulder = waitForChild(Torso, &quot;Right Shoulder&quot;)
local LeftShoulder = waitForChild(Torso, &quot;Left Shoulder&quot;)
local RightHip = waitForChild(Torso, &quot;Right Hip&quot;)
local LeftHip = waitForChild(Torso, &quot;Left Hip&quot;)
local Neck = waitForChild(Torso, &quot;Neck&quot;)
local Humanoid = waitForChild(Figure, &quot;Zombie&quot;)
local pose = &quot;Standing&quot;

local toolAnim = &quot;None&quot;
local toolAnimTime = 0

local isSeated = false


function onRunning(speed)
	if isSeated then return end

	if speed&gt;0 then
		pose = &quot;Running&quot;
	else
		pose = &quot;Standing&quot;
	end
end

function onDied()
	pose = &quot;Dead&quot;
        wait(regentime)
    wait(1)
    model:remove()
    model = backup:Clone()
    wait(3)
    model.Parent = game.Workspace
    model:MakeJoints()
end

function onJumping()
	isSeated = false
	pose = &quot;Jumping&quot;
end

function onClimbing()
	pose = &quot;Climbing&quot;
end

function onGettingUp()
	pose = &quot;GettingUp&quot;
end

function onFreeFall()
	pose = &quot;FreeFall&quot;
end

function onDancing()
	pose = &quot;Dancing&quot;
end

function onFallingDown()
	pose = &quot;FallingDown&quot;
end

function onSeated()
	isSeated = true
	pose = &quot;Seated&quot;
end



function moveJump()
	RightShoulder.MaxVelocity = 0.5
	LeftShoulder.MaxVelocity = 0.5
	RightShoulder.DesiredAngle = -3.14
	LeftShoulder.DesiredAngle = -3.14
	RightHip.DesiredAngle = 0
	LeftHip.DesiredAngle = 0
end

function moveFreeFall()
	RightShoulder.MaxVelocity = 0.5
	LeftShoulder.MaxVelocity = 0.5
	RightShoulder.DesiredAngle = -1
	LeftShoulder.DesiredAngle = -1
	RightHip.DesiredAngle = 0
	LeftHip.DesiredAngle = 0
end

function moveFloat()
	RightShoulder.MaxVelocity = 0.5
	LeftShoulder.MaxVelocity = 0.5
	RightShoulder.DesiredAngle = -1.57
	LeftShoulder.DesiredAngle = 1.57
	RightHip.DesiredAngle = 1.57
	LeftHip.DesiredAngle = -1.57
end

function moveBoogy()
while pose==&quot;Boogy&quot; do
	wait(.5)
	RightShoulder.MaxVelocity = 1
	LeftShoulder.MaxVelocity = 1
	RightShoulder.DesiredAngle = -3.14
	LeftShoulder.DesiredAngle = 0
	RightHip.DesiredAngle = 1.57
	LeftHip.DesiredAngle = 0
	wait(.5)
	RightShoulder.MaxVelocity = 1
	LeftShoulder.MaxVelocity = 1
	RightShoulder.DesiredAngle = 0
	LeftShoulder.DesiredAngle = -3.14
	RightHip.DesiredAngle = 0
	LeftHip.DesiredAngle = 1.57
end
end

function moveZombie()
	RightShoulder.MaxVelocity = 0.5
	LeftShoulder.MaxVelocity = 0.5
	RightShoulder.DesiredAngle = -1.57
	LeftShoulder.DesiredAngle = 1.57
	RightHip.DesiredAngle = 0
	LeftHip.DesiredAngle = 0
end

function movePunch()
	script.Parent.Torso.Anchored=true
	RightShoulder.MaxVelocity = 60
	LeftShoulder.MaxVelocity = 0.5
	RightShoulder.DesiredAngle = -1.57
	LeftShoulder.DesiredAngle = 0
	RightHip.DesiredAngle = 0
	LeftHip.DesiredAngle = 0
wait(1)
script.Parent.Torso.Anchored=false
pose=&quot;Standing&quot;

end

function moveKick()
	RightShoulder.MaxVelocity = 0.5
	LeftShoulder.MaxVelocity = 0.5
	RightShoulder.DesiredAngle = 0
	LeftShoulder.DesiredAngle = 0
	RightHip.MaxVelocity = 40
	RightHip.DesiredAngle = 1.57
	LeftHip.DesiredAngle = 0
wait(1)
pose=&quot;Standing&quot;

end

function moveFly()
	RightShoulder.MaxVelocity = 0.5
	LeftShoulder.MaxVelocity = 0.5
	RightShoulder.DesiredAngle = 0
	LeftShoulder.DesiredAngle = 0
	RightHip.MaxVelocity = 40
	RightHip.DesiredAngle = 1.57
	LeftHip.DesiredAngle = 0
wait(1)
pose=&quot;Standing&quot;

end


function moveClimb()
	RightShoulder.MaxVelocity = 0.5
	LeftShoulder.MaxVelocity = 0.5
	RightShoulder.DesiredAngle = -3.14
	LeftShoulder.DesiredAngle = 3.14
	RightHip.DesiredAngle = 0
	LeftHip.DesiredAngle = 0
end

function moveSit()
	RightShoulder.MaxVelocity = 0.15
	LeftShoulder.MaxVelocity = 0.15
	RightShoulder.DesiredAngle = -3.14 /2
	LeftShoulder.DesiredAngle = -3.14 /2
	RightHip.DesiredAngle = 3.14 /2
	LeftHip.DesiredAngle = -3.14 /2
end

function getTool()
	
	kidTable = Figure:children()
	if (kidTable ~= nil) then
		numKids = #kidTable
		for i=1,numKids do
			if (kidTable[i].className == &quot;Tool&quot;) then return kidTable[i] end
		end
	end
	
	return nil
end

function getToolAnim(tool)

	c = tool:children()
	for i=1,#c do
		if (c[i].Name == &quot;toolanim&quot; and c[i].className == &quot;StringValue&quot;) then
			return c[i]
		end
	end
	return nil
end

function animateTool()
	
	if (toolAnim == &quot;None&quot;) then
		RightShoulder.DesiredAngle = -1.57
		return
	end

	if (toolAnim == &quot;Slash&quot;) then
		RightShoulder.MaxVelocity = 0.5
		RightShoulder.DesiredAngle = 0
		return
	end

	if (toolAnim == &quot;Lunge&quot;) then
		RightShoulder.MaxVelocity = 0.5
		LeftShoulder.MaxVelocity = 0.5
		RightHip.MaxVelocity = 0.5
		LeftHip.MaxVelocity = 0.5
		RightShoulder.DesiredAngle = -1.57
		LeftShoulder.DesiredAngle = 1.0
		RightHip.DesiredAngle = 1.57
		LeftHip.DesiredAngle = 1.0
		return
	end
end

function move(time)
	local amplitude
	local frequency

	if (pose == &quot;Jumping&quot;) then
		moveJump()
		return
	end

	if (pose == &quot;Zombie&quot;) then
		moveZombie()
		return
	end

	if (pose == &quot;Boogy&quot;) then
		moveBoogy()
		return
	end

	if (pose == &quot;Float&quot;) then
		moveFloat()
		return
	end

	if (pose == &quot;Punch&quot;) then
		movePunch()
		return
	end

	if (pose == &quot;Kick&quot;) then
		moveKick()
		return
	end

	if (pose == &quot;Fly&quot;) then
		moveFly()
		return
	end

	if (pose == &quot;FreeFall&quot;) then
		moveFreeFall()
		return
	end

	if (pose == &quot;Climbing&quot;) then
		moveClimb()
		return
	end

	if (pose == &quot;Seated&quot;) then
		moveSit()
		return
	end

		amplitude = 0.1
		frequency = 1

	RightShoulder.MaxVelocity = 0.15
	LeftShoulder.MaxVelocity = 0.15
	if (pose == &quot;Running&quot;) then
		amplitude = 1
		frequency = 9
	elseif (pose == &quot;Dancing&quot;) then
		amplitude = 2
		frequency = 16
	end


	desiredAngle = amplitude * math.sin(time*frequency)
	if pose~=&quot;Dancing&quot; then
		RightShoulder.DesiredAngle = -desiredAngle
		LeftShoulder.DesiredAngle = desiredAngle
		RightHip.DesiredAngle = -desiredAngle
		LeftHip.DesiredAngle = -desiredAngle
	else
		RightShoulder.DesiredAngle = desiredAngle
		LeftShoulder.DesiredAngle = desiredAngle
		RightHip.DesiredAngle = -desiredAngle
		LeftHip.DesiredAngle = -desiredAngle
	end
		


	local tool = getTool()

	if tool ~= nil then
	
		animStringValueObject = getToolAnim(tool)

		if animStringValueObject ~= nil then
			toolAnim = animStringValueObject.Value
			-- message recieved, delete StringValue
			animStringValueObject.Parent = nil
			toolAnimTime = time + .3
		end

		if time &gt; toolAnimTime then
			toolAnimTime = 0
			toolAnim = &quot;None&quot;
		end

		animateTool()

		
	else
		toolAnim = &quot;None&quot;
		toolAnimTime = 0
	end
end


-- connect events
-----------------------------------------------------------------------------------------------------------------------

function unequip()
	local items=script.Parent:children()
	for i=1, #items do
		if items[i].className==&quot;Tool&quot; then items[i]:remove() end
	end
end

function onChatted(msg, recipient) 
	msg = string.lower(msg)

	if string.match(msg, string.lower(script.Parent.Name))~=nil or string.match(msg, &quot;everyone&quot;) then
		if string.match(msg, &quot;equip&quot;) then 
			if game.Workspace:findFirstChild(&quot;Hub&quot;) then
				if string.match(msg, &quot;rocket&quot;) then unequip()
					game.Workspace.Hub.Rocket:clone().Parent=script.Parent
				elseif string.match(msg, &quot;slingshot&quot;) then unequip()
					game.Workspace.Hub.Slingshot:clone().Parent=script.Parent
				elseif string.match(msg, &quot;sword&quot;) then unequip()
					game.Workspace.Hub.Sword:clone().Parent=script.Parent
				elseif string.match(msg, &quot;pbg&quot;) then unequip()
					game.Workspace.Hub.PBG:clone().Parent=script.Parent
				elseif string.match(msg, &quot;superball&quot;) then unequip()
					game.Workspace.Hub.Superball:clone().Parent=script.Parent
				elseif string.match(msg, &quot;trowel&quot;) then unequip()
					game.Workspace.Hub.Trowel:clone().Parent=script.Parent
				elseif string.match(msg, &quot;bomb&quot;) then unequip()
					game.Workspace.Hub.Bomb:clone().Parent=script.Parent
				end
			end
		end
		if string.match(msg, &quot;unequip&quot;) then unequip() end
		if string.match(msg, &quot;run&quot;) then onRunning(1) end
		if string.match(msg, &quot;climb&quot;) then onClimbing() end
		if string.match(msg, &quot;jump&quot;) then onJumping() end
		if string.match(msg, &quot;zombie&quot;) then pose=&quot;Zombie&quot; end
		if string.match(msg, &quot;disco&quot;) then pose=&quot;Boogy&quot; end
		if string.match(msg, &quot;float&quot;) then pose=&quot;Float&quot; end
		if string.match(msg, &quot;punch&quot;) then pose=&quot;Punch&quot; end
		if string.match(msg, &quot;kick&quot;) then pose=&quot;Kick&quot; end
		if string.match(msg, &quot;fly&quot;) then pose=&quot;Fly&quot; end
		if string.match(msg, &quot;heal&quot;) then script.Parent.Humanoid.Health=script.Parent.Humanoid.MaxHealth end
		if string.match(msg, &quot;defend&quot;) then defence() end
		if string.match(msg, &quot;stop&quot;) then pose=&quot;Standing&quot;; proxkill=false; following=false; stopmoving() end
		if string.match(msg, &quot;go home&quot;) then following=false; gohome() end
		if string.match(msg, &quot;follow&quot;) then
			if string.match(msg, &quot;all&quot;) then
				followany()
			else
				local egg=game.Players:children()
				for i=1, #egg do
					if string.match(msg, string.lower(egg[i].Name)) then
						follow(egg[i].Name)
						return
					end
				end
			end
		end
		if string.match(msg, &quot;kill&quot;) then
			if string.match(msg, &quot;all&quot;) then
				attackany()
			else
				local egg=game.Players:children()
				for i=1, #egg do
					if string.match(msg, string.lower(egg[i].Name)) then
						attack(egg[i].Name)
						return
					end
				end
			end
		end

	end
end

if game.Players.NumPlayers&gt;1 then
	x=game.Players:children()
	
	for i=1, #x do
		if script.Parent:findFirstChild(&quot;Commander&quot;)~=nil then
			if script.Parent.Commander:children()~=nil or script.Parent.Commander:children()&gt;0 then
				local ch=script.Parent.Commander:children()
				for i=1, #ch do
					if string.lower(ch[i].Name)==string.lower(x[i].Name) then
						x[i].Chatted:connect(function(msg, recipient) onChatted(msg, recipient) end) 
					end
				end
			elseif string.lower(script.Parent.Commander.Value)==string.lower(x[i].Name) then
				x[i].Chatted:connect(function(msg, recipient) onChatted(msg, recipient) end) 
			end
		else
			x[i].Chatted:connect(function(msg, recipient) onChatted(msg, recipient) end)
		end
	end
end


function onPlayerEntered(Player) 
	while Player.Name==nil do
		wait(2)
	end
	if script.Parent:findFirstChild(&quot;Commander&quot;)~=nil then
		if script.Parent.Commander:children()~=nil or script.Parent.Commander:children()&gt;0 then
			local ch=script.Parent.Commander:children()
			for i=1, #ch do
				if string.lower(ch[i].Name)==string.lower(Player.Name) then
					Player.Chatted:connect(function(msg, recipient) onChatted(msg, recipient) end) 
				end
			end
		elseif string.lower(script.Parent.Commander.Value)==string.lower(Player.Name) then
			Player.Chatted:connect(function(msg, recipient) onChatted(msg, recipient) end) 
		end
	else
		Player.Chatted:connect(function(msg, recipient) onChatted(msg, recipient) end)
	end
end

game.Players.ChildAdded:connect(onPlayerEntered) 



-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
dist=20

function followany()
following=true
	while following==true do

		local ch=game.Players:children()
		for i=1, #ch do
			local l=game.Workspace:findFirstChild(ch[i].Name)
			if l~=nil then
				local s=l.Torso
				local p=l.Torso.Position
				local q=script.Parent.Torso.Position
				local d=math.sqrt( ((p.x-q.x)^2)+((p.y-q.y)^2)+((p.z-q.z)^2) )
				if smallest==nil then
					smallest=d
					target=s
				elseif d&lt;smallest then
					smallest=d
					target=s
				end
			end
		end

		if smallest==nil then stopmoving() return end
		
		if smallest&gt;6*dist then return end
		
		script.Parent.Humanoid:MoveTo(target.Position, target)

		wait(0.5)
		for i=1, 6 do
			if target.Parent.Humanoid.Health&lt;1 then stopmoving() else	wait(0.5) end
		end
	end
end



function gohome()
	script.Parent.Humanoid:MoveTo(Vector3.new(0,0,0), game.Workspace.Bases.Base)
end
function stopmoving()
	script.Parent.Humanoid:MoveTo(script.Parent.Torso.Position, script.Parent.Torso)
end

function follow(name)
	following=true

	local p=game.Workspace:findFirstChild(name)
	if p==nil then return end
	while following==true do	
		script.Parent.Humanoid:MoveTo(p.Torso.Position, p.Torso)
		wait(0.5)
		for i=1, 3 do
			if p.Humanoid.Health&lt;1 then following=false; stopmoving() return end
			wait(0.5)
		end
	end
end

function attack(name)
	if script.Parent:findFirstChild(&quot;Sword&quot;)~=nil then	
		following=true
		local p=game.Workspace:findFirstChild(name)
		if p==nil then return end
		while following==true do
			script.Parent.Humanoid:MoveTo(p.Torso.Position, p.Torso)
			wait(0.5)
			for i=1, 3 do
				if p.Humanoid.Health&lt;1 then following=false; stopmoving() return end
				local l=p.Torso.Position
				local q=script.Parent.Torso.Position
				local d=math.sqrt( ((l.x-q.x)^2)+((l.y-q.y)^2)+((l.z-q.z)^2) )
				if d&lt;10 then
					script.Parent.Humanoid:MoveTo(p.Torso.Position, p.Torso); slash()
					if (q.y-l.y)&gt;3 and (q.y-l.y)&lt;7 then
						script.Parent.Humanoid:MoveTo(p.Torso.Position+Vector3.new(math.random(-4,4),0,math.random(-4,4)), p.Torso);
					end
				end
				wait(1)
			end
		end
	end
end

function attackany()
if script.Parent:findFirstChild(&quot;Sword&quot;)~=nil then	

	following=true
		while following==true do

			local ch=game.Players:children()
			for i=1, #ch do
				local l=game.Workspace:findFirstChild(ch[i].Name)
				if l~=nil then
					local s=l.Torso
					local p=l.Torso.Position
					local q=script.Parent.Torso.Position
					local d=math.sqrt( ((p.x-q.x)^2)+((p.y-q.y)^2)+((p.z-q.z)^2) )
					if smallest==nil then
						smallest=d
						target=s
					elseif d&lt;smallest then
						smallest=d
						target=s
					end
				end
			end

			if smallest==nil then stopmoving() return end
			
			if smallest&gt;6*dist then return end
			
			script.Parent.Humanoid:MoveTo(target.Position, target)

			if smallest&lt;10 then
				slash()
			end
			if target.Parent==nil then stopmoving() return end
			wait(0.5)
			for i=1, 3 do
				if target.Parent.Humanoid.Health&lt;1 then 
					stopmoving() 
				else
					local p=target.Position
					local q=script.Parent.Torso.Position
					local d=math.sqrt( ((p.x-q.x)^2)+((p.y-q.y)^2)+((p.z-q.z)^2) )
					if d&lt;10 then
						script.Parent.Humanoid:MoveTo(target.Position, target); slash()
						if (q.y-p.y)&gt;3 and (q.y-p.y)&lt;7 then
							script.Parent.Humanoid:MoveTo(p.Torso.Position+Vector3.new(math.random(-4,4),0,math.random(-4,4)), p.Torso);
						end
					end
					wait(1)
				end
			end
		end
	end
end


function patrol()
	if points==nil then
		points=0
		if game.Workspace:findFirstChild(&quot;pp1&quot;)~=nil then
		pp1=game.Workspace:findFirstChild(&quot;pp1&quot;)
		local points=points+1
			if game.Workspace:findFirstChild(&quot;pp2&quot;)~=nil then
			pp2=game.Workspace:findFirstChild(&quot;pp2&quot;)
		local points=points+1
				if game.Workspace:findFirstChild(&quot;pp3&quot;)~=nil then
				pp3=game.Workspace:findFirstChild(&quot;pp3&quot;)
		local points=points+1
					if game.Workspace:findFirstChild(&quot;pp4&quot;)~=nil then
					pp4=game.Workspace:findFirstChild(&quot;pp4&quot;)
		local points=points+1
						if game.Workspace:findFirstChild(&quot;pp5&quot;)~=nil then
						pp5=game.Workspace:findFirstChild(&quot;pp5&quot;)
		local points=points+1
							if game.Workspace:findFirstChild(&quot;pp6&quot;)~=nil then
							pp6=game.Workspace:findFirstChild(&quot;pp6&quot;)
		local points=points+1
								if game.Workspace:findFirstChild(&quot;pp7&quot;)~=nil then
								pp7=game.Workspace:findFirstChild(&quot;pp7&quot;)
		local points=points+1
									if game.Workspace:findFirstChild(&quot;pp8&quot;)~=nil then
									pp8=game.Workspace:findFirstChild(&quot;pp8&quot;)
		local points=points+1
										if game.Workspace:findFirstChild(&quot;pp9&quot;)~=nil then
										pp9=game.Workspace:findFirstChild(&quot;pp9&quot;)
		local points=points+1
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end

	if points&lt;1 then return end
	patrolling=true
	local time=2
	if points==1 then return end
	if points&gt;1 then
		while patrolling==true do
			script.Parent.Humanoid:MoveTo(pp1.Position, pp1)
			wait(time)
			script.Parent.Humanoid:MoveTo(pp2.Position, pp2)
			wait(time)
			if points&gt;2 then
				script.Parent.Humanoid:MoveTo(pp3.Position, pp3)
				wait(time)
				if points&gt;3 then
					script.Parent.Humanoid:MoveTo(pp4.Position, pp4)
					wait(time)
					if points&gt;4 then
						script.Parent.Humanoid:MoveTo(pp5.Position, pp5)
						wait(time)
						if points&gt;5 then
							script.Parent.Humanoid:MoveTo(pp6.Position, pp6)
							wait(time)
							if points&gt;6 then
								script.Parent.Humanoid:MoveTo(pp7.Position, pp7)
								wait(time)
								if points&gt;7 then
									script.Parent.Humanoid:MoveTo(pp8.Position, pp8)
									wait(time)
									if points&gt;8 then
										script.Parent.Humanoid:MoveTo(pp9.Position, pp9)
										wait(time)
									end
								end
							end
						end
					end
				end
			end
		end
	end
end


function goto(pos,part)
while true do
end
end


function slash()
	for i=1, 3 do
		wait(.3)
		RightShoulder.MaxVelocity = 2
		LeftShoulder.MaxVelocity = 1
		RightShoulder.DesiredAngle = -2.14
		LeftShoulder.DesiredAngle = 0
		RightHip.DesiredAngle = 0
		LeftHip.DesiredAngle = 0
		wait(.2)
		RightShoulder.MaxVelocity = 2
		LeftShoulder.MaxVelocity = 1
		RightShoulder.DesiredAngle = 0
		LeftShoulder.DesiredAngle = 0
		RightHip.DesiredAngle = 0
		LeftHip.DesiredAngle = 0
	end
end

function defence()
	proxkill=true
	while proxkill==true do
		local ch=game.Players:children()
		for i=1, #ch do
			local p=game.Workspace:findFirstChild(ch[i].Name)
			if p~=nil then
				local p=p.Torso.Position
				local q=script.Parent.Torso.Position
				local d=math.sqrt( ((p.x-q.x)^2)+((p.y-q.y)^2)+((p.z-q.z)^2) )
				if d&lt;dist and d&gt;8 then
					local ex=Instance.new(&quot;Explosion&quot;)
					ex.Position=p
					ex.Parent=game.Workspace
				end
			end		
		end
		wait(1)
	end
end




-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------


Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(onJumping)
Humanoid.Climbing:connect(onClimbing)
Humanoid.GettingUp:connect(onGettingUp)
Humanoid.FreeFalling:connect(onFreeFall)
Humanoid.FallingDown:connect(onFallingDown)
Humanoid.Seated:connect(onSeated)


--[[

function newSound(id)
	local sound = Instance.new(&quot;Sound&quot;)
	sound.SoundId = id
	sound.Parent = script.Parent.Head
	return sound
end


local sDied = newSound(&quot;rbxasset://sounds/uuhhh.wav&quot;)
local sFallingDown = newSound(&quot;rbxasset://sounds/splat.wav&quot;)
local sFreeFalling = newSound(&quot;rbxasset://sounds/swoosh.wav&quot;)
local sGettingUp = newSound(&quot;rbxasset://sounds/hit.wav&quot;)
local sJumping = newSound(&quot;rbxasset://sounds/button.wav&quot;)
local sRunning = newSound(&quot;rbxasset://sounds/bfsl-minifigfoots1.mp3&quot;)
sRunning.Looped = true

local Figure = script.Parent
local Head = waitForChild(Figure, &quot;Head&quot;)
local Humanoid = waitForChild(Figure, &quot;Humanoid&quot;)


function onDied()
	sDied:play()
end

function onState(state, sound)
	if state then
		sound:play()
	else
		sound:pause()
	end
end

function onRunning(speed)
	if speed&gt;0 then
		sRunning:play()
	else
		sRunning:pause()
	end
end


Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(function(state) onState(state, sJumping) end)
Humanoid.GettingUp:connect(function(state) onState(state, sGettingUp) end)
Humanoid.FreeFalling:connect(function(state) onState(state, sFreeFalling) end)
Humanoid.FallingDown:connect(function(state) onState(state, sFallingDown) end)
--]]

local nextTime = 0
local runService = game:service(&quot;RunService&quot;);

while Figure.Parent~=nil do
	time = runService.Stepped:wait()
	if time &gt; nextTime then
		move(time)
		nextTime = time + 0.1
	end
end
</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX6">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">PlaySounds</string>
				<ProtectedString name="Source">zombieParent = false

local soundIds = {25954372, 25954392, 25954407}
local sounds = {}
for i=1,#soundIds do
	local s = Instance.new(&quot;Sound&quot;)
	s.SoundId = &quot;http://www.roblox.com/asset/?id=&quot; .. soundIds[i]
	s.Volume = 1
	s.Parent = script.Parent
	sounds[#sounds + 1] = s
end

while zombieParent == false do

	wait(1)
	if script.Parent.Name == &quot;Head&quot; then
		zombieParent = true
	end

end

while true do
	wait(math.random(5,10))
	local i = math.random(1, #sounds)
	sounds[i].Pitch = .8 + (math.random() * .2)
	sounds[i]:Play()
end</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX7">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Timer</string>
				<ProtectedString name="Source">zombieParent = false

while zombieParent == false do

	wait(1)
	if script.Parent.Name == &quot;SummonedZombie&quot; then
		zombieParent = true
	end

end

wait(30)
script.Parent:remove()</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX8">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">WeldScript</string>
				<ProtectedString name="Source">zombieParent = false

while zombieParent == false do

	wait(1)
	if script.Parent.Name == &quot;SummonedZombie&quot; then
		zombieParent = true
	end

end


local p=script.Parent:GetChildren()
for i=1,#p do 
if p[i].className==&quot;Part&quot; then 

	local weld = Instance.new(&quot;Weld&quot;) 
        weld.Name=&quot;Hold&quot;
	weld.Part0 = p[i]
	weld.Part1 = script.Parent.Parent.Torso

	local HitPos = p[i].Position + (p[i].CFrame.lookVector * .5) 

	local CJ = CFrame.new(HitPos) 
	local C0 = p[i].CFrame:inverse() *CJ 
	local C1 = script.Parent.Parent.Torso.CFrame:inverse() * CJ 

	weld.C0 = C0 
	weld.C1 = C1 

	weld.Parent = p[i]
end
end </ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
	</Item>
</roblox>