<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>1.5</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>-0</R02>
				<R10>-0</R10>
				<R11>0</R11>
				<R12>-1</R12>
				<R20>0</R20>
				<R21>1</R21>
				<R22>0</R22>
			</CoordinateFrame>
			<string name="Name">JacksTrickOrTreatBag</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id= 35955931 </url></Content>
			<bool name="archivable">true</bool>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">107</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0.599983156</Y>
					<Z>0.100006104</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">1</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>2</X>
					<Y>1.20000005</Y>
					<Z>3</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=35955859</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id= 35955910 </url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX3">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">local Tool = script.Parent
local JackMass = Tool.Handle:GetMass()

local humanoid = nil
while humanoid == nil do
	humanoid = Tool.Parent:FindFirstChild(&quot;Humanoid&quot;)
	wait(1)
end

local oldHealth = humanoid.Health

function CreateGUI()
	local p = game.Players:GetPlayerFromCharacter(humanoid.Parent)
	print(&quot;Power for Player: &quot; .. p.Name)
	script.JackGUI.Parent = p.PlayerGui
end


function HealthChanged(health)
	UpdateGUI(health)
end

function UpdateGUI(health)
	local pgui = game.Players:GetPlayerFromCharacter(humanoid.Parent).PlayerGui
	local tray = pgui.JackGUI.Tray
	
	wait(.5)

--	tray.HealthBar.Size = UDim2.new(0.2, 0, 0.8 * (health / humanoid.MaxHealth), 0) 
--	tray.HealthBar.Position = UDim2.new(0.4, 0, 0.8 * (1-  (health / humanoid.MaxHealth)) , 0) 

	powerValue = Tool.Power.Value
	if health == 98231 then -- hack to avoid rewriting function for subtracting 10
		if powerValue &lt; 10 then powerValue = 0
		else powerValue = powerValue - 10 end
	end

	--powerLevel = 1 - 1/(math.sqrt(math.sqrt(1+powerValue))) 
	if powerValue &gt; 30 then powerValue = 30+(powerValue-30)*.1 end
	if powerValue &gt; 40 then powerValue = 40 end
	powerLevel = powerValue / 40
	tray.HealthBar.Size = UDim2.new(0.2, 0, 0.8 * powerLevel, 0) 
	tray.HealthBar.Position = UDim2.new(0.4, 0, 0.8 * (1-powerLevel), 0) 
end


CreateGUI()
UpdateGUI(0)
humanoid.HealthChanged:connect(HealthChanged)


Tool.Enabled = true
function onActivated()
	if not Tool.Enabled then return end
	Tool.Enabled = false
	vCharacter = Tool.Parent
	humanoid = vCharacter:FindFirstChild(&quot;Humanoid&quot;)
	if humanoid == nil or Tool.Power.Value &lt; 5 then Tool.Enabled = true return end
	rArm = vCharacter:FindFirstChild(&quot;Right Arm&quot;)
	lArm = vCharacter:FindFirstChild(&quot;Left Arm&quot;)
	rLeg = vCharacter:FindFirstChild(&quot;Right Leg&quot;)
	lLeg = vCharacter:FindFirstChild(&quot;Left Leg&quot;)
	if rArm == nil then rArmMass = 0 else rArmMass = rArm:GetMass() end
	if lArm == nil then lArmMass = 0 else lArmMass = lArm:GetMass() end
	if rLeg == nil then rLegMass = 0 else rLegMass = rLeg:GetMass() end
	if lLeg == nil then lLegMass = 0 else lLegMass = lLeg:GetMass() end

	UpdateGUI(98231)

	charChilds = vCharacter:GetChildren()
	hatMass = 0
	for i = 1, #charChilds do
		if charChilds[i].className == &quot;Hat&quot; then
			hatMass = hatMass + charChilds[i].Handle:GetMass()
		end
	end

	magicSound = Tool.Handle:FindFirstChild(&quot;MagicSound&quot;)
	if magicSound == nil then
		magicSound = Instance.new(&quot;Sound&quot;)
		magicSound.Parent = Tool.Handle
		magicSound.Volume = 1
		magicSound.SoundId = &quot;http://www.roblox.com/asset/?id=35966712&quot;
		magicSound.Name = &quot;MagicSound&quot;
	end
	magicSound:Play()

	mass = vCharacter.Head:GetMass() + vCharacter.Torso:GetMass() + lArmMass + rArmMass + lLegMass + rLegMass + JackMass + hatMass
	oldWalkSpeed = humanoid.WalkSpeed
	powerLevel = 1 - 1/(math.sqrt(math.sqrt(1+Tool.Power.Value)))  -- goes from 0 to 1 s.t. it takes 15 candies to get to .5
	print(&quot;PowerLevel:&quot;)
	print(powerLevel)
	timeToGo = 2 + powerLevel*15
	humanoid.WalkSpeed = oldWalkSpeed + 60*powerLevel
	antiGrav = Instance.new(&quot;BodyForce&quot;)
	antiGrav.force = Vector3.new(0, powerLevel*196*mass*.8, 0)
	antiGrav.Name = &quot;JackUp&quot;
	antiGrav.Parent = vCharacter.Torso
	healingFactor = 3*powerLevel
	for i = 1, math.floor(timeToGo) do
		newHealth = humanoid.Health + healingFactor
		if newHealth &gt; humanoid.MaxHealth then humanoid.Health = humanoid.MaxHealth
		else humanoid.Health = newHealth end
		wait(1)
	end
	timeLeft = timeToGo - math.floor(timeToGo)
	wait(timeLeft)
	antiGrav.Parent = nil
	humanoid.WalkSpeed = oldWalkSpeed
	if Tool.Power.Value &lt; 10 then Tool.Power.Value = 0
	else Tool.Power.Value = Tool.Power.Value - 10 end
	Tool.Enabled = true
end

function onEquipped()
	jGUI = script:FindFirstChild(&quot;JackGUI&quot;)
	if jGUI ~= nil then jGUI.Parent = game.Players:GetPlayerFromCharacter(humanoid.Parent).PlayerGui end

	magicSound = Tool.Handle:FindFirstChild(&quot;MagicSound&quot;)
	if magicSound == nil then
		magicSound = Instance.new(&quot;Sound&quot;)
		magicSound.Parent = Tool.Handle
		magicSound.Volume = 1
		magicSound.SoundId = &quot;http://www.roblox.com/asset/?id=35966712&quot;
		magicSound.Name = &quot;MagicSound&quot;
	end
	UpdateGUI(0)
end

function onUnequipped()
	magicSound = Tool.Handle:FindFirstChild(&quot;MagicSound&quot;)
	if magicSound ~= nil then
		magicSound:Stop()
		magicSound.Parent = nil 
	end

	pgui = game.Players:GetPlayerFromCharacter(humanoid.Parent).PlayerGui
	JackGUI = pgui:FindFirstChild(&quot;JackGUI&quot;)
	if JackGUI ~= nil then
		JackGUI.Parent = script
	end
end

Tool.Activated:connect(onActivated)
Tool.Equipped:connect(onEquipped)
Tool.Unequipped:connect(onUnequipped)

-- any damage gets added to the power :)
while true do
	if humanoid.Health &lt; oldHealth then
		Tool.Power.Value = Tool.Power.Value + (oldHealth - humanoid.Health)/4
		
		magicSound = Tool.Handle:FindFirstChild(&quot;MagicSound&quot;)
		if magicSound == nil then
			magicSound = Instance.new(&quot;Sound&quot;)
			magicSound.Parent = Tool.Handle
			magicSound.Volume = 1
			magicSound.SoundId = &quot;http://www.roblox.com/asset/?id=35966712&quot;
			magicSound.Name = &quot;MagicSound&quot;
		end
		magicSound:Play()
		wait(.4)
		magicSound:Stop()
	end
	oldHealth = humanoid.Health
	wait(.4)
end

</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
			<Item class="GuiMain" referent="RBX4">
				<Properties>
					<string name="Name">JackGUI</string>
					<bool name="archivable">true</bool>
				</Properties>
				<Item class="Frame" referent="RBX5">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4285215356</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<string name="Name">Tray</string>
						<UDim2 name="Position">
							<XS>0.899999976</XS>
							<XO>0</XO>
							<YS>0.380000025</YS>
							<YO>0</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0.0450000018</XS>
							<XO>0</XO>
							<YS>0.340000004</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
						<bool name="archivable">true</bool>
					</Properties>
					<Item class="ImageLabel" referent="RBX6">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=37297784</url></Content>
							<string name="Name">ImageLabel</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0.800000012</YS>
								<YO>3</YO>
							</UDim2>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0.25</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
							<bool name="archivable">true</bool>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX7">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294914816</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<string name="Name">HealthBar</string>
							<UDim2 name="Position">
								<XS>0.420000017</XS>
								<XO>0</XO>
								<YS>0.800000012</YS>
								<YO>0</YO>
							</UDim2>
							<UDim2 name="Size">
								<XS>0.159999996</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
							<bool name="archivable">true</bool>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX8">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">0</int>
							<string name="Name">HealthBarBacking</string>
							<UDim2 name="Position">
								<XS>0.419999987</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<UDim2 name="Size">
								<XS>0.159999996</XS>
								<XO>0</XO>
								<YS>0.800000012</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
							<bool name="archivable">true</bool>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="NumberValue" referent="RBX9">
			<Properties>
				<string name="Name">Power</string>
				<double name="Value">0</double>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX10">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-0.318355083</X>
					<Y>7.10452414</Y>
					<Z>-0.879789352</Z>
					<R00>-0.95105648</R00>
					<R01>0.305212766</R01>
					<R02>-0.048340939</R02>
					<R10>-0</R10>
					<R11>0.156434461</R11>
					<R12>0.987688363</R12>
					<R20>0.309017271</R20>
					<R21>0.939347446</R21>
					<R22>-0.148777992</R22>
				</CoordinateFrame>
				<CoordinateFrame name="Focus">
					<X>0</X>
					<Y>0.599983096</Y>
					<Z>0.100006104</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
	</Item>
</roblox>