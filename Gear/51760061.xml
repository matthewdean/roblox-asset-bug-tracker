<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>1</Z>
				<R00>0</R00>
				<R01>0</R01>
				<R02>1</R02>
				<R10>-1</R10>
				<R11>0</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>-1</R21>
				<R22>0</R22>
			</CoordinateFrame>
			<string name="Name">Korblox Dagger</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=51552384</url></Content>
			<bool name="archivable">true</bool>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">199</int>
				<CoordinateFrame name="CFrame">
					<X>0.151420325</X>
					<Y>9.43729496</Y>
					<Z>0.369855314</Z>
					<R00>0.0481100753</R00>
					<R01>-0.998755157</R01>
					<R02>-0.0133295106</R02>
					<R10>0.0681395754</R10>
					<R11>-0.010032665</R11>
					<R12>0.99762404</R12>
					<R20>-0.996520042</R20>
					<R21>-0.0489042848</R21>
					<R22>0.0675723106</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">3</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.60000217</X>
					<Y>0.400000364</Y>
					<Z>2.52999926</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=51552224 </url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=51552338 </url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX3">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Local Gui</string>
				<ProtectedString name="Source">Tool = script.Parent

local stillEquipped = false

function onEquippedLocal(mouse)
	stillEquipped = true
	if mouse == nil then 
		print(&quot;Mouse not found&quot;)
		return
	end
	while stillEquipped do 
		print(&quot;Setting Mouse to go&quot;)
		mouse.Icon = &quot;rbxasset://textures\\GunCursor.png&quot;
		while Tool.Enabled and stillEquipped do 
			wait(0.01)
		end
		print(&quot;Setting Mouse to wait&quot;)
		mouse.Icon = &quot;rbxasset://textures\\GunWaitCursor.png&quot;
		while not Tool.Enabled and stillEquipped do 
			wait(0.01)
		end	
	end
end


function onUnequippedLocal()
	stillEquipped = false
end

Tool.Equipped:connect(onEquippedLocal)
Tool.Unequipped:connect(onUnequippedLocal)</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX4">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">DaggerScript</string>
				<ProtectedString name="Source">r = game:service(&quot;RunService&quot;)
local sword = script.Parent.Handle
local Tool = script.Parent

local damage = 14

local slash_damage = 18
local lunge_damage = 24

local SlashSound = Instance.new(&quot;Sound&quot;)
SlashSound.SoundId = &quot;rbxasset://sounds\\swordslash.wav&quot;
SlashSound.Parent = sword
SlashSound.Volume = .7

local LungeSound = Instance.new(&quot;Sound&quot;)
LungeSound.SoundId = &quot;rbxasset://sounds\\swordlunge.wav&quot;
LungeSound.Parent = sword
LungeSound.Volume = .6

local UnsheathSound = Instance.new(&quot;Sound&quot;)
UnsheathSound.SoundId = &quot;rbxasset://sounds\\unsheath.wav&quot;
UnsheathSound.Parent = sword
UnsheathSound.Volume = 1

local zombieTarget 

function blow(hit)
	tempDamage = lunge_damage
	local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
	local vCharacter = Tool.Parent
	local vPlayer = game.Players:playerFromCharacter(vCharacter)
	local hum = vCharacter:findFirstChild(&quot;Humanoid&quot;) -- non-nil if tool held by a character
	if humanoid~=nil and humanoid ~= hum and hum ~= nil then		
		-- final check, make sure sword is in-hand
		local right_arm = vCharacter:FindFirstChild(&quot;Right Arm&quot;)
		if (right_arm ~= nil) then
			local joint = right_arm:FindFirstChild(&quot;RightGrip&quot;)
			if (joint ~= nil and (joint.Part0 == sword or joint.Part1 == sword)) then
				tagHumanoid(humanoid, vPlayer)				
				if humanoid.Health - damage &lt; 0 and humanoid.Health &gt; 0 then 
					targetTorso = hit.Parent:findFirstChild(&quot;Torso&quot;)					
					if targetTorso then
						zombieTarget = Tool.ZombieScript.Target
						zombieTarget.Value = targetTorso.Position 
						zombieOwner = Tool.ZombieScript.Owner
						zombieOwner.Value = hum
					end			
					newZombie = Tool.ZombieScript:Clone()
					newZombie.Parent = Tool
					newZombie.Disabled = false 
				end
				humanoid:TakeDamage(damage)
				wait(1)
				untagHumanoid(humanoid)
				damage = tempDamage
			end
		end
	end
end


function tagHumanoid(humanoid, player)
	local creator_tag = Instance.new(&quot;ObjectValue&quot;)
	creator_tag.Value = player
	creator_tag.Name = &quot;creator&quot;
	creator_tag.Parent = humanoid
end

function untagHumanoid(humanoid)
	if humanoid ~= nil then
		local tag = humanoid:findFirstChild(&quot;creator&quot;)
		if tag ~= nil then
			tag.Parent = nil
		end
	end
end


function attack()
	damage = slash_damage
	SlashSound:play()
	local anim = Instance.new(&quot;StringValue&quot;)
	anim.Name = &quot;toolanim&quot;
	anim.Value = &quot;Slash&quot;
	anim.Parent = Tool
end

function lunge()
	damage = lunge_damage
	LungeSound:play()


	local anim = Instance.new(&quot;StringValue&quot;)
	anim.Name = &quot;toolanim&quot;
	anim.Value = &quot;Lunge&quot;
	anim.Parent = Tool	
	wait(.2)
	swordOut()
	wait(.2)
	wait(.4)
	swordUp()
	damage = slash_damage
end

function swordUp()
	Tool.GripForward = Vector3.new(-1,0,0)
	Tool.GripRight = Vector3.new(0, -1, 0)
	Tool.GripUp = Vector3.new(0, 0, -1)
end

function swordOut()
	Tool.GripForward = Vector3.new(0, 1, 0)
	Tool.GripRight = Vector3.new(0, 0, 1)
	Tool.GripUp = Vector3.new(1, 0, 0)
end

function swordAcross()
	-- parry
end


Tool.Enabled = true
local last_attack = 0
function onActivated()

	if not Tool.Enabled then
		return
	end

	Tool.Enabled = false

	local character = Tool.Parent;
	local humanoid = character.Humanoid
	if humanoid == nil then
		print(&quot;Humanoid not found&quot;)
		return 
	end

	t = r.Stepped:wait()

	if (t - last_attack &lt; .2) then
		lunge()
	else
		attack()
	end

	last_attack = t

	--wait(0.5)

	Tool.Enabled = true
end

function onEquipped()	
	UnsheathSound:play()	
end

script.Parent.Activated:connect(onActivated)
script.Parent.Equipped:connect(onEquipped)

connection = sword.Touched:connect(blow)

</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX5">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">ZombieScript</string>
				<ProtectedString name="Source">local zombie
local zombieOwner

local target = script:FindFirstChild(&quot;Target&quot;)
print(target.Value)

local unAnchoredParts = {} 

function offsetModelBy(model, offset) 
     local childs = model:GetChildren() 
     for i = 1, #childs do 
          if childs[i].className == &quot;Part&quot; or childs[i].className == &quot;TrussPart&quot; or childs[i].className == &quot;WedgePart&quot; then 
               childs[i].CFrame = childs[i].CFrame + offset 					
               if not childs[i].Anchored then table.insert(unAnchoredParts, childs[i]) end 
               childs[i].Anchored = true -- anchor everything 
          elseif childs[i].className == &quot;Tool&quot; or childs[i].className == &quot;Hat&quot; or childs[i].className == &quot;Model&quot; then 
               offsetModelBy(childs[i], offset) 
          end 
     end 
end 

function createZombie()
	print(&quot;Creating Zombie&quot;)
	--model = game:GetService(&quot;InsertService&quot;):LoadAsset(51731605)
	model = game:GetService(&quot;InsertService&quot;):LoadAsset(51761755)
	if model then 
		print(&quot;Found Model&quot;)
		children = model:GetChildren() 
		if children then zombie = children[1] end
	else print(&quot;Model Fetch failed&quot;)
	end	 

	if zombie then
		unAnchoredParts = {} 

		offsetVector = (target.Value - zombie.Torso.Position) --+ Vector3.new(0, 4, 0)
		offsetModelBy(zombie, offsetVector)

		zombie.Parent = game.Workspace 

		neck = zombie.Torso.Neck
		neck.Part0 = zombie.Head
		neck.Part1 = zombie.Torso		

		-- HotThoth&apos;s Unholy Hack to prevent the zombie from dying while spawning
		-- There is a more reliable way to do this, by making the entire Zombie in script
		-- but of course thats ugly in its own right! 
		for j = 1, 10 do 
		-- Insane script below!
		zombie.Humanoid.MaxHealth = 100 
		zombie.Humanoid.Health = 100 
		zombie:MakeJoints() 
		wait(.1) 
		end 

		-- unanchor everything 
		for u = 1, #unAnchoredParts do unAnchoredParts[u].Anchored = false end 

		zombieOwner = script.Owner
		zombieOwner.Parent = zombie

		actionScript = script.ActionScript
		actionScript.Parent = zombie
		actionScript.Disabled = false
		
		animateScript = script.Animate 
		animateScript.Parent = zombie
		animateScript.Disabled = false

	else 
		print(&quot;Zombie Failed&quot;)
	end
end

createZombie()

wait(2.0)

script:Remove()


</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
			<Item class="Vector3Value" referent="RBX6">
				<Properties>
					<string name="Name">Target</string>
					<Vector3 name="Value">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX7">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ActionScript</string>
					<ProtectedString name="Source">zombie = script.Parent
local zombieHumanoid = zombie.Humanoid

omnom = Instance.new(&quot;Sound&quot;) 
omnom.Parent = zombie
omnom.Volume = 1 
omnom.SoundId = &quot;http://www.roblox.com/asset/?id=35971877&quot; 
omnom.Name = &quot;Omnomnom&quot; 

if zombieHumanoid then 
	zombieHumanoid.MaxHealth = 250
	zombieHumanoid.Health = 250

	wait(0.25)
	zombieHumanoid.Health = 250

	zombieHumanoid.WalkSpeed = 18.0
	
	neck = zombie.Torso.Neck
	neck.Part0 = zombie.Head
	neck.Part1 = zombie.Torso
end

local zombieLife = 60

local attacking = false
local enemy

local zombieOwner = zombie:FindFirstChild(&quot;Owner&quot;).Value	

function blow(hit)
	if hit.Parent then 
		humanoid = hit.Parent:FindFirstChild(&quot;Humanoid&quot;)
		if humanoid ~= nil and humanoid ~= zombieOwner and humanoid ~= zombieHumanoid and hit.Parent.Name ~= &quot;Zombie&quot; then 
			omnom:Play()
			humanoid:TakeDamage(20)	
		end
	end
end

connection = zombie.Torso.Touched:connect(blow)

while zombieLife &gt; 0 do

	zombieOwner = zombie:FindFirstChild(&quot;Owner&quot;).Value	
	
	attacked = zombieOwner:GetChildren()	
	if #attacked &gt; 1 or attacking == true then 
		if enemy == nil then 
			for i = 1, #attacked do 
				if attacked[i].Name == &quot;creator&quot; then 
					print(attacked[i])
					enemy =  attacked[i].Value 
					enemy = enemy.Character
				end
			end
		end
		if enemy then 
			print(&quot;Found enemy&quot;)
			attacking = true
			zombieHumanoid:MoveTo(enemy.Torso.Position, enemy.Torso)			
		else 
			attacking = false
		end	

	elseif zombieHumanoid and zombieOwner ~= nil then 
		distance = (zombieOwner.Parent.Torso.Position - zombie.Torso.Position).magnitude
		if distance &gt; 5.0 then
			zombieHumanoid:MoveTo(zombieOwner.Parent.Torso.Position + (zombie.Torso.Position - zombieOwner.Parent.Torso.Position).unit * math.random(2, 7), zombieOwner.Parent.Torso)
		end
	else
		print(&quot;No owner&quot;)
	end
	wait(1.0)		
	zombieLife = zombieLife - 1
end

zombie:Remove()
</ProtectedString>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="ObjectValue" referent="RBX8">
				<Properties>
					<string name="Name">Owner</string>
					<Ref name="Value">null</Ref>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX9">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Animate</string>
					<ProtectedString name="Source">function waitForChild(parent, childName) 
     local child = parent:findFirstChild(childName) 
     if child then return child end 
     while true do 
          child = parent.ChildAdded:wait() 
          if child.Name==childName then return child end 
     end 
end 

-- ANIMATION 

-- declarations 

local Figure = script.Parent 
local Torso = waitForChild(Figure, &quot;Torso&quot;) 
local RightShoulder = waitForChild(Torso, &quot;Right Shoulder&quot;) 
local LeftShoulder = waitForChild(Torso, &quot;Left Shoulder&quot;) 
local RightHip = waitForChild(Torso, &quot;Right Hip&quot;) 
local LeftHip = waitForChild(Torso, &quot;Left Hip&quot;) 
local Neck = waitForChild(Torso, &quot;Neck&quot;) 
local Humanoid = waitForChild(Figure, &quot;Humanoid&quot;) 
local pose = &quot;Standing&quot; 

-- functions 

--print(&quot;Got past the waitForChilds&quot;) 

function onRunning(speed) 
     if speed&gt;0 then 
          pose = &quot;Running&quot; 
     else 
          pose = &quot;Standing&quot; 
     end 
end 

function onDied() 
     pose = &quot;Dead&quot; 
end 

function onJumping() 
     --print(&quot;ONJUMPING&quot;) 
     pose = &quot;Jumping&quot; 
end 

function onClimbing() 
     pose = &quot;Climbing&quot; 
end 

function onGettingUp() 
     pose = &quot;GettingUp&quot; 
end 

function onFreeFall() 
     pose = &quot;FreeFall&quot; 
end 

function onFallingDown() 
     pose = &quot;FallingDown&quot; 
end 

function onSeated() 
     pose = &quot;Seated&quot; 
end 

function onPlatformStanding() 
     pose = &quot;PlatformStanding&quot; 
end 

function moveJump() 
     --print(&quot;MOVEJUMP&quot;) 
     RightShoulder.MaxVelocity = 0.5 
     LeftShoulder.MaxVelocity = 0.5 
     RightShoulder.DesiredAngle = 3.14 
     LeftShoulder.DesiredAngle = -3.14 
     RightHip.DesiredAngle = 0 
     LeftHip.DesiredAngle = 0 
end 


-- same as jump for now 

function moveFreeFall() 
     RightShoulder.MaxVelocity = 0.5 
     LeftShoulder.MaxVelocity = 0.5 
     RightShoulder.DesiredAngle = 3.14 
     LeftShoulder.DesiredAngle = -3.14 
     RightHip.DesiredAngle = 0 
     LeftHip.DesiredAngle = 0 
end 

function moveSit() 
     RightShoulder.MaxVelocity = 0.15 
     LeftShoulder.MaxVelocity = 0.15 
     RightShoulder.DesiredAngle = 3.14 /2 
     LeftShoulder.DesiredAngle = -3.14 /2 
     RightHip.DesiredAngle = 3.14 /2 
     LeftHip.DesiredAngle = -3.14 /2 
end 

function getTool()      
     for _, kid in ipairs(Figure:GetChildren()) do 
          if kid.className == &quot;Tool&quot; then return kid end 
     end 
     return nil 
end 

function getToolAnim(tool) 
     for _, c in ipairs(tool:GetChildren()) do 
          if c.Name == &quot;toolanim&quot; and c.className == &quot;StringValue&quot; then 
               return c 
          end 
     end 
     return nil 
end 

function animateTool() 
      
     if (toolAnim == &quot;None&quot;) then 
          RightShoulder.DesiredAngle = 1.57 
          return 
     end 

     if (toolAnim == &quot;Slash&quot;) then 
          RightShoulder.MaxVelocity = 0.5 
          RightShoulder.DesiredAngle = 0 
          return 
     end 

     if (toolAnim == &quot;Lunge&quot;) then 
          RightShoulder.MaxVelocity = 0.5 
          LeftShoulder.MaxVelocity = 0.5 
          RightHip.MaxVelocity = 0.5 
          LeftHip.MaxVelocity = 0.5 
          RightShoulder.DesiredAngle = 1.57 
          LeftShoulder.DesiredAngle = 1.0 
          RightHip.DesiredAngle = 1.57 
          LeftHip.DesiredAngle = 1.0 
          return 
     end 
end 

function move(time) 
     local amplitude 
     local frequency 

     if (pose == &quot;Jumping&quot;) then 
          --print(&quot;Pose is jumping&quot;) 
          moveJump() 
          return 
     end 

     if (pose == &quot;FreeFall&quot;) then 
          moveFreeFall() 
          return 
     end 

     if (pose == &quot;Seated&quot;) then 
          moveSit() 
          return 
     end 

     local climbFudge = 0 
      
     if (pose == &quot;Running&quot;) then 
          RightShoulder.MaxVelocity = 0.15 
          LeftShoulder.MaxVelocity = 0.15 
          amplitude = 1 
          frequency = 9 
     elseif (pose == &quot;Climbing&quot;) then 
          RightShoulder.MaxVelocity = 0.5 
          LeftShoulder.MaxVelocity = 0.5 
          amplitude = 1 
          frequency = 9 
          climbFudge = 3.14 
     else 
          amplitude = 0.1 
          frequency = 1 
     end 

     desiredAngle = amplitude * math.sin(time*frequency) 

     RightShoulder.DesiredAngle = desiredAngle + climbFudge 
     LeftShoulder.DesiredAngle = desiredAngle - climbFudge 
     RightHip.DesiredAngle = -desiredAngle 
     LeftHip.DesiredAngle = -desiredAngle 


     local tool = getTool() 

     if tool then 
      
          animStringValueObject = getToolAnim(tool) 

          if animStringValueObject then 
               toolAnim = animStringValueObject.Value 
               -- message recieved, delete StringValue 
               animStringValueObject.Parent = nil 
               toolAnimTime = time + .3 
          end 

          if time &gt; toolAnimTime then 
               toolAnimTime = 0 
               toolAnim = &quot;None&quot; 
          end 

          animateTool() 

           
     else 
          toolAnim = &quot;None&quot; 
          toolAnimTime = 0 
     end 
end 


-- connect events 

Humanoid.Died:connect(onDied) 
Humanoid.Running:connect(onRunning) 
Humanoid.Jumping:connect(onJumping) 
Humanoid.Climbing:connect(onClimbing) 
Humanoid.GettingUp:connect(onGettingUp) 
Humanoid.FreeFalling:connect(onFreeFall) 
Humanoid.FallingDown:connect(onFallingDown) 
Humanoid.Seated:connect(onSeated) 
Humanoid.PlatformStanding:connect(onPlatformStanding) 

-- main program 

local runService = game:service(&quot;RunService&quot;); 

while Figure.Parent~=nil do 
     local _, time = wait(0.1) 
     move(time) 
end</ProtectedString>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX10">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>3.35608101</X>
					<Y>9.40035629</Y>
					<Z>-0.585258961</Z>
					<R00>-0.348594457</R00>
					<R01>0.0267396327</R01>
					<R02>0.936892152</R02>
					<R10>9.31322575e-010</R10>
					<R11>0.999593019</R11>
					<R12>-0.0285291616</R12>
					<R20>-0.937273681</R20>
					<R21>-0.00994510669</R21>
					<R22>-0.348452568</R22>
				</CoordinateFrame>
				<CoordinateFrame name="Focus">
					<X>-15.3817654</X>
					<Y>9.97093964</Y>
					<Z>6.38379383</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
	</Item>
</roblox>