<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>-0.600000024</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>0</R11>
				<R12>-1</R12>
				<R20>0</R20>
				<R21>1</R21>
				<R22>0</R22>
			</CoordinateFrame>
			<string name="Name">Trident</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=53926343 </url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">199</int>
				<CoordinateFrame name="CFrame">
					<X>0.695979714</X>
					<Y>8.05804443</Y>
					<Z>3.46481037</Z>
					<R00>-0.942324162</R00>
					<R01>-0.331316024</R01>
					<R02>0.0474855937</R02>
					<R10>0.0450922176</R10>
					<R11>0.0149118481</R11>
					<R12>0.998871684</R12>
					<R20>-0.331649959</R20>
					<R21>0.943401933</R21>
					<R22>0.000887992792</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1.44000196</X>
					<Y>0.200000003</Y>
					<Z>8.77000046</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=53926151 </url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.75</X>
						<Y>1.75</Y>
						<Z>1.75</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=53926315 </url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBX3">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=54120929</url></Content>
				<string name="Name">QuakeAnim</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX4">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=54121922</url></Content>
				<string name="Name">SlashAnim</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX5">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=54124170</url></Content>
				<string name="Name">StabAnim</string>
			</Properties>
		</Item>
		<Item class="Sound" referent="RBX6">
			<Properties>
				<bool name="Looped">false</bool>
				<string name="Name">QuakeSound</string>
				<float name="Pitch">1</float>
				<bool name="PlayOnRemove">false</bool>
				<Content name="SoundId"><url>http://www.roblox.com/asset/?id=54120656</url></Content>
				<float name="Volume">1</float>
			</Properties>
		</Item>
		<Item class="NumberValue" referent="RBX7">
			<Properties>
				<string name="Name">ActivateQuake</string>
				<double name="Value">0</double>
			</Properties>
		</Item>
		<Item class="BoolValue" referent="RBX8">
			<Properties>
				<string name="Name">QuakeEnabled</string>
				<bool name="Value">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX9">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">QuakeEnabler</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent

QuakeEnabled = Tool:WaitForChild(&quot;QuakeEnabled&quot;)

ReloadTime = 5

QuakeEnabled.Changed:connect(function()
&#9;if not QuakeEnabled.Value then
&#9;&#9;wait(ReloadTime)
&#9;&#9;QuakeEnabled.Value = true
&#9;end
end)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX10">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">TridentScript</string>
				<ProtectedString name="Source">-- OMG TRIDENT -- 

-- handle to the tool and its object
local Tool = script.Parent
local Trident = Tool.Handle

-- Handle to the character and its torso
local vCharacter
local myTorso

-- Sounds
local quakeSound

-- damage
local damage = 24

local activateQuake

local quakeSound

-- Access to enabling and disabling the tool as necessary
Tool.Enabled = true
-- handle to the debris(garbage marker) service
local debris = game:GetService(&quot;Debris&quot;)

local shockw = Instance.new(&quot;Part&quot;)
shockw.CanCollide = false
shockw.Shape = &quot;Ball&quot;
shockw.Size = Vector3.new(3, 3, 3)
shockw.FormFactor = 3
shockw.Transparency = 0.5

local shockMesh = Instance.new(&quot;SpecialMesh&quot;)
shockMesh.MeshId = &quot;http://www.roblox.com/asset/?id=54068514&quot;
shockMesh.TextureId = &quot;http://www.roblox.com/asset/?id=54068645&quot;
shockMesh.Scale = Vector3.new(2, 2, 2)
shockMesh.Parent = shockw

local shockw2 = Instance.new(&quot;Part&quot;)
shockw2.CanCollide = false
shockw2.Shape = &quot;Ball&quot;
shockw2.Size = Vector3.new(3, 3, 3)
shockw2.FormFactor = 3
shockw2.Transparency = 0.5

local shockMesh2= Instance.new(&quot;SpecialMesh&quot;)
shockMesh2.MeshId = &quot;http://www.roblox.com/asset/?id=54068569&quot;
shockMesh2.TextureId = &quot;http://www.roblox.com/asset/?id=54068645&quot;
shockMesh2.Scale = Vector3.new(2, 2, 2)
shockMesh2.Parent = shockw2

local float = Instance.new(&quot;BodyForce&quot;)
float.force = Vector3.new(0, shockw:GetMass() * 196.1, 0)
float.Name = &quot;float&quot;
float.Parent = shockw

local float2 = float:Clone()
float2.Parent = shockw2

function quake()
&#9;if activateQuake.Value == 1 then&#9;&#9;&#9;&#9;
&#9;&#9;quakeSound  = Tool:FindFirstChild(&quot;QuakeSound&quot;)
&#9;&#9;if quakeSound then quakeSound:Play() end
&#9;&#9;myTorso.Anchored = true
&#9;&#9;sw = shockw:Clone()&#9;&#9;
&#9;&#9;sw.Position = myTorso.Position
&#9;&#9;sw.Parent = vCharacter
&#9;&#9;sw.RotVelocity = Vector3.new(0, 10, 0)&#9;&#9;
&#9;&#9;
&#9;&#9;sw2 = shockw2:Clone()&#9;&#9;
&#9;&#9;sw2.Position = myTorso.Position&#9;&#9;
&#9;&#9;sw2.Parent = vCharacter
&#9;&#9;sw2.RotVelocity = Vector3.new(0, -10, 0)&#9;
&#9;
&#9;&#9;for i = 1, 20 do &#9;&#9;&#9;
&#9;&#9;&#9;sw.Mesh.Scale = sw.Mesh.Scale + Vector3.new(1, 1, 1)
&#9;&#9;&#9;sw2.Mesh.Scale = sw2.Mesh.Scale + Vector3.new(1, 1, 1)
&#9;&#9;&#9;sw.RotVelocity = sw.RotVelocity * i
&#9;&#9;&#9;sw2.RotVelocity = sw.RotVelocity * i
&#9;&#9;&#9;wait(0.25)&#9;&#9;&#9;
&#9;&#9;end&#9;&#9;&#9;
&#9;&#9;
&#9;&#9;myTorso.Anchored = false
&#9;&#9;if sw then sw:Remove() end
&#9;&#9;if sw2 then sw2:Remove() end
&#9;end
end

-- on touch the trident does damage
function blow(hit)
&#9;-- rarely the parent of the object that touches the trident maybe nil, so have this check
&#9;if hit.Parent then
&#9;&#9;humanoid = hit.Parent:FindFirstChild(&quot;Humanoid&quot;)
&#9;end
&#9;vCharacter = Tool.Parent
&#9;myHumanoid = vCharacter:FindFirstChild(&quot;Humanoid&quot;)
&#9;-- Get a handle to the player object for leaderboard script
&#9;vPlayer = game.Players:GetPlayerFromCharacter(vCharacter)
&#9;if humanoid ~= nil and myHumanoid ~= nil and humanoid ~= myHumanoid then 
&#9;&#9;rightArm = vCharacter:FindFirstChild(&quot;Right Arm&quot;)
&#9;&#9;if rightArm then 
&#9;&#9;&#9;rightGrip = rightArm:FindFirstChild(&quot;RightGrip&quot;)
&#9;&#9;&#9;-- check if trident is welded with the right arm
&#9;&#9;&#9;if rightGrip and (rightGrip.Part0 == Trident or rightGrip.Part1 == Trident) then
&#9;&#9;&#9;&#9;tagHumanoid(humanoid, vPlayer)
&#9;&#9;&#9;&#9;humanoid:TakeDamage(damage)
&#9;&#9;&#9;end
&#9;&#9;end   
&#9;end
end

-- tag the humanoid for leaderboard stuff
function tagHumanoid(humanoid, player)
&#9;if humanoid ~= nil then 
&#9;&#9;creator = Instance.new(&quot;ObjectValue&quot;)
&#9;&#9;creator.Name = &quot;creator&quot;
&#9;&#9;creator.Value = player
&#9;&#9;creator.Parent = humanoid
&#9;&#9;-- Mark the tag to be collected after 1 second
&#9;&#9;debris:addItem(creator, 1)
&#9;end
end

function onActivated()
&#9;-- if the Tool is not enabled then return
&#9;if Tool.Enabled == false then 
&#9;&#9;return
&#9;end

&#9;Tool.Enabled = false

&#9;vCharacter = Tool.Parent
&#9;myTorso = vCharacter:FindFirstChild(&quot;Torso&quot;)
&#9;if myTorso == nil then 
&#9;&#9;return
&#9;end

&#9;wait(1.5)
&#9;Tool.Enabled = true 
end

function onEquipped()
&#9;vCharacter = Tool.Parent
&#9;myTorso = vCharacter:FindFirstChild(&quot;Torso&quot;)
end

function onUnequipped()
&#9;-- Stop the sounds
&#9;if quakeSound then quakeSound:Stop() end
end

activateQuake = Tool:FindFirstChild(&quot;ActivateQuake&quot;)
if activateQuake then activateQuake.Changed:connect(quake) end

Tool.Activated:connect(onActivated)
Tool.Equipped:connect(onEquipped)
Tool.Unequipped:connect(onUnequipped)

Trident.Touched:connect(blow)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX11">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Local Gui</string>
				<ProtectedString name="Source">Tool = script.Parent

local stillEquipped = false

function onEquippedLocal(mouse)
&#9;stillEquipped = true
&#9;if mouse == nil then 
&#9;&#9;print(&quot;Mouse not found&quot;)
&#9;&#9;return
&#9;end
&#9;while stillEquipped do 
&#9;&#9;print(&quot;Setting Mouse to go&quot;)
&#9;&#9;mouse.Icon = &quot;rbxasset://textures\\GunCursor.png&quot;
&#9;&#9;while Tool.Enabled and stillEquipped do 
&#9;&#9;&#9;wait(0.01)
&#9;&#9;end
&#9;&#9;print(&quot;Setting Mouse to wait&quot;)
&#9;&#9;mouse.Icon = &quot;rbxasset://textures\\GunWaitCursor.png&quot;
&#9;&#9;while not Tool.Enabled and stillEquipped do 
&#9;&#9;&#9;wait(0.01)
&#9;&#9;end&#9;
&#9;end
end


function onUnequippedLocal()
&#9;stillEquipped = false
end

Tool.Equipped:connect(onEquippedLocal)
Tool.Unequipped:connect(onUnequippedLocal)</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX12">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalTridentScript</string>
				<ProtectedString name="Source">-- Handle to the tool
local Tool = script.Parent
-- Handle to the physics object of the tool
local Trident = Tool.Handle

-- Animations
local stabAnim
local slashAnim
local quakeAnim

-- Handle to the character and its humanoid object
local vCharacter
local myHumanoid
local myTorso

-- Coroutine to handle the quake cooldown 
local cooldownCo 

-- List of chars to be quaked
local quakedChars = {}

local activateQuake 

-- Body Velocity 
local bodyVelocity = Instance.new(&quot;BodyVelocity&quot;)
bodyVelocity.P = 10000
bodyVelocity.Name = &quot;QuakeVel&quot;
bodyVelocity.maxForce = Vector3.new(10000, 10000, 10000)

-- Force AOE
local AOE = Vector3.new(15, 15, 15)

-- Animations
local slashAnim = Tool:FindFirstChild(&quot;SlashAnim&quot;)
local stabAnim =  Tool:FindFirstChild(&quot;StabAnim&quot;)
local anim
local allAnims = {stabAnim, slashAnim}

QuakeEnabled = Tool:WaitForChild(&quot;QuakeEnabled&quot;)

-- Special function to create custom events 
function guraGura(key)
&#9;-- If x is pressed 
&#9;myTorso = vCharacter:FindFirstChild(&quot;Torso&quot;)
&#9;activateQuake = Tool:FindFirstChild(&quot;ActivateQuake&quot;)
&#9;vPlayer = game.Players:GetPlayerFromCharacter(vCharacter)
&#9;myHumanoid = vCharacter:FindFirstChild(&quot;Humanoid&quot;)
&#9;leftArm = vCharacter:FindFirstChild(&quot;Left Arm&quot;)
&#9;if key:lower() == &quot;x&quot; then
&#9;&#9;if QuakeEnabled.Value then --Fix implemented by Luckymaxer
&#9;&#9;&#9;QuakeEnabled.Value = false
&#9;&#9;&#9;-- Reset the array to be nil 
&#9;&#9;&#9;quakedChars = {}
&#9;&#9;&#9;quakeAnim = myHumanoid:LoadAnimation(Tool.QuakeAnim)
&#9;&#9;&#9;if quakeAnim then quakeAnim:Play() end&#9;&#9;&#9;
&#9;&#9;&#9;wait(0.75)
&#9;&#9;&#9;-- Give the go ahead for the quake&#9;&#9;&#9;
&#9;&#9;&#9;activateQuake.Value = 1
&#9;&#9;&#9;vPlayer = game.Players:GetPlayerFromCharacter(vCharacter)&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;players = game.Players:GetChildren()
&#9;&#9;&#9;if #players &gt; 1 then 
&#9;&#9;&#9;&#9;for i = 1, #players do 
&#9;&#9;&#9;&#9;&#9;if players[i] ~= vPlayer then 
&#9;&#9;&#9;&#9;&#9;&#9;tempChar = players[i].Character
&#9;&#9;&#9;&#9;&#9;&#9;if tempChar then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;tempTorso = tempChar:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if tempTorso then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;distance = (tempTorso.Position - myTorso.Position).magnitude
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if distance &lt; 100 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(quakedChars, tempChar)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;for i = 1, #quakedChars do 
&#9;&#9;&#9;&#9;&#9;quakeScript = quakedChars[i]:FindFirstChild(&quot;QuakeScript&quot;)
&#9;&#9;&#9;&#9;&#9;if quakeScript == nil then
&#9;&#9;&#9;&#9;&#9;&#9;quakeScript = script.QuakeScript:Clone()
&#9;&#9;&#9;&#9;&#9;&#9;quakeScript.Parent = quakedChars[i]
&#9;&#9;&#9;&#9;&#9;&#9;quakeScript.Disabled = false
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end&#9;&#9;
&#9;&#9;&#9;end&#9;
&#9;&#9;&#9;parts = game.Workspace:FindPartsInRegion3(Region3.new(myTorso.Position - AOE, myTorso.Position + AOE), vCharacter, 100)&#9;&#9;&#9;
&#9;&#9;&#9;for i = 1, #parts do 
&#9;&#9;&#9;&#9;if parts[i].Anchored == false then 
&#9;&#9;&#9;&#9;newBV = bodyVelocity:Clone()
&#9;&#9;&#9;&#9;distance = (myTorso.Position - parts[i].Position).magnitude
&#9;&#9;&#9;&#9;newBV.velocity = (parts[i].Position - myTorso.Position).unit * 40  
&#9;&#9;&#9;&#9;newBV.Parent = parts[i]&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;tempHumanoid = parts[i].Parent:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;&#9;if tempHumanoid then if distance &gt; 10 then tempHumanoid:TakeDamage(8) else tempHumanoid:TakeDamage(12) end end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end&#9;
&#9;&#9;&#9;wait(2.0)
&#9;&#9;&#9;for i = 1, #parts do 
&#9;&#9;&#9;&#9;bv = parts[i]:FindFirstChild(&quot;QuakeVel&quot;)
&#9;&#9;&#9;&#9;if bv then bv:Remove() end
&#9;&#9;&#9;end
&#9;&#9;&#9;activateQuake.Value = 0
&#9;&#9;end
&#9;end
end

function onActivated()
&#9;-- Wait until the tool is enabled again by the serverside script under the tool 
&#9;-- This only works because localscripts are executed client side and so will always be executed faster 
&#9;-- so before the serverside script locks Enabled this function will always skip this loop and go forward 
&#9;while Tool.Enabled == false do wait() end
&#9;vCharacter = Tool.Parent
&#9;myHumanoid = vCharacter:FindFirstChild(&quot;Humanoid&quot;)
&#9;if myHumanoid == nil then 
&#9;&#9;return
&#9;end
&#9;rand = math.random(1, 2)
&#9;anim = myHumanoid:LoadAnimation(allAnims[rand])&#9;
&#9;if anim then anim:Play() end
&#9;if rand == 2 then
&#9;&#9;Tool.GripPos = Vector3.new(0, 0, -2.8) 
&#9;&#9;wait(1.2)
&#9;&#9;Tool.GripPos = Vector3.new(0, 0, -0.6) 
&#9;else
&#9;&#9;wait(0.2)
&#9;&#9;Tool.GripUp = Vector3.new(0, 0, -1)
&#9;&#9;Tool.GripPos = Vector3.new(0, 0, -3.0)
&#9;&#9;wait(0.7)
&#9;&#9;Tool.GripPos = Vector3.new(0, 0, -0.6) 
&#9;&#9;Tool.GripUp = Vector3.new(0, 0, 1)
&#9;end

end

function onEquipped(mouse)
&#9;-- Always nice to get the handle to the character established during the Equipped event
&#9;vCharacter = Tool.Parent
&#9;-- If mouse object is found then connect keyboard events to the GuraGura function
&#9;if mouse then mouse.KeyDown:connect(guraGura) end
&#9;activeQuake = Tool:FindFirstChild(&quot;ActivateQuake&quot;)
end

function onUnequipped()
&#9;-- stop any animation that maybe playing when unequipped event is called
&#9;-- before trying to stop make sure that the animation object exists
&#9;-- for example the variables never get loaded with animations if the tool is never activated 
&#9;-- but it can be equipped and unequipped
&#9;if anim then anim:Stop() end
end

Tool.Activated:connect(onActivated)
Tool.Equipped:connect(onEquipped)
Tool.Unequipped:connect(onUnequipped)</ProtectedString>
			</Properties>
			<Item class="LocalScript" referent="RBX13">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">QuakeScript</string>
					<ProtectedString name="Source">local char = script.Parent 

local humanoid = char:FindFirstChild(&quot;Humanoid&quot;)
local myTorso = char:FindFirstChild(&quot;Torso&quot;)

local camera = game.Workspace.CurrentCamera

local duration = 3.0

bodyAngularVelocity = Instance.new(&quot;BodyAngularVelocity&quot;)
bodyAngularVelocity.P = 10000
bodyAngularVelocity.Name = &quot;Tripforce&quot;
bodyAngularVelocity.Parent = myTorso

if humanoid then 
&#9;while duration &gt; 0 do 
&#9;&#9;rand = math.random(1, 100)
&#9;&#9;rand2 = math.random(2, 50)
&#9;&#9;bodyAngularVelocity.angularvelocity = Vector3.new(rand/10, (rand2 * rand)/10, (rand/rand2))
&#9;&#9;camera.CameraType = 1&#9;&#9;
&#9;&#9;humanoid.Sit = not humanoid.Sit
&#9;&#9;duration = duration - 0.15
&#9;&#9;wait(0.15)
&#9;end
&#9;humanoid.Sit = false
&#9;if bodyAngularVelocity then bodyAngularVelocity:Remove() end
&#9;camera.CameraType = 5
end

wait(2.0)
script:Remove() </ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX14">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-1.09519446</X>
					<Y>10.0501842</Y>
					<Z>9.62607765</Z>
					<R00>0.966822505</R00>
					<R01>0.0531092994</R01>
					<R02>-0.249867171</R02>
					<R10>-0</R10>
					<R11>0.978148878</R11>
					<R12>0.207905665</R12>
					<R20>0.255449027</R20>
					<R21>-0.201007873</R21>
					<R22>0.945696354</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-0.595459878</X>
					<Y>9.63437271</Y>
					<Z>7.73468399</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>