<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>-2</Z>
				<R00>0</R00>
				<R01>0</R01>
				<R02>-1</R02>
				<R10>-1</R10>
				<R11>0</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>1</R21>
				<R22>0</R22>
			</CoordinateFrame>
			<string name="Name">SummerSword</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=54371602 </url></Content>
			<bool name="archivable">true</bool>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">199</int>
				<CoordinateFrame name="CFrame">
					<X>-11.9615364</X>
					<Y>2.15560222</Y>
					<Z>11.379385</Z>
					<R00>0.984753907</R00>
					<R01>0.173279017</R01>
					<R02>0.0152993985</R02>
					<R10>-0.0592164248</R10>
					<R11>0.251227915</R11>
					<R12>0.966113746</R12>
					<R20>0.163563713</R20>
					<R21>-0.952291012</R21>
					<R22>0.257658958</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">3</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.800002098</X>
					<Y>0.230000004</Y>
					<Z>5.17999744</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=54372190 </url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>2</X>
						<Y>2</Y>
						<Z>2</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=54371538 </url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX3">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Local Gui</string>
				<ProtectedString name="Source">Tool = script.Parent

local stillEquipped = false

function onEquippedLocal(mouse)
	stillEquipped = true
	if mouse == nil then 
		print(&quot;Mouse not found&quot;)
		return
	end
	while stillEquipped do 
		print(&quot;Setting Mouse to go&quot;)
		mouse.Icon = &quot;rbxasset://textures\\GunCursor.png&quot;
		while Tool.Enabled and stillEquipped do 
			wait(0.01)
		end
		print(&quot;Setting Mouse to wait&quot;)
		mouse.Icon = &quot;rbxasset://textures\\GunWaitCursor.png&quot;
		while not Tool.Enabled and stillEquipped do 
			wait(0.01)
		end	
	end
end


function onUnequippedLocal()
	stillEquipped = false
end

Tool.Equipped:connect(onEquippedLocal)
Tool.Unequipped:connect(onUnequippedLocal)</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX4">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">SummerSwordScript</string>
				<ProtectedString name="Source">-- Can summon leaves to do massive amounts of damage and blast enemies away
-- slash has wider reach
-- 12% chance to heal yourself when doing damage
-- +2 hp regeneration per second

local Tool = script.Parent
local Sword = Tool.Handle

local vCharacter
local myTorso

Tool.Enabled = true 

local slashSound

local damage = 24

local debris = game:GetService(&quot;Debris&quot;)

function tagHumanoid(humanoid, player)
	if humanoid ~= nil then
		creator = Instance.new(&quot;ObjectValue&quot;)
		creator.Name = &quot;creator&quot;
		creator.Value = player
		creator.Parent = humanoid
		debris:addItem(creator, 1)
	end
end

function blow(hit)
	if hit.Parent then
		humanoid = hit.Parent:FindFirstChild(&quot;Humanoid&quot;)
	end
	vCharacter = Tool.Parent
	vPlayer = game.Players:GetPlayerFromCharacter(vCharacter)
	myHumanoid = vCharacter:FindFirstChild(&quot;Humanoid&quot;)
	if humanoid ~= nil and myHumanoid ~= nil and myHumanoid ~= humanoid then		
		rightArm = vCharacter:FindFirstChild(&quot;Right Arm&quot;)
		if rightArm then 			
			rightGrip = rightArm:FindFirstChild(&quot;RightGrip&quot;)
			if rightGrip and (rightGrip.Part0 == Sword or rightGrip.Part1 == Sword) then 
				print(&quot;Doing Damage&quot;)
				tagHumanoid(humanoid, vPlayer)
				humanoid:TakeDamage(damage)
				local heal = math.random(1, 100)
				if heal &lt;= 12 then
					if (myHumanoid.Health + 10) &lt;= myHumanoid.MaxHealth then 
						myHumanoid.Health = myHumanoid.Health + 10
					else
						myHumanoid.Health = myHumanoid.MaxHealth
					end
				end
			end
		end
	end
end

function onActivated()
	if Tool.Enabled == false then 
		return
	end

	Tool.Enabled = false

	vCharacter = Tool.Parent
	myTorso = vCharacter:FindFirstChild(&quot;Torso&quot;)
	if myTorso == nil then return end

	wait(1.0)
	Tool.Enabled = true
end

function onEquipped()	
	regenScript = Tool:FindFirstChild(&quot;RegenScript&quot;)
	if regenScript then
		regenScript.Disabled = false
	end
	checkScript = Tool:FindFirstChild(&quot;CheckForAllSeasons&quot;)
	if checkScript then 
		checkScript.Parent = Tool.Parent
	end
end

function onUnEquipped()
	if slashSound then slashSound:Stop() end
	regenScript = Tool:FindFirstChild(&quot;RegenScript&quot;)
	if regenScript then
		regenScript.Disabled = true
	end
end

Tool.Activated:connect(onActivated)
Tool.Equipped:connect(onEquipped)
Tool.Unequipped:connect(onUnequipped)

Sword.Touched:connect(blow)</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX5">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">SummerAnimateScript</string>
				<ProtectedString name="Source">local Tool = script.Parent
local Sword = Tool.Handle

local vCharacter
local myHumanoid
local myTorso

local slashAnim
local waveAnim

local co

local wave

local waveDamage = 15

function wait25()
	wait(25)
end

function blow(hit)	
	if hit.Parent then 
		humanoid = hit.Parent:FindFirstChild(&quot;Humanoid&quot;)
		tempTorso = hit.Parent:FindFirstChild(&quot;Torso&quot;)
	end
	vCharacter = Tool.Parent
	myHumanoid = vCharacter:FindFirstChild(&quot;Humanoid&quot;)
	myTorso = vCharacter:FindFirstChild(&quot;Torso&quot;)
	vPlayer = game.Players:GetPlayerFromCharacter(vCharacter)
	if humanoid ~= nil and myHumanoid ~= humanoid then 				
		humanoid:TakeDamage(waveDamage)	
	end
	if hit.Anchored == false then 
		bv = Instance.new(&quot;BodyVelocity&quot;)
		bv.P = 100000
		bv.maxForce = Vector3.new(bv.P, 0, bv.P)
		if humanoid == nil and not vCharacter:IsAncestorOf(hit) then 
			bv.velocity = (hit.Position - myTorso.Position).unit * 50.0 
			bv.Parent = hit
		elseif vCharacter:IsAncestorOf(hit) == false and humanoid ~= myHumanoid then
			bv.velocity = (tempTorso.Position - myTorso.Position).unit * 50.0 
			bv.Parent = tempTorso 	
		end 
	end
end

function turnOnTheHeat(key)
	if key:lower() == &quot;e&quot; then 
		if co == nil or coroutine.status == &apos;dead&apos; then 
			co = coroutine.create(wait25)
			coroutine.resume(co)
			if myHumanoid then 
				waveAnim = myHumanoid:LoadAnimation(Tool.WaveAnim)
				if waveAnim then waveAnim:Play() end
				wait(0.5)
			end			
			wave = Instance.new(&quot;Part&quot;)
			wave.Name = &quot;SUMMERTIME&quot;
			wave.Size = Vector3.new(7, 7, 10)
			wave.CanCollide = false
			wave.CFrame = (myTorso.CFrame + (myTorso.CFrame.lookVector * 6.0)) * CFrame.Angles(math.pi/2, 0, 0)
			wave.Parent = game.Workspace

			float = Instance.new(&quot;BodyForce&quot;)
			float.force = Vector3.new(0, wave:GetMass() * 196.1, 0)
			float.Parent = wave

			bav = Instance.new(&quot;BodyAngularVelocity&quot;)
			bav.P = 5000000
			bav.maxTorque = Vector3.new(bav.P, bav.P, bav.P)
			bav.angularvelocity = Vector3.new(20, 0, 0)
			bav.Parent = wave
			
			waveMesh = Instance.new(&quot;SpecialMesh&quot;)
			waveMesh.MeshId = &quot;http://www.roblox.com/asset/?id=54662987&quot;
			waveMesh.TextureId = &quot;http://www.roblox.com/asset/?id=54663425&quot;
			waveMesh.Scale = Vector3.new(2, 2, 2)
			waveMesh.Parent = wave

			wave.Touched:connect(blow)
			myTorso.Anchored = true
			wait(2.0)
			myTorso.Anchored = false
			wait(1.0)
			if wave then wave:Remove() end
		end
	end
end

function onActivated()
	if Tool.Enabled == false then return end	
	
	myHumanoid = vCharacter:FindFirstChild(&quot;Humanoid&quot;)
	if myHumanoid == nil then return end
	
	slashAnim = myHumanoid:LoadAnimation(Tool.SlashAnim)
	if slashAnim then slashAnim:Play() end
end

function onEquipped(mouse)
	vCharacter = Tool.Parent
	myHumanoid = vCharacter:FindFirstChild(&quot;Humanoid&quot;)
	myTorso = vCharacter:FindFirstChild(&quot;Torso&quot;)
	mouse.KeyDown:connect(turnOnTheHeat)
end

function onUnequipped()
	if slashAnim then slashAnim:Stop() end
	if waveAnim then waveAnim:Stop() end
end

Tool.Activated:connect(onActivated)
Tool.Equipped:connect(onEquipped)
Tool.Unequipped:connect(onUnequipped)
</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX6">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">CheckForAllSeasons</string>
				<ProtectedString name="Source">local Tool = script.Parent

function removeSwords(itemsToRemove)
	for i = 1, #itemsToRemove do 
		itemsToRemove[i]:Remove()  
	end
end

function createAllSeasonSword(summerSword)
	summerSword.GripPos = Vector3.new(0, 0, -2.5)
	sword = summerSword.Handle
	swordMesh = sword.Mesh
	swordMesh.MeshId = &quot;http://www.roblox.com/asset/?id=54383785&quot;
	swordMesh.TextureId = &quot;http://www.roblox.com/asset/?id=54383840&quot;
	summerSword.TextureId = &quot;http://www.roblox.com/asset/?id=54383861&quot;

	summerSword.Parent = script.Parent

	wait(0.5)
	
	summerSword.Name = &quot;AllSeasonsSword&quot;
	summerScript = summerSword:FindFirstChild(&quot;SummerSwordScript&quot;)
	sumAnimateScript = summerSword:FindFirstChild(&quot;SummerAnimateScript&quot;)
	if summerScript then summerScript.Disabled = true summerScript:Remove() end
	if sumAnimateScript then sumAnimateScript.Disabled = true sumAnimateScript:Remove() end

	seasonsScript = summerSword:FindFirstChild(&quot;SeasonsSwordScript&quot;)
	if seasonsScript then seasonsScript.Disabled = false end
	
	seasonsAnimScript = summerSword:FindFirstChild(&quot;SeasonsAnimateScript&quot;)
	if seasonsAnimScript then seasonsAnimScript.Disabled = false end

	regenScript = summerSword:FindFirstChild(&quot;RegenScript&quot;)
	--if regenScript then regenScript.Disabled = true wait(1.0) regenScript.Disabled = false end

	checkScript = summerSword:FindFirstChild(&quot;CheckForAllSeasons&quot;)
	if checkScript then checkScript:Remove() end

	wait(1.0)
	script:Remove()
end

while true do 
	wait(3.0)
	local summerSword	
	vPlayer = game.Players:GetPlayerFromCharacter(script.Parent)
	local count = 0
	local countSummer = 0
	local itemsToRemove = {}
	if vPlayer ~= nil then
		items = vPlayer.Backpack:GetChildren()
		for i = 1, #items do 
			if items[i].Name == &quot;FallSwordFixed&quot; or items[i].Name == &quot;SpringSwordOfGrowth&quot; or items[i].Name == &quot;WinterSword&quot; then 
				print(&quot;Finding others&quot;)
				count = count + 1
				table.insert(itemsToRemove, items[i])
			elseif items[i].Name == &quot;SummerSword&quot; and countSummer == 0 then
				print(&quot;Finding Summer&quot;)
				count = count + 1
				countSummer = 1 
				if summerSword  == nil then 
					summerSword = items[i]:Clone() 
				end
				table.insert(itemsToRemove, items[i])
			end
		end
	end	
	if count == 4 then 		
		removeSwords(itemsToRemove)		
		createAllSeasonSword(summerSword)
	end
end


</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX7">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=54672068</url></Content>
				<string name="Name">WaveAnim</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX8">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=54673790</url></Content>
				<string name="Name">SlashAnim</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX9">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">RegenScript</string>
				<ProtectedString name="Source">Tool = script.Parent

vCharacter = Tool.Parent
myHumanoid = vCharacter:FindFirstChild(&quot;Humanoid&quot;)

if Tool.Name == &quot;SummerSword&quot; and myHumanoid then 
	while true do 
		if myHumanoid then
			if (myHumanoid.Health + 2) &lt;= myHumanoid.MaxHealth then 
				myHumanoid.Health = myHumanoid.Health + 2			
			end
		end
		wait(1.0)
	end
end

if Tool.Name == &quot;AllSeasonsSword&quot; then 
	-- 5 hp regen per second
	while true do
		if myHumanoid then
			if (myHumanoid.Health + 5) &lt;= myHumanoid.MaxHealth then
				myHumanoid.Health = myHumanoid.Health + 5 
			end
		end
		wait(1.0)
	end
end
</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX10">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">SeasonsAnimateScript</string>
				<ProtectedString name="Source">local Tool = script.Parent
local Sword = Tool.Handle

local iceCo
local natureCo

local vCharacter
local myTorso
local myHumanoid

function wait12()	
	wait(12)
end

function wait20()
	wait(20)
end

function letsDoThis(key)
	if key:lower() == &quot;x&quot; then
		print(&quot;pRessed x&quot;)
		formIce = Tool:FindFirstChild(&quot;FormIce&quot;)
		if iceCo == nil or coroutine.status(iceCo) == &apos;dead&apos; then
			iceCo = coroutine.create(wait12)
			coroutine.resume(iceCo)
			if formIce then formIce.Value = 1 end
			ice = Instance.new(&quot;Fire&quot;)
			ice.Name = &quot;Ice&quot;
			ice.Parent = Sword
			ice.Color = Color3.new(0, 0, 0.9)
			ice.SecondaryColor = Color3.new(0, 0, 0.5)
		end
	elseif key:lower() == &quot;e&quot; then
		print(&quot;pRessed e&quot;)
		if natureCo == nil or coroutine.status(natureCo) == &apos;dead&apos; then 
			natureCo = coroutine.create(wait20)
			coroutine.resume(natureCo)
			players = game.Players:GetChildren()
			for i = 1, #players do 
				tempChar = players[i].Character
				tempTorso = tempChar:FindFirstChild(&quot;Torso&quot;)
				tempHumanoid = tempChar:FindFirstChild(&quot;Humanoid&quot;)
				if tempTorso and tempChar ~= vCharacter then 
					distance = (tempTorso.Position - myTorso.Position).magnitude
					if distance &lt; 35 then 
						if tempHumanoid then tempHumanoid:TakeDamage(10) end
						if (myHumanoid.Health + 10) &lt;= myHumanoid.MaxHealth then 
							myHumanoid.Health = myHumanoid.Health + 10
						else
							myHumanoid.Health = myHumanoid.MaxHealth
						end
					end
				end					
			end
		end
	end
	
end

function onEquipped(mouse)
	vCharacter = Tool.Parent
	myTorso = vCharacter:FindFirstChild(&quot;Torso&quot;)
	myHumanoid = vCharacter:FindFirstChild(&quot;Humanoid&quot;)
	mouse.KeyDown:connect(letsDoThis)
end

Tool.Equipped:connect(onEquipped)
</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX11">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">SeasonsSwordScript</string>
				<ProtectedString name="Source">-- ALL SEASONS --
-- OH YA BROSKI --
r = game:service(&quot;RunService&quot;) 
local sword = script.Parent.Handle 
local Tool = script.Parent 

local damage = 22

local slash_damage = 30
local lunge_damage = 36 

local SlashSound = Instance.new(&quot;Sound&quot;) 
SlashSound.SoundId = &quot;rbxasset://sounds\\swordslash.wav&quot; 
SlashSound.Parent = sword 
SlashSound.Volume = .7 

local LungeSound = Instance.new(&quot;Sound&quot;) 
LungeSound.SoundId = &quot;rbxasset://sounds\\swordlunge.wav&quot; 
LungeSound.Parent = sword 
LungeSound.Volume = .6 

local UnsheathSound = Instance.new(&quot;Sound&quot;) 
UnsheathSound.SoundId = &quot;rbxasset://sounds\\unsheath.wav&quot; 
UnsheathSound.Parent = sword 
UnsheathSound.Volume = 1 

local vCharacter
local myHumanoid
local myTorso

local formIce 

local co

function freeze(humanoid, torso)		
	print(&quot;coroutined&quot;)
	ice = sword:FindFirstChild(&quot;Ice&quot;)
	if ice then ice:Remove() end
	if torso and humanoid then 
		print(&quot;Done&quot;)
		humanoid.WalkSpeed = 0
		torso.Anchored = true
		icicle = Instance.new(&quot;Part&quot;)				
		icicle.FormFactor = 3
		icicle.Size = Vector3.new(3,2,3)
		icicle.Position = torso.Position + Vector3.new(0, -2, 0)
		icicle.CanCollide = false 
		icicle.Parent = game.Workspace
	
		float = Instance.new(&quot;BodyForce&quot;)
		float.force = Vector3.new(0, icicle:GetMass() * 196.1, 0)
		float.Parent = icicle
	
		mesh = Instance.new(&quot;SpecialMesh&quot;)
		mesh.MeshId = &quot;http://www.roblox.com/asset/?id=54687962&quot;
		mesh.TextureId = &quot;http://www.roblox.com/asset/?id=54688004&quot;
		mesh.Scale = Vector3.new(1.4, 1.4, 1.4)
		mesh.Parent = icicle

		wait(3.5)
		if icicle then icicle:Remove() end
		humanoid.WalkSpeed = 16
		torso.Anchored = false
	end
end

function blow(hit) 
	local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;) 
	local tempTorso = hit.Parent:FindFirstChild(&quot;Torso&quot;)
	local vCharacter = Tool.Parent 
	local vPlayer = game.Players:playerFromCharacter(vCharacter) 
	local hum = vCharacter:findFirstChild(&quot;Humanoid&quot;) -- non-nil if tool held by a character 
	if humanoid~=nil and humanoid ~= hum and hum ~= nil then           
		-- final check, make sure sword is in-hand 
		local right_arm = vCharacter:FindFirstChild(&quot;Right Arm&quot;) 
		if (right_arm ~= nil) then 
			local joint = right_arm:FindFirstChild(&quot;RightGrip&quot;) 
			if (joint ~= nil and (joint.Part0 == sword or joint.Part1 == sword)) then 
				tagHumanoid(humanoid, vPlayer)                                                         
				humanoid:TakeDamage(damage)	
				formIce = Tool:FindFirstChild(&quot;FormIce&quot;)
				if formIce and formIce.Value == 1 then 
					print(&quot;Icing&quot;)
					formIce.Value = 0
					co = coroutine.create(freeze)
					coroutine.resume(co, humanoid, tempTorso)
				end
				wait(1) 
				untagHumanoid(humanoid)                     
			end 
		end 
	end 
end 


function tagHumanoid(humanoid, player) 
     local creator_tag = Instance.new(&quot;ObjectValue&quot;) 
     creator_tag.Value = player 
     creator_tag.Name = &quot;creator&quot; 
     creator_tag.Parent = humanoid 
end 

function untagHumanoid(humanoid) 
     if humanoid ~= nil then 
          local tag = humanoid:findFirstChild(&quot;creator&quot;) 
          if tag ~= nil then 
               tag.Parent = nil 
          end 
     end 
end 


function attack() 
     damage = slash_damage 
     SlashSound:play() 
     local anim = Instance.new(&quot;StringValue&quot;) 
     anim.Name = &quot;toolanim&quot; 
     anim.Value = &quot;Slash&quot; 
     anim.Parent = Tool 
end 

function lunge() 
     damage = lunge_damage 
     LungeSound:play() 


     local anim = Instance.new(&quot;StringValue&quot;) 
     anim.Name = &quot;toolanim&quot; 
     anim.Value = &quot;Lunge&quot; 
     anim.Parent = Tool 
      
     force = Instance.new(&quot;BodyVelocity&quot;) 
     force.velocity = Vector3.new(0,10,0) --Tool.Parent.Torso.CFrame.lookVector * 80 
     force.Parent = Tool.Parent.Torso 
     wait(.2) 
     swordOut() 
     wait(.2) 
     force.Parent = nil 
     wait(.4) 
     swordUp() 
     damage = slash_damage 
end 

function swordUp() 
     Tool.GripForward = Vector3.new(1,0,0) 
     Tool.GripRight = Vector3.new(0, -1, 0) 
     Tool.GripUp = Vector3.new(0, 0, 1) 
end 

function swordOut() 
     Tool.GripForward = Vector3.new(0, 0, 1) 
     Tool.GripRight = Vector3.new(0, -1, 0) 
     Tool.GripUp = Vector3.new(-1, 0, 0) 
end 

Tool.Enabled = true 
local last_attack = 0 
function onActivated() 		
	if not Tool.Enabled then 
		 return 
	end 

	Tool.Enabled = false 

	local character = Tool.Parent; 
	local humanoid = character.Humanoid 
	if humanoid == nil then 
		 print(&quot;Humanoid not found&quot;) 
		 return 
	end 

	t = r.Stepped:wait() 

	if (t - last_attack &lt; .2) then 
		 lunge() 
	else 
		 attack() 
	end 

	last_attack = t 

	--wait(0.5) 

	Tool.Enabled = true 
end 

function onEquipped()      
	UnsheathSound:play()  
	vCharacter = Tool.Parent
	myHumanoid = vCharacter:FindFirstChild(&quot;Humanoid&quot;)
	if myHumanoid then myHumanoid.WalkSpeed = 20 end
	formIce = Tool:FindFirstChild(&quot;FormIce&quot;)
	regenScript = Tool:FindFirstChild(&quot;RegenScript&quot;)
	if regenScript then
		regenScript.Disabled = false
	end
end 

function onUnequipped()
	if myHumanoid then myHumanoid.WalkSpeed = 16 end
	regenScript = Tool:FindFirstChild(&quot;RegenScript&quot;)
	if regenScript then
		regenScript.Disabled = true
	end
end

script.Parent.Activated:connect(onActivated) 
script.Parent.Equipped:connect(onEquipped) 
script.Parent.Unequipped:connect(onUnequipped)

connection = sword.Touched:connect(blow) 

</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="NumberValue" referent="RBX12">
			<Properties>
				<string name="Name">FormIce</string>
				<double name="Value">0</double>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX13">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-9.83085346</X>
					<Y>2.70376658</Y>
					<Z>4.81285572</Z>
					<R00>-0.953191757</R00>
					<R01>-0.0434666015</R01>
					<R02>0.299225867</R02>
					<R10>3.7252903e-009</R10>
					<R11>0.989613354</R11>
					<R12>0.143754736</R12>
					<R20>-0.302366436</R20>
					<R21>0.137025833</R21>
					<R22>-0.943291306</R22>
				</CoordinateFrame>
				<CoordinateFrame name="Focus">
					<X>-15.8153706</X>
					<Y>-0.171328068</Y>
					<Z>23.6786804</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
	</Item>
</roblox>