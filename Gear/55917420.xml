<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="Archivable">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>-0.5</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>-0</R02>
				<R10>0</R10>
				<R11>0</R11>
				<R12>-1</R12>
				<R20>0</R20>
				<R21>1</R21>
				<R22>-0</R22>
			</CoordinateFrame>
			<string name="Name">SkyElixir</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=55817340 </url></Content>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<bool name="Archivable">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>1.15000021</X>
					<Y>13.939992</Y>
					<Z>-0.589998484</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">3</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.779999793</X>
					<Y>0.480000198</Y>
					<Z>1.66000414</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<bool name="Archivable">true</bool>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=55817170 </url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>2</X>
						<Y>2</Y>
						<Z>2</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=55817215 </url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX3">
			<Properties>
				<bool name="Archivable">true</bool>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">FlyScript</string>
				<ProtectedString name="Source">local Tool = script.Parent
local Elixir = Tool.Handle

local flightSpin 
local flightPower 
local flightHold 

local wing = Instance.new(&quot;Part&quot;)
wing.CanCollide = false 
wing.Shape = &quot;Block&quot;
wing.FormFactor = 3
wing.Size = Vector3.new(3, 1, 3)

local wingM = Instance.new(&quot;SpecialMesh&quot;)
wingM.TextureId = &quot;http://www.roblox.com/asset/?id=55821488&quot;
wingM.Scale = Vector3.new(3.5, 3.5, 3.5)
wingM.Parent = wing

local leftWing
local rightWing
local leftWeld
local rightWeld

local leftW1
local rightW1

local wingCo 
local cooldownCo

local vCharacter
local myTorso
local myHumanoid

local wingActive 

local debris = game:GetService(&quot;Debris&quot;)

Tool.Enabled = true

function blow(hit)
	if hit.Parent then 
		humanoid = hit.Parent:FindFirstChild(&quot;Humanoid&quot;)
	end
	vPlayer = game.Players:GetPlayerFromCharacter(vCharacter)	
	if humanoid ~= nil and humanoid ~= myHumanoid then 
		tagHumanoid(humanoid, vPlayer)
		humanoid:TakeDamage(5)
	end
end

function tagHumanoid(humanoid, player)
	if humanoid ~= nil then 
		creator = Instance.new(&quot;ObjectValue&quot;)
		creator.Parent = humanoid
		creator.Value = player
		creator.Name = &quot;creator&quot;
		debris:AddItem(creator, 1)
	end
end

function wingUpdate()	
	local count = 1
	local anglePerFrame = -0.010
	if leftWing and rightWing then 		
		leftWeld = leftWing:FindFirstChild(&quot;LeftWeld&quot;)
		rightWeld = rightWing:FindFirstChild(&quot;RightWeld&quot;)				
		if leftWeld then leftW1 = leftWeld.C1  end
		if rightWeld then rightW1 = rightWeld.C1 end
	end
	while leftWeld and rightWeld do
		leftWeld.C1 = leftWeld.C1 * CFrame.Angles(0, anglePerFrame * (count%10), 0)
		rightWeld.C1 = rightWeld.C1 * CFrame.Angles(0, -anglePerFrame * (count%10), 0)		
		if count%10 == 0 then anglePerFrame = -anglePerFrame end 
		count = count + 1
		wait(0.03)
	end
end

function cooldown()
	wait(30.0)
	if leftWing then leftWing:Remove() end
	if rightWing then rightWing:Remove() end
	if flightSpin then flightSpin:Remove() end
	if flightPower then flightPower:Remove() end
	if flightHold then flightHold:Remove() end
	ratio = myHumanoid.Health/myHumanoid.MaxHealth
	myHumanoid.MaxHealth = 100
	wait(0.1)
	myHumanoid.Health = ratio * 100
	wait(15.0)
	if leftWeld and leftW1 then leftWeld.C1 = leftW1 end
	if rightWeld and rightW1 then rightWeld.C1 = rightW1 end
	Tool.Enabled = true 
	Elixir.Transparency = 0.0
	if wingActive then wingActive.Value = 0 end
end

function onActivated()
	vCharacter = Tool.Parent
	if vCharacter ~= nil then
		myHumanoid = vCharacter:FindFirstChild(&quot;Humanoid&quot;)
		if myHumanoid then
			myTorso = vCharacter:FindFirstChild(&quot;Torso&quot;)
			wingActive = Tool:FindFirstChild(&quot;WingActive&quot;)			
			if myTorso then
				if cooldownCo == nil or coroutine.status(cooldownCo) == &apos;dead&apos; then
					Elixir.Transparency = 1.0			

					ratio = myHumanoid.Health/myHumanoid.MaxHealth
					myHumanoid.MaxHealth = 200
					wait(0.1)
					myHumanoid.Health = ratio * 200
					
					flightSpin = myTorso:FindFirstChild(&quot;FlightSpin&quot;)
					flightPower = myTorso:FindFirstChild(&quot;FlightPower&quot;)
					flightHold = myTorso:FindFirstChild(&quot;FlightHold&quot;)
					if flightSpin ~= nil or flightPower ~= nil or flightHold ~= nil then debounce = false return end
					Tool.Enabled = false
					if wingActive then wingActive.Value = 1 end
					leftWing = wing:Clone()
					leftWing.Name = &quot;LeftWing&quot;
					leftWing.Mesh.MeshId = &quot;http://www.roblox.com/asset/?id=55820516&quot;
					leftWing.Parent = vCharacter

					rightWing = wing:Clone()
					rightWing.Name = &quot;RightWing&quot;
					rightWing.Mesh.MeshId = &quot;http://www.roblox.com/asset/?id=55821108&quot;
					rightWing.Parent = vCharacter
				
					leftWeld = Instance.new(&quot;Weld&quot;)
					leftWeld.Name = &quot;LeftWeld&quot;
					leftWeld.Part0 = myTorso
					leftWeld.Part1 = leftWing
					leftWeld.C1 = CFrame.new(Vector3.new(-2.4, -0.5, -0.5)) * CFrame.Angles(math.pi/2, math.pi, 0)
					leftWeld.Parent = leftWing
		
					rightWeld = leftWeld:Clone()
					rightWeld.Name = &quot;RightWeld&quot;
					rightWeld.Part1 = rightWing
					rightWeld.Parent = rightWing
					rightWeld.C1 = CFrame.new(Vector3.new(2.4, -0.5, -0.5)) * CFrame.Angles(math.pi/2, math.pi, 0)
					
					flightSpin = Instance.new(&quot;BodyGyro&quot;)
					flightPower = Instance.new(&quot;BodyVelocity&quot;)

					flightHold = Instance.new(&quot;BodyPosition&quot;)
					flightHold.Name = &quot;FlightHold&quot;
					flightHold.P = 100000
					flightHold.maxForce = Vector3.new(0,0,0)


					flightPower.Name = &quot;FlightPower&quot;
					flightPower.velocity = Vector3.new(0,0,0)
					flightPower.P = 1000000
					flightPower.maxForce = Vector3.new(flightPower.P, flightPower.P, flightPower.P)
					flightPower.P = 10000

					flightSpin.Name = &quot;FlightSpin&quot;
					flightSpin.P = 1000000
					flightSpin.maxTorque = Vector3.new(flightSpin.P, flightSpin.P, flightSpin.P)

					flightSpin.cframe = myTorso.CFrame
					flightSpin.Parent = myTorso
					flightHold.position = myTorso.Position
					flightHold.Parent = myTorso
					flightPower.Parent = myTorso

					myTorso.Velocity = Vector3.new(0,0,0)
					myTorso.RotVelocity = Vector3.new(0,0,0)

					wingCo = coroutine.create(wingUpdate)
					coroutine.resume(wingCo)

					cooldownCo = coroutine.create(cooldown)
					coroutine.resume(cooldownCo)

					leftWing.Touched:connect(blow)
					rightWing.Touched:connect(blow)
				end
			end
		end
	end
end

function onUnequipped()		
	if flightPower then flightPower:remove() end
	if flightSpin then flightSpin:remove() end
	if flightHold then flightHold:remove() end
	
	if leftWing then leftWing:Remove() end
	if rightWing then rightWing:Remove() end

	if myHumanoid then 
		ratio = myHumanoid.Health/myHumanoid.MaxHealth
		myHumanoid.MaxHealth = 100
		wait(0.1)
		myHumanoid.Health = ratio * 100
	end
end


Tool.Activated:connect(onActivated)
Tool.Unequipped:connect(onUnequipped)

</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX4">
			<Properties>
				<bool name="Archivable">true</bool>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">FlightControl</string>
				<ProtectedString name="Source">local Tool = script.Parent

local flightPower 
local flightSpin 
local flightHold 

local camSpeedZ = 60
local camSpeedX = 40

local forwards = false
local back = false
local left = false
local right = false

local movementHandlerCo 

local hover = -.1

local wingActive

local myTorso
local vCharacter

function handleMovementFrame()
	local newPush = Vector3.new(0,0,0)
	local forwardVector = game.Workspace.CurrentCamera.CoordinateFrame:vectorToWorldSpace(Vector3.new(0, 0, -1))

	if forwards and not back then newPush = forwardVector * camSpeedZ end
	if back and not forwards then newPush = newPush + forwardVector * -camSpeedZ end
	if left and not right then newPush = newPush + game.Workspace.CurrentCamera.CoordinateFrame:vectorToWorldSpace(Vector3.new(-1, 0, 0)) * camSpeedX end
	if right and not left then newPush = newPush + game.Workspace.CurrentCamera.CoordinateFrame:vectorToWorldSpace(Vector3.new(1, 0, 0)) * camSpeedX end

	flightSpin.cframe = CFrame.new(Vector3.new(0,0,0), forwardVector) -- have torso face forwards
	if newPush.magnitude &lt; 1 then
		flightHold.maxForce = Vector3.new(flightHold.P, flightHold.P, flightHold.P)
		flightPower.maxForce = Vector3.new(0, 0, 0)
		if myTorso then flightHold.position = myTorso.Position end
	else
		flightHold.maxForce = Vector3.new(0, 0, 0)
		flightPower.maxForce = Vector3.new(flightPower.P*100, flightPower.P*100, flightPower.P*100)
	end
		flightPower.velocity = newPush
end

function handleMovement()	
	wingActive = Tool:FindFirstChild(&quot;WingActive&quot;)
	if wingActive then
		while wingActive.Value == 1 do
			handleMovementFrame()
			wait()
		end
	end
end

function keyUpFunc(key)	
	if key == nil then return end
	local key = key:lower()
	if key == &quot;w&quot; then
		forwards = false
	elseif key == &quot;a&quot; then
		left = false
	elseif key == &quot;s&quot; then
		back = false
	elseif key == &quot;d&quot; then
		right = false
	end	
end

function keyDownFunc(key)	
	if key == nil then return end
	local key = key:lower()
	if key == &quot;w&quot; then
		forwards = true
	elseif key == &quot;a&quot; then
		left = true
	elseif key == &quot;s&quot; then
		back = true
	elseif key == &quot;d&quot; then
		right = true
	end	
end

function wingActivate()	
	wingActive = Tool:FindFirstChild(&quot;WingActive&quot;)
	if wingActive then
		if wingActive.Value == 0 then return end
	end
	local vCharacter = Tool.Parent
	myTorso = vCharacter:FindFirstChild(&quot;Torso&quot;)
	if myTorso == nil then return end
	
	flightPower = vCharacter.Torso:FindFirstChild(&quot;FlightPower&quot;)
	flightSpin = vCharacter.Torso:FindFirstChild(&quot;FlightSpin&quot;)
	flightHold = vCharacter.Torso:FindFirstChild(&quot;FlightHold&quot;)

	while flightPower == nil or flightSpin == nil or flightHold == nil do
		Tool.Parent.Torso.ChildAdded:wait()
		flightPower = Tool.Parent.Torso:FindFirstChild(&quot;FlightPower&quot;)
		flightSpin = Tool.Parent.Torso:FindFirstChild(&quot;FlightSpin&quot;)
		flightHold = Tool.Parent.Torso:FindFirstChild(&quot;FlightHold&quot;)
	end		
	movementHandlerCo = coroutine.create(handleMovement)	
	coroutine.resume(movementHandlerCo)	
end

function onEquipped(mouse)		
	if mouse then		
		forwards = false
		back = false
		left = false
		right = false				
		mouse.KeyDown:connect(keyDownFunc)
		mouse.KeyUp:connect(keyUpFunc)				
	end
	wingActive = Tool:FindFirstChild(&quot;WingActive&quot;)
	if wingActive then wingActive.Changed:connect(wingActivate) end
end

Tool.Equipped:connect(onEquipped)

</ProtectedString>
			</Properties>
		</Item>
		<Item class="NumberValue" referent="RBX5">
			<Properties>
				<bool name="Archivable">true</bool>
				<string name="Name">WingActive</string>
				<double name="Value">0</double>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX6">
			<Properties>
				<bool name="Archivable">true</bool>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Local Gui</string>
				<ProtectedString name="Source">Tool = script.Parent

local stillEquipped = false

function onEquippedLocal(mouse)
	stillEquipped = true
	if mouse == nil then 
		print(&quot;Mouse not found&quot;)
		return
	end
	while stillEquipped do 
		print(&quot;Setting Mouse to go&quot;)
		mouse.Icon = &quot;rbxasset://textures\\GunCursor.png&quot;
		while Tool.Enabled and stillEquipped do 
			wait(0.01)
		end
		print(&quot;Setting Mouse to wait&quot;)
		mouse.Icon = &quot;rbxasset://textures\\GunWaitCursor.png&quot;
		while not Tool.Enabled and stillEquipped do 
			wait(0.01)
		end	
	end
end


function onUnequippedLocal()
	stillEquipped = false
end

Tool.Equipped:connect(onEquippedLocal)
Tool.Unequipped:connect(onUnequippedLocal)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX7">
			<Properties>
				<bool name="Archivable">true</bool>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>1.45564044</X>
					<Y>18.6299534</Y>
					<Z>-1.82765198</Z>
					<R00>-0.999610126</R00>
					<R01>0.0273997635</R01>
					<R02>-0.00537562417</R02>
					<R10>-0</R10>
					<R11>0.192522109</R11>
					<R12>0.981292605</R12>
					<R20>0.0279221144</R20>
					<R21>0.980910003</R21>
					<R22>-0.192447037</R22>
				</CoordinateFrame>
				<CoordinateFrame name="Focus">
					<X>1.56315291</X>
					<Y>-0.995897293</Y>
					<Z>2.02128839</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>