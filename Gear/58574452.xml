<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="Archivable">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0.5</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>0</R00>
				<R01>-1</R01>
				<R02>0</R02>
				<R10>1</R10>
				<R11>0</R11>
				<R12>-0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">Trout</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=56844112</url></Content>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<bool name="Archivable">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-14.6819201</X>
					<Y>1.34149134</Y>
					<Z>-6.58707047</Z>
					<R00>1</R00>
					<R01>-3.30895208e-017</R01>
					<R02>3.38038669e-018</R02>
					<R10>3.30895208e-017</R10>
					<R11>1</R11>
					<R12>-4.96803564e-016</R12>
					<R20>-3.38038669e-018</R20>
					<R21>4.96803564e-016</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">3</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>3.44999957</X>
					<Y>0.300000012</Y>
					<Z>0.660000265</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<bool name="Archivable">true</bool>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=56844224</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.5</X>
						<Y>0.5</Y>
						<Z>0.5</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=56844178</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="BoolValue" referent="RBX3">
				<Properties>
					<bool name="Archivable">true</bool>
					<string name="Name">RecentlyHit</string>
					<bool name="Value">false</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX4">
			<Properties>
				<bool name="Archivable">true</bool>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Trout LS</string>
				<ProtectedString name="Source">-- Yay, fishing by hand! Contest aspect is heavily based on / cribbed from the Hot Dog&apos;s.
function waitForChild(parent, childName)
	while not parent:FindFirstChild(childName) do
		parent.ChildAdded:wait()
	end
	return parent[childName]
end

local Tool = script.Parent

local Mouse

local Opponent

local TankPointer
local Tank

local myCharacter
local myPlayer
local PlayerGui
local FishingGui

local TargetedPart
local otherCharacter
local otherPlayer

local FishingContestGui = waitForChild(Tool, &quot;FishingContestGui&quot;)
local OpponentDiedGui = waitForChild(FishingContestGui, &quot;OpponentDiedGui&quot;)
local Opponent = waitForChild(OpponentDiedGui, &quot;Opponent&quot;)

function onActivated()
	if not Mouse then return end
	TargetedPart = Mouse.Target
	if TargetedPart and TargetedPart.Parent:FindFirstChild(&quot;Humanoid&quot;) then
		otherCharacter = TargetedPart.Parent
		otherPlayer = game.Players:GetPlayerFromCharacter(otherCharacter)
		if otherPlayer then
			Opponent.Value = otherPlayer
		end
	end
end


function onEquipped(mouse)
	if mouse then Mouse = mouse end
end

function onUnequipped()
	if Tank then Tank.Parent = nil end
end

Tool.Activated:connect(onActivated)
Tool.Equipped:connect(onEquipped)
Tool.Unequipped:connect(onUnequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX5">
			<Properties>
				<bool name="Archivable">true</bool>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">FishingContestScript</string>
				<ProtectedString name="Source">math.randomseed(tick()); math.random()

function waitForChild(parent, childName)
	while not parent:FindFirstChild(childName) do
		parent.ChildAdded:wait()
	end
	return parent[childName]
end

local Tool = script.Parent
local Handle = Tool.Handle
local Tank = game:GetService(&quot;InsertService&quot;):LoadAsset(56936657)
local SplashSound
if Tank then
	Tank = Tank:GetChildren()[1]
	waitForChild(Tool, &quot;TankRemoveScript&quot;):Clone().Parent = Tank
	local GeneratingPlayer = Instance.new(&quot;ObjectValue&quot;)
	GeneratingPlayer.Name = &quot;GeneratingPlayer&quot;
	GeneratingPlayer.Parent = Tank
	local OtherPlayer = Instance.new(&quot;ObjectValue&quot;)
	OtherPlayer.Name = &quot;OtherPlayer&quot;
	OtherPlayer.Parent = Tank
	local locSplashSound = Instance.new(&quot;Sound&quot;)
	locSplashSound.Name = &quot;SplashSound&quot;
	locSplashSound.SoundId = &quot;http://www.roblox.com/asset/?id=58274204&quot;
	locSplashSound.Parent = Tank
end
local TankClone

local toolContestGui = waitForChild(Tool, &quot;FishingContestGui&quot;)
local toolOpponentDiedGui = waitForChild(toolContestGui, &quot;OpponentDiedGui&quot;)
local toolOpponent = waitForChild(toolOpponentDiedGui, &quot;Opponent&quot;)

local ContestGui = toolContestGui:Clone()
local IntroFrame = waitForChild(ContestGui, &quot;IntroFrame&quot;)
local IntroText = waitForChild(IntroFrame, &quot;IntroText&quot;)
local MessageFrame = waitForChild(ContestGui, &quot;MessageFrame&quot;)
local OKButton = waitForChild(MessageFrame, &quot;OKButton&quot;)
local MessageText = waitForChild(MessageFrame, &quot;MessageText&quot;)
local AnnounceFrame = waitForChild(ContestGui, &quot;AnnounceFrame&quot;)
local AnnounceText = waitForChild(AnnounceFrame, &quot;AnnounceText&quot;)
local ContestFrame = waitForChild(ContestGui, &quot;ContestFrame&quot;)
local YourName = waitForChild(ContestFrame, &quot;YourName&quot;)
local YourScore = waitForChild(ContestFrame, &quot;YourScore&quot;)
local OtherName = waitForChild(ContestFrame, &quot;OtherName&quot;)
local OtherScore = waitForChild(ContestFrame, &quot;OtherScore&quot;)
local TroutPic = waitForChild(ContestFrame, &quot;TroutPic&quot;)
local Timer = waitForChild(ContestFrame, &quot;Timer&quot;)
local SecondsLeft = waitForChild(ContestFrame, &quot;SecondsLeft&quot;)
local OpponentDiedGui = waitForChild(ContestGui, &quot;OpponentDiedGui&quot;)
local OnOpponentDied = waitForChild(OpponentDiedGui, &quot;OnOpponentDied&quot;)
local DingSound = waitForChild(ContestGui, &quot;DingSound&quot;)
local BuzzSound = waitForChild(ContestGui, &quot;BuzzSound&quot;)

local NewContestGui
local otherAskingFrame
local otherAnnounceFrame
local otherAnnounceText
local otherMessageFrame
local otherOKButton
local otherMessageText
local otherContestFrame
local otherMessageFrame
local otherMessageText
local otherOpponentDiedGui
local otherOpponent
local otherOnOpponentDied
local otherDingSound
local otherBuzzSound

local Opponent = waitForChild(OpponentDiedGui, &quot;Opponent&quot;)
local otherPlayer
local otherPlayerName
local otherPlayerGui
local otherCharacter
local otherHumanoid
local otherTorso

local myCharacter
local myPlayer
local myPlayerName
local myPlayerGui

local Trout
local AntiGrav = Instance.new(&quot;BodyForce&quot;)
AntiGrav.force = Vector3.new(0, 196.2 * Handle:GetMass(), 0)
AntiGrav.Name = &quot;AntiGrav&quot;
local randTheta
local velX
local velY
local myTroutNumber = 0
local otherTroutNumber = 0
local recentlyHit = false

local signs = {1, -1}

local guiCo
local timerCo

local debris = game:GetService(&quot;Debris&quot;)

local currentlyPlaying = false
local askingOpponent = false
local otherPlayerInWater = false
local myPlayerInWater = false


function totalReset(thingRemoved)
	if thingRemoved == ContestGui then
		local CloneScript = script:Clone()
		CloneScript.Parent = Tool
		script:Remove()
	end
end

function clearContestFrame()
	local contestFrameChildren = ContestFrame:GetChildren()
	for i = 1, #contestFrameChildren do
		if contestFrameChildren[i].Name == &quot;TroutPic&quot; and contestFrameChildren[i].Visible then
			contestFrameChildren[i]:Remove()
		end
	end
	YourName.Text = &quot;You:&quot;
	OtherName.Text = &quot;Other Player:&quot;
	YourScore.Text = &quot;0&quot;
	OtherScore.Text = &quot;0&quot;
	SecondsLeft.Text = &quot;               seconds left!&quot;
	Timer.Text = &quot;30&quot;
	Timer.TextColor3 = Color3.new(0, 1, 0)
	SecondsLeft.Visible = false
	Timer.Visible = false
end

function reset()
	IntroText.Text = &quot;Click a character to challenge him/her to bare-handed fishin&apos;!&quot;
	MessageFrame.Visible = false
	clearContestFrame()
	ContestFrame.Visible = false
	IntroFrame.Visible = true
	askingOpponent = false
	currentlyPlaying = false
	toolOpponent.Value = nil
	if Opponent then Opponent.Value = nil end
	otherPlayerInWater = false
	myPlayerInWater = false
	myTroutNumber = 0
	otherTroutNumber = 0
end

function onMyCharRemoved()
	Handle.Transparency = 0.0
	reset()
	ContestGui.Parent = nil
	if TankClone then TankClone:Remove() end
	if NewContestGui then
		otherMessageFrame = NewContestGui:FindFirstChild(&quot;MessageFrame&quot;)
		if otherMessageFrame then
			otherOKButton = otherMessageFrame:FindFirstChild(&quot;OKButton&quot;)
			otherMessageText = otherMessageFrame:FindFirstChild(&quot;MessageText&quot;)
			if otherOKButton and otherMessageText then
				otherMessageText.Text = myPlayerName .. &quot; died. So you win by default!&quot;
				otherOKButton.Text = &quot;Hooray!&quot;
				otherOKButton.MouseButton1Click:connect(function() NewContestGui:Remove() end)
				otherAskingFrame.Visible = false
				if otherAnnounceFrame then otherAnnounceFrame.Visible = false end
				if otherContestFrame then otherContestFrame.Visible = false end
				otherMessageFrame.Visible = true
			else
				NewContestGui:Remove()
			end
		else
			NewContestGui:Remove()
		end
	end
end

function onEquipped()
	if currentlyPlaying then return end
	reset()
	myCharacter = Tool.Parent
	if myCharacter then
		myPlayer = game.Players:GetPlayerFromCharacter(myCharacter)
		if myPlayer then
			myPlayerName = myPlayer.Name
			myPlayerGui = waitForChild(myPlayer, &quot;PlayerGui&quot;)
			ContestGui.Parent = myPlayerGui
			myPlayerGui.ChildRemoved:connect(totalReset)
		end
	end
end

function onUnequipped()
	if Tool.Parent == nil or Tool.Parent == game.Workspace or not currentlyPlaying then
		Handle.Transparency = 0.0
		reset()
		ContestGui.Parent = nil
		if TankClone then TankClone:Remove() end
		if NewContestGui then
			otherMessageFrame = NewContestGui:FindFirstChild(&quot;MessageFrame&quot;)
			if otherMessageFrame then
				otherOKButton = otherMessageFrame:FindFirstChild(&quot;OKButton&quot;)
				otherMessageText = otherMessageFrame:FindFirstChild(&quot;MessageText&quot;)
				if otherOKButton and otherMessageText then
					if currentlyPlaying then
						otherMessageText.Text = myPlayerName .. &quot; can&apos;t challenge you any more. So you win by default!&quot;
						otherOKButton.Text = &quot;Hooray!&quot;
						otherOKButton.MouseButton1Click:connect(function() NewContestGui:Remove() end)
						otherAskingFrame.Visible = false
						if otherAnnounceFrame then otherAnnounceFrame.Visible = false end
						if otherContestFrame then otherContestFrame.Visible = false end
						otherMessageFrame.Visible = true
					else
						NewContestGui:Remove()
					end
				else
					NewContestGui:Remove()
				end
			else
				NewContestGui:Remove()
			end
		end
	end
end

function troutTouched(hit)
	if not myCharacter and otherCharacter then
		Trout:Remove()
		return
	end
	if not recentlyHit then
		if (hit.Parent == myCharacter) then
			recentlyHit = true
			myTroutNumber = myTroutNumber + 1
			YourScore.Text = &quot;&quot; .. myTroutNumber
			otherContestFrame.OtherScore.Text = &quot;&quot; .. myTroutNumber
			local myNewTroutPic = TroutPic:Clone()
			myNewTroutPic.Position = UDim2.new(0, -5 + 15 * myTroutNumber, 0.5, -70)
			myNewTroutPic.Visible = true
			myNewTroutPic.Parent = ContestFrame
			local otherNewTroutPic = TroutPic:Clone()
			otherNewTroutPic.Position = UDim2.new(0, -5 + 15 * myTroutNumber, 0.5, 50)
			otherNewTroutPic.Visible = true
			otherNewTroutPic.Parent = otherContestFrame
			DingSound:Play()
			otherBuzzSound:Play()
			if Trout then Trout:Remove() end
			wait(1)
			spawnTrout()
		elseif (hit.Parent == otherCharacter) then
			recentlyHit = true
			otherTroutNumber = otherTroutNumber + 1
			OtherScore.Text = &quot;&quot; .. otherTroutNumber
			otherContestFrame.YourScore.Text = &quot;&quot; .. otherTroutNumber
			local myNewTroutPic = TroutPic:Clone()
			myNewTroutPic.Position = UDim2.new(0, -5 + 15 * otherTroutNumber, 0.5, 50)
			myNewTroutPic.Visible = true
			myNewTroutPic.Parent = ContestFrame
			local otherNewTroutPic = TroutPic:Clone()
			otherNewTroutPic.Position = UDim2.new(0, -5 + 15 * otherTroutNumber, 0.5, -70)
			otherNewTroutPic.Visible = true
			otherNewTroutPic.Parent = otherContestFrame
			BuzzSound:Play()
			otherDingSound:Play()
			if Trout then Trout:Remove() end
			wait(1)
			spawnTrout()
		else	-- It hit something that isn&apos;t a character...
			randTheta = math.pi * (math.random() - 0.5)
		end
	end
end

function moveTrout()
	for i = 1, 90 do
		if not Trout then break end
		newPosition = Trout.Position + Vector3.new(0, WaterPos.Y - Trout.Position.Y, 0)
		velX = Trout.Velocity.X
		velZ = Trout.Velocity.Z
		newVelocity = Vector3.new(math.cos(randTheta/150) * velX - math.sin(randTheta/150) * velZ, 0, math.sin(randTheta/50) * velX + math.cos(randTheta/150) * velZ)
		newVelocity = 10 * newVelocity.unit
		Trout.CFrame = CFrame.new(newPosition, newPosition + newVelocity) * CFrame.Angles(-math.pi/2, 0, -math.pi/2)
		Trout.Velocity = newVelocity
		wait()
	end
end

function spawnTrout()
	if not currentlyPlaying then return end
	if not TankClone then return end
	Handle.Transparency = 1.0
	recentlyHit = false
	Trout = Handle:Clone()
	Trout.Transparency = 0.0
	Trout.CanCollide = true
	Trout.Name = &quot;Trout&quot;
	Trout.Parent = TankClone
	AntiGrav.Parent = Trout
	WaterPos = TankClone.Water.Position
	Trout.CFrame = CFrame.new(WaterPos + 7 * Vector3.new(signs[math.random(2)], 0, signs[math.random(2)]))
	Trout.Velocity = 10 * Vector3.new(math.random(), 0, math.random())
	Trout.CFrame = CFrame.new(Trout.Position, Trout.Position + Trout.Velocity) * CFrame.Angles(-math.pi/2, 0, -math.pi/2)
	Trout.Touched:connect(troutTouched)
	while Trout do
		if ((Trout.Position - WaterPos).magnitude &gt; 20) then	-- If Trout&apos;s escaped the pool, then force it back in.
			Trout.CFrame = CFrame.new(WaterPos + 7 * Vector3.new(signs[math.random(2)], 0, signs[math.random(2)]))
			Trout.Velocity = 10 * Vector3.new(math.random(), 0, math.random())
			Trout.CFrame = CFrame.new(Trout.Position, Trout.Position + Trout.Velocity) * CFrame.Angles(-math.pi/2, 0, -math.pi/2)
		end
		randTheta = math.pi * (math.random() - 0.5)
		moveTrout()
	end
end

function endContest()
	currentlyPlaying = false
	otherPlayerInWater = false
	myPlayerInWater = false
	if TankClone then TankClone:Remove() end
	if Trout then Trout:Remove() end
	Handle.Transparency = 0.0
	clearContestFrame()
	ContestFrame.Visible = false
	otherContestFrame.Visible = false
	otherMessageFrame = NewContestGui.MessageFrame
	otherMessageText = otherMessageFrame.MessageText
	otherOKButton = otherMessageFrame.OKButton
	local deltaTrout = myTroutNumber - otherTroutNumber

	local CheerSound = Tool:FindFirstChild(&quot;CheerSound&quot;)
	if CheerSound then CheerSound = CheerSound:Clone() end
	local AwwSound = Tool:FindFirstChild(&quot;AwwSound&quot;)
	if AwwSound then AwwSound = AwwSound:Clone() end

	if (deltaTrout &gt; 0) then
		MessageText.Text = &quot;Congrats! You beat &quot; .. otherPlayerName .. &quot; by &quot; .. deltaTrout .. &quot; trout!&quot;
		otherMessageText.Text = &quot;Aw, man. &quot; .. myPlayerName .. &quot; beat you by &quot; .. deltaTrout .. &quot; trout.&quot;
		CheerSound.Parent = myPlayer
		AwwSound.Parent = otherPlayer
		OKButton.Text = &quot;Awesome!&quot;
		otherOKButton.Text = &quot;OK... :(&quot;
	elseif (deltaTrout &lt; 0 ) then
		otherMessageText.Text = &quot;Congrats! You beat &quot; .. myPlayerName .. &quot; by &quot; .. -deltaTrout .. &quot; trout!&quot;
		MessageText.Text = &quot;Aw, man. &quot; .. otherPlayerName .. &quot; beat you by &quot; .. -deltaTrout .. &quot; trout.&quot;
		CheerSound.Parent = otherPlayer
		AwwSound.Parent = myPlayer
		OKButton.Text = &quot;OK... :(&quot;
		otherOKButton.Text = &quot;Awesome!&quot;
	else	-- deltaTrout == 0
		MessageText.Text = &quot;It&apos;s a tie! You both caught &quot; .. myTroutNumber .. &quot; trout.&quot;
		otherMessageText.Text = MessageText.Text
		OKButton.Text = &quot;Huh. OK.&quot;
		otherOKButton.Text = &quot;Huh. OK.&quot;
	end

	if CheerSound then 
		debris:AddItem(CheerSound, 5)
		CheerSound:Play() 
	end
	if AwwSound then 
		debris:AddItem(AwwSound, 5)
		AwwSound:Play() 
	end

	OKButton.MouseButton1Click:connect(reset)
	otherOKButton.MouseButton1Click:connect(function() NewContestGui:Remove() end)
	MessageFrame.Visible = true
	otherMessageFrame.Visible = true
end

function timeContest()
	otherTimer = otherContestFrame.Timer
	otherSecondsLeft = otherContestFrame.SecondsLeft
	Timer.Visible = true
	SecondsLeft.Visible = true
	otherTimer.Visible = true
	otherSecondsLeft.Visible = true
	for i = 1, 30 do
		wait(1)
		local newText = &quot;&quot; .. 30 - i
		Timer.Text = newText
		otherTimer.Text = newText
		local newColor = Color3.new(i/30, (30 - i) / 30, 0)
		Timer.TextColor3 = newColor
		otherTimer.TextColor3 = newColor
		if i == 29 then
			SecondsLeft.Text = &quot;               second left!&quot;
			otherSecondsLeft.Text = &quot;               second left!&quot;
		end
	end
	endContest()
end

function runContest()
	YourName.Text = myPlayerName .. &quot;:&quot;
	OtherName.Text = otherPlayerName .. &quot;:&quot;
	otherContestFrame = NewContestGui.ContestFrame
	otherContestFrame.YourName.Text = otherPlayerName .. &quot;:&quot;
	otherContestFrame.OtherName.Text = myPlayerName .. &quot;:&quot;
	ContestFrame.Visible = true
	otherContestFrame.Visible = true
	AnnounceText.Text = &quot;Ready!&quot;
	otherAnnounceText.Text = &quot;Ready!&quot;
	AnnounceFrame.Visible = true
	otherAnnounceFrame.Visible = true
	wait(1)
	AnnounceText.Text = &quot;Set!&quot;
	otherAnnounceText.Text = &quot;Set!&quot;
	wait(1)
	AnnounceText.FontSize = Enum.FontSize.Size18
	otherAnnounceText.FontSize = Enum.FontSize.Size18
	AnnounceText.Text = &quot;GO!&quot;
	otherAnnounceText.Text = &quot;GO!&quot;
	guiCo = coroutine.create(function() wait(1); AnnounceFrame.Visible = false; otherAnnounceFrame.Visible = false end)
	coroutine.resume(guiCo)
	timerCo = coroutine.create(timeContest)
	coroutine.resume(timerCo)
	spawnTrout()
end

function waterTouch(hit)
	local hitThing = hit.Parent
	if not hitThing then return end
	if hitThing:FindFirstChild(&quot;Humanoid&quot;) then
		if hitThing == myCharacter then
			if not myPlayerInWater then
				AnnounceFrame.Visible = false
				myPlayerInWater = true
				if SplashSound then SplashSound:Play() end
			end
		elseif hitThing == otherCharacter then
			if not otherPlayerInWater then
				otherAnnounceFrame.Visible = false
				otherPlayerInWater = true
				if SplashSound then SplashSound:Play() end
			end
		else	-- Someone else touched the water -- move them out!
			local lookVector
			if hitThing:FindFirstChild(&quot;Torso&quot;) then
				lookVector = hitThing.Torso.CFrame.lookVector
			else
				lookVector = Vector3.new(1, 0, 0)
			end
			hitThing:MoveTo(TankClone.Water.Position - 20 * lookVector)
			local UnwantedGui = waitForChild(Tool, &quot;UnwantedTroutFisherGui&quot;):Clone()
			local hitPlayer = game.Players:GetPlayerFromCharacter(hitThing)
			if hitPlayer then
				local ExistingGui = hitPlayer.PlayerGui:FindFirstChild(&quot;UnwantedTroutFisherGui&quot;)
				if ExistingGui then ExistingGui:Remove() end
				UnwantedGui.Parent = hitPlayer.PlayerGui
				waitForChild(UnwantedGui, &quot;UnwantedGuiRunner&quot;).Disabled = false
			end
		end
	end
end

function beginContest()
	askingOpponent = false
	currentlyPlaying = true
	otherAskingFrame.Visible = false
	otherCharacter = otherPlayer.Character
	otherTorso = otherCharacter:FindFirstChild(&quot;Torso&quot;)
	if not otherTorso then
		reset()
	else
		TankClone = Tank:Clone()
		TankClone.Name = &quot;Trout Fishing Tank&quot;
		TankClone.Parent = game.Workspace
		TankClone:MoveTo(otherTorso.Position + 20 * otherTorso.CFrame.lookVector + Vector3.new(0, -2.9, 0))
		TankClone.PrimaryPart.Anchored = true
		waitForChild(TankClone, &quot;GeneratingPlayer&quot;).Value = myPlayer
		waitForChild(TankClone, &quot;OtherPlayer&quot;).Value = otherPlayer
		waitForChild(TankClone, &quot;TankRemoveScript&quot;).Disabled = false
		otherDingSound = waitForChild(NewContestGui, &quot;DingSound&quot;)
		otherBuzzSound = waitForChild(NewContestGui, &quot;BuzzSound&quot;)
		SplashSound = waitForChild(TankClone, &quot;SplashSound&quot;)
		IntroFrame.Visible = false
		AnnounceText.FontSize = Enum.FontSize.Size12
		AnnounceText.Text = &quot;Get in the water!&quot;
		AnnounceFrame.Visible = true
		otherAnnounceFrame = NewContestGui.AnnounceFrame
		otherAnnounceText = otherAnnounceFrame.AnnounceText
		otherAnnounceText.FontSize = Enum.FontSize.Size12
		otherAnnounceText.Text = &quot;Get in the water!&quot;
		otherAnnounceFrame.Visible = true
		TankClone.Water.Touched:connect(waterTouch)
		local count = 0
		while myCharacter and otherCharacter and not (otherPlayerInWater and myPlayerInWater) and count &lt; 300 do
			wait()
			count = count + 1
		end
		if count == 300 then
			otherMessageFrame = NewContestGui.MessageFrame
			otherMessageText = otherMessageFrame.MessageText
			otherOKButton = otherMessageFrame.OKButton
			AnnounceFrame.Visible = false
			otherAnnounceFrame.Visible = false
			MessageText.Text = &quot;Water unavailable/unreached; game canceled.&quot;
			otherMessageText.Text = &quot;Water unavailable/unreached; game canceled.&quot;
			OKButton.Text = &quot;OK&quot;
			otherOKButton.Text = &quot;OK&quot;
			MessageFrame.Visible = true
			otherMessageFrame.Visible = true
			OKButton.MouseButton1Click:connect(reset)
			otherOKButton.MouseButton1Click:connect(function() NewContestGui:Remove() end)
			TankClone:Remove()
		else
			runContest()
		end
	end
	currentlyPlaying = false
end

function displayMessage()
	OKButton.MouseButton1Click:connect(reset)
	IntroFrame.Visible = false
	MessageFrame.Visible = true
end

function contestDeclined()
	askingOpponent = false
	NewContestGui:Remove()
	MessageText.Text = otherPlayerName .. &quot; is scared of your fishin&apos; prowess, and didn&apos;t accept your challenge.&quot;
	OKButton.Text = &quot;OK. Their loss.&quot;
	toolOpponent.Value = nil
	if Opponent then Opponent.Value = nil end
	displayMessage()
end

function newOpponent()
	if toolOpponent.Value == nil then return end
	if askingOpponent or currentlyPlaying then return end
	
	if NewContestGui then NewContestGui:Remove() end

	otherPlayer = toolOpponent.Value
	otherPlayerGui = otherPlayer.PlayerGui
	otherPlayerName = otherPlayer.Name
	otherCharacter = otherPlayer.Character
	otherHumanoid = otherCharacter:FindFirstChild(&quot;Humanoid&quot;)
	if not otherHumanoid then
		reset()
	end

	-- Skip it, and report the problem, if the opponent is already playing something else.
	if otherPlayerGui:FindFirstChild(&quot;BattleshipGui&quot;) or otherPlayerGui:FindFirstChild(&quot;ContestGui&quot;) or otherPlayerGui:FindFirstChild(&quot;FishingContestGui&quot;) then
		MessageText.Text = otherPlayerName .. &quot; is already in a game; you&apos;ll have to wait a bit before you can show &apos;em what for.&quot;
		OKButton.Text = &quot;Aw, shucks.&quot;
		displayMessage()
	else
		askingOpponent = true
		IntroText.Text = &quot;Asking &quot; .. otherPlayerName .. &quot; about the contest...&quot;
		NewContestGui = ContestGui:Clone()
		otherOpponentDiedGui = waitForChild(NewContestGui, &quot;OpponentDiedGui&quot;)
		otherOpponent = waitForChild(otherOpponentDiedGui, &quot;Opponent&quot;)
		if myPlayer then
			Opponent.Value = toolOpponent.Value
			otherOpponent.Value = myPlayer
			local NewOnOpponentDied = OnOpponentDied:Clone()
			NewOnOpponentDied.Parent = OpponentDiedGui
			NewOnOpponentDied.Disabled = false
			NewContestGui.Parent = otherPlayerGui
			waitForChild(otherOpponentDiedGui, &quot;OnOpponentDied&quot;).Disabled = false
			otherAskingFrame = NewContestGui.AskingFrame
			NewContestGui.IntroFrame.Visible = false
			otherAskingFrame.Visible = true
			otherAskingFrame.QuestionText.Text = myPlayerName .. &quot; challenges you to some bare-handed fishin&apos;! Do you accept the challenge?&quot;
			otherAskingFrame.AcceptButton.MouseButton1Click:connect(beginContest)
			otherAskingFrame.DeclineButton.MouseButton1Click:connect(contestDeclined)
		end	
	end	
end

Tool.Equipped:connect(onEquipped)
Tool.Unequipped:connect(onUnequipped)

toolOpponent.Changed:connect(newOpponent)

-- The following is in case this script is a clone of an earlier one, which was removed
--  when our opponent died.
if Tool.Parent ~= game.Workspace then
	Handle.Transparency = 0.0
	onEquipped()
end</ProtectedString>
			</Properties>
		</Item>
		<Item class="ScreenGui" referent="RBX6">
			<Properties>
				<bool name="Archivable">true</bool>
				<string name="Name">FishingContestGui</string>
			</Properties>
			<Item class="Frame" referent="RBX7">
				<Properties>
					<bool name="Active">false</bool>
					<bool name="Archivable">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">1</int>
					<bool name="Draggable">false</bool>
					<string name="Name">IntroFrame</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">false</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="TextLabel" referent="RBX8">
					<Properties>
						<bool name="Active">false</bool>
						<bool name="Archivable">true</bool>
						<Color3 name="BackgroundColor3">4278242559</Color3>
						<float name="BackgroundTransparency">0.5</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">4</token>
						<string name="Name">IntroText</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>1</YS>
							<YO>-300</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>200</XO>
							<YS>0</YS>
							<YO>70</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Click a character to challenge him/her to bare-handed fishin&apos;!</string>
						<Color3 name="TextColor3">4278190080</Color3>
						<float name="TextTransparency">0</float>
						<bool name="TextWrap">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX9">
				<Properties>
					<bool name="Active">false</bool>
					<bool name="Archivable">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">1</int>
					<bool name="Draggable">false</bool>
					<string name="Name">AskingFrame</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">false</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="TextLabel" referent="RBX10">
					<Properties>
						<bool name="Active">false</bool>
						<bool name="Archivable">true</bool>
						<Color3 name="BackgroundColor3">4278242559</Color3>
						<float name="BackgroundTransparency">0.5</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">4</token>
						<string name="Name">QuestionText</string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-150</XO>
							<YS>0.5</YS>
							<YO>-90</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>300</XO>
							<YS>0</YS>
							<YO>75</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">challenges you to some bare-handed fishin&apos;! Do you accept the challenge?</string>
						<Color3 name="TextColor3">4278190080</Color3>
						<float name="TextTransparency">0</float>
						<bool name="TextWrap">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="TextButton" referent="RBX11">
					<Properties>
						<bool name="Active">true</bool>
						<bool name="Archivable">true</bool>
						<bool name="AutoButtonColor">true</bool>
						<Color3 name="BackgroundColor3">4278242559</Color3>
						<float name="BackgroundTransparency">0.5</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">3</token>
						<string name="Name">AcceptButton</string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>40</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="Selected">false</bool>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>110</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<string name="Text">Of course! Wriggling things rule!</string>
						<Color3 name="TextColor3">4278190080</Color3>
						<float name="TextTransparency">0</float>
						<bool name="TextWrap">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="TextButton" referent="RBX12">
					<Properties>
						<bool name="Active">true</bool>
						<bool name="Archivable">true</bool>
						<bool name="AutoButtonColor">true</bool>
						<Color3 name="BackgroundColor3">4278242559</Color3>
						<float name="BackgroundTransparency">0.5</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">3</token>
						<string name="Name">DeclineButton</string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-150</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="Selected">false</bool>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>110</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<string name="Text">No thanks. Sliminess saddens me.</string>
						<Color3 name="TextColor3">4278190080</Color3>
						<float name="TextTransparency">0</float>
						<bool name="TextWrap">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX13">
				<Properties>
					<bool name="Active">false</bool>
					<bool name="Archivable">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">1</int>
					<bool name="Draggable">false</bool>
					<string name="Name">MessageFrame</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">false</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="TextLabel" referent="RBX14">
					<Properties>
						<bool name="Active">false</bool>
						<bool name="Archivable">true</bool>
						<Color3 name="BackgroundColor3">4278242559</Color3>
						<float name="BackgroundTransparency">0.5</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">4</token>
						<string name="Name">MessageText</string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-150</XO>
							<YS>0.5</YS>
							<YO>-90</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>300</XO>
							<YS>0</YS>
							<YO>75</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">is scared of your fishin&apos; prowess, and didn&apos;t acceept your challenge.</string>
						<Color3 name="TextColor3">4278190080</Color3>
						<float name="TextTransparency">0</float>
						<bool name="TextWrap">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="TextButton" referent="RBX15">
					<Properties>
						<bool name="Active">true</bool>
						<bool name="Archivable">true</bool>
						<bool name="AutoButtonColor">true</bool>
						<Color3 name="BackgroundColor3">4278242559</Color3>
						<float name="BackgroundTransparency">0.5</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">3</token>
						<string name="Name">OKButton</string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-150</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="Selected">false</bool>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>300</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<string name="Text">OK. Their loss.</string>
						<Color3 name="TextColor3">4278190080</Color3>
						<float name="TextTransparency">0</float>
						<bool name="TextWrap">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX16">
				<Properties>
					<bool name="Active">false</bool>
					<bool name="Archivable">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">1</int>
					<bool name="Draggable">false</bool>
					<string name="Name">AnnounceFrame</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">false</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="TextLabel" referent="RBX17">
					<Properties>
						<bool name="Active">false</bool>
						<bool name="Archivable">true</bool>
						<Color3 name="BackgroundColor3">4278242559</Color3>
						<float name="BackgroundTransparency">0.5</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">4</token>
						<string name="Name">AnnounceText</string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-150</XO>
							<YS>0.5</YS>
							<YO>-90</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>300</XO>
							<YS>0</YS>
							<YO>75</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Get in the water!</string>
						<Color3 name="TextColor3">4278190080</Color3>
						<float name="TextTransparency">0</float>
						<bool name="TextWrap">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX18">
				<Properties>
					<bool name="Active">false</bool>
					<bool name="Archivable">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">1</int>
					<bool name="Draggable">false</bool>
					<string name="Name">ContestFrame</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">false</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="TextLabel" referent="RBX19">
					<Properties>
						<bool name="Active">false</bool>
						<bool name="Archivable">true</bool>
						<Color3 name="BackgroundColor3">4278242559</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">5</token>
						<string name="Name">YourName</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0.5</YS>
							<YO>-100</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>100</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">You:</string>
						<Color3 name="TextColor3">4278190080</Color3>
						<float name="TextTransparency">0</float>
						<bool name="TextWrap">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBX20">
					<Properties>
						<bool name="Active">false</bool>
						<bool name="Archivable">true</bool>
						<Color3 name="BackgroundColor3">4278242559</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">5</token>
						<string name="Name">OtherName</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0.5</YS>
							<YO>20</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>100</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Other Player:</string>
						<Color3 name="TextColor3">4278190080</Color3>
						<float name="TextTransparency">0</float>
						<bool name="TextWrap">false</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBX21">
					<Properties>
						<bool name="Active">false</bool>
						<bool name="Archivable">true</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">9</token>
						<string name="Name">YourScore</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0.5</YS>
							<YO>-70</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>70</XO>
							<YS>0</YS>
							<YO>70</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">0</string>
						<Color3 name="TextColor3">4294901760</Color3>
						<float name="TextTransparency">0.400000006</float>
						<bool name="TextWrap">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBX22">
					<Properties>
						<bool name="Active">false</bool>
						<bool name="Archivable">true</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">9</token>
						<string name="Name">OtherScore</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0.5</YS>
							<YO>50</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>70</XO>
							<YS>0</YS>
							<YO>70</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">0</string>
						<Color3 name="TextColor3">4294901760</Color3>
						<float name="TextTransparency">0.400000006</float>
						<bool name="TextWrap">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBX23">
					<Properties>
						<bool name="Active">false</bool>
						<bool name="Archivable">true</bool>
						<Color3 name="BackgroundColor3">4278242559</Color3>
						<float name="BackgroundTransparency">0.5</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">4</token>
						<string name="Name">InstructionsText</string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-200</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>400</XO>
							<YS>0</YS>
							<YO>50</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Run into a trout to catch it. Whoever catches the most trout in 30 seconds wins!</string>
						<Color3 name="TextColor3">4278190080</Color3>
						<float name="TextTransparency">0</float>
						<bool name="TextWrap">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="ImageLabel" referent="RBX24">
					<Properties>
						<bool name="Active">false</bool>
						<bool name="Archivable">true</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="Draggable">false</bool>
						<Content name="Image"><url>http://www.roblox.com/asset/?id=56844112</url></Content>
						<string name="Name">TroutPic</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>10</XO>
							<YS>0.5</YS>
							<YO>-70</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>70</XO>
							<YS>0</YS>
							<YO>70</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBX25">
					<Properties>
						<bool name="Active">false</bool>
						<bool name="Archivable">true</bool>
						<Color3 name="BackgroundColor3">4278242559</Color3>
						<float name="BackgroundTransparency">0.5</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">4</token>
						<string name="Name">SecondsLeft</string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-200</XO>
							<YS>0</YS>
							<YO>50</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>400</XO>
							<YS>0</YS>
							<YO>50</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">seconds left!</string>
						<Color3 name="TextColor3">4278190080</Color3>
						<float name="TextTransparency">0</float>
						<bool name="TextWrap">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBX26">
					<Properties>
						<bool name="Active">false</bool>
						<bool name="Archivable">true</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">8</token>
						<string name="Name">Timer</string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-72</XO>
							<YS>0</YS>
							<YO>50</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>50</XO>
							<YS>0</YS>
							<YO>50</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">30</string>
						<Color3 name="TextColor3">4278255360</Color3>
						<float name="TextTransparency">0.200000003</float>
						<bool name="TextWrap">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="ScreenGui" referent="RBX27">
				<Properties>
					<bool name="Archivable">true</bool>
					<string name="Name">OpponentDiedGui</string>
				</Properties>
				<Item class="Frame" referent="RBX28">
					<Properties>
						<bool name="Active">false</bool>
						<bool name="Archivable">true</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="Draggable">false</bool>
						<string name="Name">MessageFrame</string>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX29">
						<Properties>
							<bool name="Active">false</bool>
							<bool name="Archivable">true</bool>
							<Color3 name="BackgroundColor3">4278242559</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="Draggable">false</bool>
							<token name="Font">0</token>
							<token name="FontSize">4</token>
							<string name="Name">MessageText</string>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>-150</XO>
								<YS>0.5</YS>
								<YO>-90</YO>
							</UDim2>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>300</XO>
								<YS>0</YS>
								<YO>75</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Your opponent has died (or left). So you win by default!</string>
							<Color3 name="TextColor3">4278190080</Color3>
							<float name="TextTransparency">0</float>
							<bool name="TextWrap">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX30">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="Archivable">true</bool>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4278242559</Color3>
							<float name="BackgroundTransparency">0.5</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="Draggable">false</bool>
							<token name="Font">0</token>
							<token name="FontSize">3</token>
							<string name="Name">OKButton</string>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>-150</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="Selected">false</bool>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>300</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">Hooray!</string>
							<Color3 name="TextColor3">4278190080</Color3>
							<float name="TextTransparency">0</float>
							<bool name="TextWrap">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="ObjectValue" referent="RBX31">
					<Properties>
						<bool name="Archivable">true</bool>
						<string name="Name">Opponent</string>
						<Ref name="Value">null</Ref>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX32">
					<Properties>
						<bool name="Archivable">true</bool>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">OnOpponentDied</string>
						<ProtectedString name="Source">function waitForChild(parent, childName)
	while not parent:FindFirstChild(childName) do
		parent.ChildAdded:wait()
	end
	return parent[childName]
end

local OpponentDiedGui = script.Parent
local FishingContestGui
local PlayerGui
local myPlayer
local Opponent
local otherPlayer
local otherHumanoid
local MessageFrame
local OKButton

function winByDefault()
	if PlayerGui then
		OpponentDiedGui.Parent = PlayerGui
		FishingContestGui:Remove()
		MessageFrame = waitForChild(OpponentDiedGui, &quot;MessageFrame&quot;)
		MessageFrame.Visible = true
		OKButton = waitForChild(MessageFrame, &quot;OKButton&quot;)
		OKButton.MouseButton1Click:connect(function() OpponentDiedGui:Remove() end)
	end
end

function winByDefaultPlayerVersion(somePlayer)
	if somePlayer == otherPlayer then
		winByDefault()
	end
end

if OpponentDiedGui then
	FishingContestGui = OpponentDiedGui.Parent
	if FishingContestGui then
		PlayerGui = FishingContestGui.Parent
		if PlayerGui then
			myPlayer = PlayerGui.Parent
		end
	end
	Opponent = OpponentDiedGui:FindFirstChild(&quot;Opponent&quot;)
	if Opponent then
		Opponent.Changed:connect(function() script:Remove() end)
		otherPlayer = Opponent.Value
		if otherPlayer then
			game.Players.ChildRemoved:connect(winByDefaultPlayerVersion)
			otherHumanoid = otherPlayer.Character:FindFirstChild(&quot;Humanoid&quot;)
			if otherHumanoid then otherHumanoid.Died:connect(winByDefault) end
		end
	end
end
</ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="Sound" referent="RBX33">
				<Properties>
					<bool name="Archivable">true</bool>
					<bool name="Looped">false</bool>
					<string name="Name">DingSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=56524816</url></Content>
					<float name="Volume">0.200000003</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX34">
				<Properties>
					<bool name="Archivable">true</bool>
					<bool name="Looped">false</bool>
					<string name="Name">BuzzSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=54068096</url></Content>
					<float name="Volume">0.300000012</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX35">
			<Properties>
				<bool name="Archivable">true</bool>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">TankRemoveScript</string>
				<ProtectedString name="Source">function waitForChild(parent, childName)
	while not parent:FindFirstChild(childName) do
		parent.ChildAdded:wait()
	end
	return parent[childName]
end

local Tank = script.Parent
local GeneratingPlayer = waitForChild(Tank, &quot;GeneratingPlayer&quot;)
local OtherPlayer = waitForChild(Tank, &quot;OtherPlayer&quot;)
local myPlayer
local otherPlayer
local myHumanoid
local otherHumanoid

function destroyTank()
	Tank:Remove()
end

function destroyTankPlayerVersion(somePlayer)
	if (somePlayer == myPlayer or somePlayer == otherPlayer) then
		destroyTank()
	end
end

-- Main operation:
myPlayer = GeneratingPlayer.Value
otherPlayer = OtherPlayer.Value
game.Players.PlayerRemoving:connect(destroyTankPlayerVersion)
myHumanoid = myPlayer.Character:FindFirstChild(&quot;Humanoid&quot;)
otherHumanoid = otherPlayer.Character:FindFirstChild(&quot;Humanoid&quot;)
if myHumanoid then
	myHumanoid.Died:connect(destroyTank)
end
if otherHumanoid then
	otherHumanoid.Died:connect(destroyTank)
end
</ProtectedString>
			</Properties>
		</Item>
		<Item class="Sound" referent="RBX36">
			<Properties>
				<bool name="Archivable">true</bool>
				<bool name="Looped">false</bool>
				<string name="Name">CheerSound</string>
				<float name="Pitch">1</float>
				<bool name="PlayOnRemove">false</bool>
				<Content name="SoundId"><url>http://www.roblox.com/asset/?id=58270890</url></Content>
				<float name="Volume">0.5</float>
			</Properties>
		</Item>
		<Item class="Sound" referent="RBX37">
			<Properties>
				<bool name="Archivable">true</bool>
				<bool name="Looped">false</bool>
				<string name="Name">AwwSound</string>
				<float name="Pitch">1</float>
				<bool name="PlayOnRemove">false</bool>
				<Content name="SoundId"><url>http://www.roblox.com/asset/?id=58271054</url></Content>
				<float name="Volume">0.5</float>
			</Properties>
		</Item>
		<Item class="ScreenGui" referent="RBX38">
			<Properties>
				<bool name="Archivable">true</bool>
				<string name="Name">UnwantedTroutFisherGui</string>
			</Properties>
			<Item class="Frame" referent="RBX39">
				<Properties>
					<bool name="Active">false</bool>
					<bool name="Archivable">true</bool>
					<Color3 name="BackgroundColor3">4288914085</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">4279970357</Color3>
					<int name="BorderSizePixel">1</int>
					<bool name="Draggable">false</bool>
					<string name="Name">MessageFrame</string>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<token name="Style">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="TextLabel" referent="RBX40">
					<Properties>
						<bool name="Active">false</bool>
						<bool name="Archivable">true</bool>
						<Color3 name="BackgroundColor3">4278242559</Color3>
						<float name="BackgroundTransparency">0.5</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">4</token>
						<string name="Name">MessageText</string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-150</XO>
							<YS>0.5</YS>
							<YO>-90</YO>
						</UDim2>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>300</XO>
							<YS>0</YS>
							<YO>75</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Sorry, but no spectators are allowed inside the pool.</string>
						<Color3 name="TextColor3">4278190080</Color3>
						<float name="TextTransparency">0</float>
						<bool name="TextWrap">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="TextButton" referent="RBX41">
					<Properties>
						<bool name="Active">true</bool>
						<bool name="Archivable">true</bool>
						<bool name="AutoButtonColor">true</bool>
						<Color3 name="BackgroundColor3">4278242559</Color3>
						<float name="BackgroundTransparency">0.5</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="Draggable">false</bool>
						<token name="Font">0</token>
						<token name="FontSize">3</token>
						<string name="Name">OKButton</string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-150</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="Selected">false</bool>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>300</XO>
							<YS>0</YS>
							<YO>25</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<string name="Text">OK</string>
						<Color3 name="TextColor3">4278190080</Color3>
						<float name="TextTransparency">0</float>
						<bool name="TextWrap">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX42">
				<Properties>
					<bool name="Archivable">true</bool>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">UnwantedGuiRunner</string>
					<ProtectedString name="Source">function waitForChild(parent, childName)
	while not parent:FindFirstChild(childName) do
		parent.ChildAdded:wait()
	end
	return parent[childName]
end

local ScreenGui = script.Parent
local Frame = waitForChild(ScreenGui, &quot;MessageFrame&quot;)
local OKButton = waitForChild(Frame, &quot;OKButton&quot;)
local MessageText = waitForChild(Frame, &quot;MessageText&quot;)

OKButton.MouseButton1Click:connect(function() ScreenGui:Remove() end)
</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX43">
			<Properties>
				<bool name="Archivable">true</bool>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-13.245882</X>
					<Y>5.33383846</Y>
					<Z>-6.97435045</Z>
					<R00>0.0209965799</R00>
					<R01>-0.949216306</R01>
					<R02>0.313922852</R02>
					<R10>-0</R10>
					<R11>0.313992083</R11>
					<R12>0.949425638</R12>
					<R20>-0.999779522</R20>
					<R21>-0.0199346915</R21>
					<R22>0.00659275986</R22>
				</CoordinateFrame>
				<CoordinateFrame name="Focus">
					<X>-19.5243301</X>
					<Y>-13.6546469</Y>
					<Z>-7.10620546</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>