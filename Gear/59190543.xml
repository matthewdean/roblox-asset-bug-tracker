<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="Archivable">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.899999976</Y>
				<Z>0</Z>
				<R00>0</R00>
				<R01>0</R01>
				<R02>-1</R02>
				<R10>-0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>1</R20>
				<R21>0</R21>
				<R22>0</R22>
			</CoordinateFrame>
			<string name="Name">BoomerangDagger</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=59015064 </url></Content>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<bool name="Archivable">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>14.0550051</X>
					<Y>4.23500204</Y>
					<Z>-4.51292562</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">3</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.51000005</X>
					<Y>2.84999919</Y>
					<Z>0.200000003</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<bool name="Archivable">true</bool>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=59015128</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=59015100</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX3">
				<Properties>
					<bool name="Archivable">true</bool>
					<bool name="Looped">false</bool>
					<string name="Name">WhipSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=55634401</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX4">
				<Properties>
					<bool name="Archivable">true</bool>
					<bool name="Looped">false</bool>
					<string name="Name">ThudSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=58831920</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Fire" referent="RBX5">
				<Properties>
					<bool name="Archivable">true</bool>
					<Color3 name="Color">4284874956</Color3>
					<bool name="Enabled">true</bool>
					<string name="Name">Fire</string>
					<Color3 name="SecondaryColor">4278203136</Color3>
					<float name="heat_xml">25</float>
					<float name="size_xml">3</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX6">
			<Properties>
				<bool name="Archivable">true</bool>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Local Gui</string>
				<ProtectedString name="Source">Tool = script.Parent

local stillEquipped = false

function onEquippedLocal(mouse)
&#9;stillEquipped = true
&#9;if mouse == nil then 
&#9;&#9;return
&#9;end
&#9;while stillEquipped do 
&#9;&#9;mouse.Icon = &quot;rbxasset://textures\\GunCursor.png&quot;
&#9;&#9;while Tool.Enabled and stillEquipped do 
&#9;&#9;&#9;wait(0.01)
&#9;&#9;end
&#9;&#9;mouse.Icon = &quot;rbxasset://textures\\GunWaitCursor.png&quot;
&#9;&#9;while not Tool.Enabled and stillEquipped do 
&#9;&#9;&#9;wait(0.01)
&#9;&#9;end&#9;
&#9;end
end


function onUnequippedLocal()
&#9;stillEquipped = false
end

Tool.Equipped:connect(onEquippedLocal)
Tool.Unequipped:connect(onUnequippedLocal)</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX7">
			<Properties>
				<bool name="Archivable">true</bool>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">BoomerangDagger LS</string>
				<ProtectedString name="Source">local Tool = script.Parent
local Handle = Tool.Handle
local Fire

local myCharacter
local myHumanoid
local Torso
local RightShoulder
local TargetPoint
local TargetDir
local TargetHorAngle
local TargetVertAngle

local ProjectileScript

local newlyRunning = true&#9;-- Purpose of this boolean is to make the wait for the tool to be re-equipped
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;--   a little less painful.

local StandardC1 = CFrame.new(-0.5, 0.5, 0) * CFrame.Angles(0, math.pi/2, 0)

function onActivated()
&#9;if not Tool.Enabled then return end
&#9;Tool.Enabled = false

&#9;myCharacter = Tool.Parent
&#9;if myCharacter then
&#9;&#9;myHumanoid = myCharacter:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;Torso = myCharacter:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;if Torso then
&#9;&#9;&#9;RightShoulder = Torso:FindFirstChild(&quot;Right Shoulder&quot;)
&#9;&#9;end
&#9;&#9;if myHumanoid and RightShoulder then&#9;&#9;
&#9;&#9;&#9;-- Bring arm up, to prepare to throw dagger.
&#9;&#9;&#9;-- Standard shoulder C1 is StandardC1 * CFrame.Angles(0, 0, 0), so we use that as the
&#9;&#9;&#9;--   starting point.
&#9;&#9;&#9;-- Upright is StandardC1 * CFrame.Angles(0, 0, -math.pi/2), so we use that as the endpoint
&#9;&#9;&#9;--   and interpolate between.
&#9;&#9;&#9;for i = 1, 15 do
&#9;&#9;&#9;&#9;RightShoulder.C1 = StandardC1 * CFrame.Angles(0, 0, -i * math.pi/30)
&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;end
&#9;&#9;&#9;wait(0.1)

&#9;&#9;&#9;-- Calculate target direction and corresponding horizontal angle.
&#9;&#9;&#9;-- But make sure we&apos;re not throwing behind us (even though that would
&#9;&#9;&#9;--   be cool). The limit is throwing directly to the side.
&#9;&#9;&#9;TargetPoint = myHumanoid.TargetPoint
&#9;&#9;&#9;TargetDir = Torso.CFrame:pointToObjectSpace(TargetPoint) - Vector3.new(1, 0.5, 0)
&#9;&#9;&#9;TargetVertAngle = math.atan(TargetDir.Y / TargetDir.Z)
&#9;&#9;&#9;if TargetDir.Z &gt; 0 then
&#9;&#9;&#9;&#9;if TargetDir.X &gt; 0 then 
&#9;&#9;&#9;&#9;&#9;TargetHorAngle = math.pi/2
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;TargetHorAngle = -math.pi/2
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;TargetHorAngle = math.atan(TargetDir.X / TargetDir.magnitude)
&#9;&#9;&#9;end

&#9;&#9;&#9;-- Meanwhile, down angle is at StandardC1 * CFrame.Angles(TargetHorAngle, 0, TargetVertAngle), so we again
&#9;&#9;&#9;--   interpolate to bring the arm down.
&#9;&#9;&#9;for i = 1, 5 do
&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;&#9;RightShoulder.C1 = StandardC1 * CFrame.Angles(i * TargetHorAngle / 5, 0, (i-5) * math.pi/10 + i * TargetVertAngle / 5)
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;-- Now, fire off a projectile.
&#9;&#9;&#9;
&#9;&#9;&#9;ProjectileScript = Tool:FindFirstChild(&quot;BDProjScript&quot;)
&#9;&#9;&#9;if ProjectileScript then
&#9;&#9;&#9;&#9;TargetPos = Tool:FindFirstChild(&quot;TargetPos&quot;)
&#9;&#9;&#9;&#9;if TargetPos and myHumanoid then
&#9;&#9;&#9;&#9;&#9;TargetPos.Value = myHumanoid.TargetPoint&#9;-- Necessary to send this since server only updates TargetPoint on mouse click.
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;ProjectileScript = ProjectileScript:Clone()
&#9;&#9;&#9;&#9;ProjectileScript.Parent = Tool
&#9;&#9;&#9;&#9;ProjectileScript.Disabled = false
&#9;&#9;&#9;end

&#9;&#9;&#9;--&#9;And bring your arm back to normal.
&#9;&#9;&#9;wait(0.2)
&#9;&#9;&#9;for i = 10, 0, -1 do
&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;&#9;RightShoulder.C1 = StandardC1 * CFrame.Angles(i * TargetHorAngle/10, 0, 0)
&#9;&#9;&#9;end&#9;
&#9;&#9;else
&#9;&#9;&#9;Tool.Enabled = true
&#9;&#9;end
&#9;else
&#9;&#9;Tool.Enabled = true
&#9;end
end

function onEquipped()
&#9;if newlyRunning and not Tool.Enabled then
&#9;&#9;wait(5)
&#9;&#9;Tool.Enabled = true
&#9;end
&#9;newlyRunning = false
end

function onUnequipped()
&#9;Handle.Transparency = 0.0
&#9;Fire = Handle:FindFirstChild(&quot;Fire&quot;)
&#9;if Fire then Fire.Enabled = true end
&#9;if RightShoulder then RightShoulder.C1 = StandardC1 end
&#9;if not Tool.Enabled then
&#9;&#9;wait(5)
&#9;&#9;Tool.Enabled = true
&#9;end
end

Tool.Activated:connect(onActivated)
Tool.Equipped:connect(onEquipped)
Tool.Unequipped:connect(onUnequipped)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX8">
			<Properties>
				<bool name="Archivable">true</bool>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">BDProjScript</string>
				<ProtectedString name="Source">local Tool = script.Parent
local Handle = Tool.Handle

local InitRotVel
local InitVel

local myCharacter = Tool.Parent
local myHumanoid
local myPlayer

local Target = Tool:FindFirstChild(&quot;TargetPos&quot;)
if Target then
&#9;Target = Target.Value
else
&#9;if myCharacter then
&#9;&#9;myHumanoid = myCharacter:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;if myHumanoid then
&#9;&#9;&#9;Target = myHumanoid.TargetPoint
&#9;&#9;end
&#9;end
end

if not Target then script:Remove() end

local daggerReturning = false
local ctr = 0

local debris = game:GetService(&quot;Debris&quot;)

local Dagger = Handle:Clone()
Dagger.Transparency = 0.0
Dagger.CFrame = Handle.CFrame
local DaggerPos = Dagger.Position
local VelVector = Target - Dagger.Position
InitVel = 100 * VelVector.unit
Dagger.Velocity = InitVel
InitRotVel = 20 * Dagger.CFrame.lookVector
Dagger.RotVelocity = InitRotVel
Dagger.Name = &quot;BoomerangDaggerProjectile&quot;

local Fire = Handle:FindFirstChild(&quot;Fire&quot;)
if Fire then Fire.Enabled = false end
Handle.Transparency = 1.0

local AntiGrav = Instance.new(&quot;BodyForce&quot;)
AntiGrav.force = Vector3.new(0, 196.2 * Dagger:GetMass(), 0)
AntiGrav.Parent = Dagger

local WhipSound
local ThudSound
local soundCo

Dagger.Parent = game.Workspace

Tool.Unequipped:connect(function()
&#9;if ThudSound then ThudSound:Stop() end
&#9;Dagger:Remove()
&#9;script:Remove()
end)

function tagHumanoid(humanoid, player)
&#9;local CreatorTag = Instance.new(&quot;ObjectValue&quot;)
&#9;CreatorTag.Name = &quot;creator&quot;
&#9;CreatorTag.Value = player
&#9;CreatorTag.Parent = humanoid
end

function untagHumanoid(humanoid)
&#9;if not humanoid then return end
&#9;local Tag = humanoid:FindFirstChild(&quot;creator&quot;)
&#9;if Tag then Tag:Remove() end
end

function blow(hit)
&#9;if hit:FindFirstChild(&quot;BoomerangDaggerRecentlyHit&quot;) then
&#9;&#9;return
&#9;else
&#9;&#9;local DebounceTag = Instance.new(&quot;BoolValue&quot;)
&#9;&#9;DebounceTag.Name = &quot;BoomerangDaggerRecentlyHit&quot;
&#9;&#9;DebounceTag.Parent = hit
&#9;&#9;debris:AddItem(DebounceTag, 0.3)

&#9;&#9;local hitThing = hit.Parent
&#9;&#9;if not hitThing then return end
&#9;&#9;if hitThing.ClassName == &quot;Hat&quot; then hitThing = hitThing.Parent end
&#9;&#9;
&#9;&#9;local myCharacter = Tool.Parent
&#9;&#9;if not myCharacter then return end
&#9;&#9;
&#9;&#9;local hitHumanoid = hitThing:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;if hitThing ~= myCharacter and hitHumanoid ~= nil then
&#9;&#9;&#9;myPlayer = game.Players:GetPlayerFromCharacter(myCharacter)
&#9;&#9;&#9;tagHumanoid(hitHumanoid, myPlayer)
&#9;&#9;&#9;hitHumanoid:TakeDamage(12)
&#9;&#9;&#9;wait(1)
&#9;&#9;&#9;untagHumanoid(hitHumanoid)
&#9;&#9;elseif hitThing == Tool and daggerReturning then
&#9;&#9;&#9;Dagger:Remove()
&#9;&#9;&#9;wait()&#9;-- To avoid an error
&#9;&#9;&#9;Dagger = nil
&#9;&#9;end
&#9;end
end

function manageSound()
&#9;WhipSound = Dagger:FindFirstChild(&quot;WhipSound&quot;)
&#9;if WhipSound then
&#9;&#9;WhipSound:Play()
&#9;&#9;wait(5/30)
&#9;&#9;WhipSound:Play()
&#9;&#9;wait(7/30)
&#9;&#9;WhipSound:Play()
&#9;&#9;wait(10/30)
&#9;&#9;WhipSound:Play()
&#9;&#9;wait(17/30)
&#9;&#9;WhipSound:Play()
&#9;&#9;wait(17/30)
&#9;&#9;if Dagger then
&#9;&#9;&#9;WhipSound:Play()
&#9;&#9;&#9;wait(10/30)
&#9;&#9;end
&#9;&#9;if Dagger then
&#9;&#9;&#9;WhipSound:Play()
&#9;&#9;&#9;wait(7/30)
&#9;&#9;end
&#9;&#9;while Dagger do
&#9;&#9;&#9;WhipSound:Play()
&#9;&#9;&#9;wait(5/30)
&#9;&#9;end
&#9;end
end

soundCo = coroutine.create(manageSound)
coroutine.resume(soundCo)

Dagger.Touched:connect(blow)

for i = 50, 0, -1 do
&#9;Dagger.Velocity = i/50 * InitVel
&#9;Dagger.RotVelocity = i/50 * InitRotVel
&#9;wait()
end

daggerReturning = true

&#9;

while Handle and Dagger do
&#9;Dagger.Velocity = 2 * ctr * (Handle.Position - Dagger.Position).unit
&#9;Dagger.RotVelocity = -ctr/50 * InitRotVel
&#9;ctr = ctr + 1
&#9;wait()
end

Tool.Enabled = true
Handle.Transparency = 0.0
if Fire then Fire.Enabled = true end
ThudSound = Handle:FindFirstChild(&quot;ThudSound&quot;)
if ThudSound then ThudSound:Play() end

wait(0.3)&#9;-- (for sound to finish)
script:Remove()</ProtectedString>
			</Properties>
		</Item>
		<Item class="Vector3Value" referent="RBX9">
			<Properties>
				<bool name="Archivable">true</bool>
				<string name="Name">TargetPos</string>
				<Vector3 name="Value">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX10">
			<Properties>
				<bool name="Archivable">true</bool>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>14.0757637</X>
					<Y>5.65877914</Y>
					<Z>-1.20241737</Z>
					<R00>0.999902487</R00>
					<R01>-0.00493591093</R01>
					<R02>0.0130624771</R02>
					<R10>4.65661287e-010</R10>
					<R11>0.935443699</R11>
					<R12>0.353475541</R12>
					<R20>-0.0139639378</R20>
					<R21>-0.35344106</R21>
					<R22>0.935352504</R22>
				</CoordinateFrame>
				<CoordinateFrame name="Focus">
					<X>13.8145142</X>
					<Y>-1.41073179</Y>
					<Z>-19.9094677</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>