<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>-0.800000012</X>
				<Y>-3.20000005</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>0</R11>
				<R12>-1</R12>
				<R20>-0</R20>
				<R21>1</R21>
				<R22>0</R22>
			</CoordinateFrame>
			<string name="Name">FantasyCatapult</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=69947999</url></Content>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>10.3713217</X>
					<Y>9.2150116</Y>
					<Z>-24.3972607</Z>
					<R00>0.0164276138</R00>
					<R01>-0.99986428</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-0.99986428</R20>
					<R21>-0.0164276138</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1.30999756</X>
					<Y>1.59999871</Y>
					<Z>6.21000004</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=69947919</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>2.5</X>
						<Y>2.5</Y>
						<Z>2.5</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=69935934</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX3">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Local Gui</string>
				<ProtectedString name="Source">Tool = script.Parent

local stillEquipped = false

function onEquippedLocal(mouse)
&#9;stillEquipped = true
&#9;if mouse == nil then 
&#9;&#9;print(&quot;Mouse not found&quot;)
&#9;&#9;return
&#9;end
&#9;while stillEquipped do 
&#9;&#9;print(&quot;Setting Mouse to go&quot;)
&#9;&#9;mouse.Icon = &quot;rbxasset://textures\\GunCursor.png&quot;
&#9;&#9;while Tool.Enabled and stillEquipped do 
&#9;&#9;&#9;wait(0.01)
&#9;&#9;end
&#9;&#9;print(&quot;Setting Mouse to wait&quot;)
&#9;&#9;mouse.Icon = &quot;rbxasset://textures\\GunWaitCursor.png&quot;
&#9;&#9;while not Tool.Enabled and stillEquipped do 
&#9;&#9;&#9;wait(0.01)
&#9;&#9;end&#9;
&#9;end
end


function onUnequippedLocal()
&#9;stillEquipped = false
end

Tool.Equipped:connect(onEquippedLocal)
Tool.Unequipped:connect(onUnequippedLocal)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX4">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">CatapultScript</string>
				<ProtectedString name="Source">local Tool = script.Parent 
local Catapult = Tool.Handle

local vCharacter
local myTorso 
local myHumanoid 

local debris = game:GetService(&quot;Debris&quot;)

Tool.Enabled = true 

local catapultHealth = 600

local catapultActive = false
local myCatapult
local catapultWeld

local frontAxleWeld
local backAxleWeld

local damage = 50

local projectile = Instance.new(&quot;Part&quot;)
projectile.FormFactor = 3 
projectile.Size = Vector3.new(2.4, 2.4, 2.4)
projectile.Name = &quot;Projectile&quot; 
projectile.CanCollide = false

local projectileMesh = Instance.new(&quot;SpecialMesh&quot;)
projectileMesh.MeshId = &quot;http://www.roblox.com/asset/?id=1290033&quot;
projectileMesh.TextureId = &quot;http://www.roblox.com/asset/?id=1290030&quot;
projectileMesh.Parent = projectile

local fire = Instance.new(&quot;Fire&quot;)
fire.Parent = projectile

local antiFloatForce = Instance.new(&quot;BodyForce&quot;)
antiFloatForce.force = Vector3.new(0, -90000, 0)
antiFloatForce.Parent = myTorso

local lightForce = Instance.new(&quot;BodyForce&quot;) 

local jumpConnection
local runningConnection

function destroyCatapult()
&#9;Catapult.Transparency = 0.0
&#9;if myCatapult then myCatapult:Remove() end 
&#9;if catapultWeld then catapultWeld:Remove() end 
&#9;catapultActive = false 
&#9;if myHumanoid then
&#9;&#9;myHumanoid.WalkSpeed = 16
&#9;&#9;local ratio = myHumanoid.Health/myHumanoid.MaxHealth
&#9;&#9;myHumanoid.Health = ratio * 100 
&#9;&#9;myHumanoid.MaxHealth = 100
&#9;end 
&#9;if jumpConnection then jumpConnection:disconnect() end 
&#9;if runningConnection then runningConnection:disconnect() end
&#9;if antiFloatingForce then antiFloatingForce:Remove() end
end

function boom(hit)
&#9;if hit and hit.Parent then 
&#9;&#9;if hit.Parent:IsA(&quot;Tool&quot;) then 
&#9;&#9;&#9;local tool = hit.Parent &#9;&#9;
&#9;&#9;&#9;local character = tool.Parent 
&#9;&#9;&#9;local player = game.Players:GetPlayerFromCharacter(player)
&#9;&#9;&#9;if player then 
&#9;&#9;&#9;&#9;catapultHealth = catapultHealth - 75 
&#9;&#9;&#9;&#9;if catapultHealth &lt; 0 then 
&#9;&#9;&#9;&#9;&#9;destroyCatapult() 
&#9;&#9;&#9;&#9;end 
&#9;&#9;&#9;end
&#9;&#9;else&#9;&#9;
&#9;&#9;&#9;if hit.Parent == game.Workspace and hit.Velocity.magnitude &gt; 30 then  -- It might be a projectile, lets just do damage
&#9;&#9;&#9;&#9;catapultHealth = catapultHealth - 60 
&#9;&#9;&#9;&#9;if catapultHealth &lt; 0 then 
&#9;&#9;&#9;&#9;&#9;destroyCatapult()
&#9;&#9;&#9;&#9;end 
&#9;&#9;&#9;end 
&#9;&#9;end 
&#9;end 
end 

function blow(hit)
&#9;local humanoid = hit.Parent:FindFirstChild(&quot;Humanoid&quot;)
&#9;local vCharacter = Tool.Parent&#9;
&#9;local vPlayer = game.Players:GetPlayerFromCharacter(vCharacter)&#9;
&#9;local myHumanoid = vCharacter:FindFirstChild(&quot;Humanoid&quot;)&#9;
&#9;if humanoid ~= nil and myHumanoid ~= nil and humanoid ~= myHumanoid then &#9;&#9;
&#9;&#9;tagHumanoid(humanoid, vPlayer)&#9;&#9;&#9;&#9;
&#9;&#9;humanoid:TakeDamage(damage)&#9;&#9;&#9;&#9;&#9;&#9;
&#9;end&#9;
end

function tagHumanoid(humanoid, player)
&#9;if humanoid ~= nil and player ~= nil then 
&#9;&#9;local creatorTag = Instance.new(&quot;ObjectValue&quot;)
&#9;&#9;creatorTag.Name = &quot;creator&quot;
&#9;&#9;creatorTag.Value = player
&#9;&#9;creatorTag.Parent = humanoid
&#9;&#9;debris:AddItem(creatorTag,  1)
&#9;end
end

function shoot(target, direction, distance)
&#9;if myTorso == nil or myHumanoid == nil then return end 
&#9;local projectileClone = projectile:Clone()

&#9;local speed = 50

&#9;local upVector = Vector3.new(0, 1, 0)
&#9;local dy = direction.Y
&#9;direction = (direction *  Vector3.new(1, 0, 1))
&#9;local dxz = direction.magnitude 
&#9;local xzVelocity = direction.unit * speed
&#9;local yVelocity = ((speed * dy / dxz) + ((196.1 * dxz)/(2 * speed))) * upVector
&#9;
&#9;print(dy, dxz)
&#9;
&#9;local spawnPos = myTorso.Position 
&#9;&#9;
&#9;projectileClone.CFrame = CFrame.new(spawnPos, spawnPos + myTorso.CFrame.lookVector)
&#9;projectileClone.Velocity = xzVelocity + yVelocity&#9;
&#9;projectileClone.RotVelocity = Vector3.new(0, 10, 0)

&#9;local floatForce = Instance.new(&quot;BodyForce&quot;) &#9;
&#9;floatForce.force = Vector3.new(0, projectileClone:GetMass() * 190, 0)&#9;
&#9;
&#9;projectileClone.Parent = game.Workspace 
&#9;projectileClone.Touched:connect(blow)
&#9;debris:AddItem(projectileClone, 7) 
&#9;
&#9;wait(0.5)
&#9;projectileClone.CanCollide = true 
end 

function onActivated()
&#9;if Tool.Enabled == false then 
&#9;&#9;return 
&#9;end 

&#9;if myTorso == nil or myHumanoid == nil then 
&#9;&#9;return 
&#9;end 

&#9;if catapultActive == false then 

&#9;&#9;Tool.Enabled = false 
&#9;&#9;catapultActive = true 

&#9;&#9;myCatapult = game:GetService(&quot;InsertService&quot;):LoadAsset(69939157):GetChildren()[1] 
&#9;&#9;if myCatapult and myCatapult:FindFirstChild(&quot;Base&quot;) then 
&#9;&#9;&#9;Catapult.Transparency = 1.0 

&#9;&#9;&#9;myCatapult.Parent = game.Workspace

&#9;&#9;&#9;myCatapult:MoveTo(myTorso.Position + myTorso.CFrame.lookVector * 5.0) 

&#9;&#9;&#9;if myCatapult:FindFirstChild(&quot;Base&quot;) then 
&#9;&#9;&#9;&#9;myCatapult.Base.CFrame = CFrame.new(myCatapult.Base.Position, myCatapult.Base.Position + myTorso.CFrame.lookVector) * CFrame.Angles(-math.pi/2, 0, 0)
&#9;&#9;&#9;&#9;local children = myCatapult:GetChildren() 
&#9;&#9;&#9;&#9;local mass = 0
&#9;&#9;&#9;&#9;for i = 1, #children do 
&#9;&#9;&#9;&#9;&#9;if children[i]:IsA(&quot;BasePart&quot;) then 
&#9;&#9;&#9;&#9;&#9;&#9;mass = mass + children[i]:GetMass() -- Not used!
&#9;&#9;&#9;&#9;&#9;end 
&#9;&#9;&#9;&#9;end &#9;&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;myCatapult.Base.Touched:connect(boom) &#9;&#9;&#9;&#9;
&#9;&#9;&#9;end &#9;&#9;&#9;

&#9;&#9;&#9;wait(0.5)
&#9;&#9;&#9;
&#9;&#9;&#9;catapultWeld = Instance.new(&quot;Weld&quot;)
&#9;&#9;&#9;catapultWeld.Parent = myTorso 
&#9;&#9;&#9;catapultWeld.Part0 = myTorso 
&#9;&#9;&#9;catapultWeld.Part1 = myCatapult.Base
&#9;&#9;&#9;catapultWeld.C1 = CFrame.new(0, -5, 0, 1, 0, -2.18556949e-007, -2.18556949e-007, 9.55342796e-015, -1, 0, 1, 9.55342711e-015)

&#9;&#9;&#9;myHumanoid.WalkSpeed = 4.0
&#9;&#9;&#9;myTorso.Anchored = false

&#9;&#9;&#9;catapultHealth = 600
 
&#9;&#9;&#9;local ratio = myHumanoid.Health/myHumanoid.MaxHealth 
&#9;&#9;&#9;myHumanoid.MaxHealth = 300 
&#9;&#9;&#9;while myHumanoid.MaxHealth &lt; 300 do 
&#9;&#9;&#9;&#9;myHumanoid.MaxHealth = 300 
&#9;&#9;&#9;end 
&#9;&#9;&#9;while myHumanoid.Health &lt; ratio * 300 do 
&#9;&#9;&#9;&#9;myHumanoid.Health = myHumanoid.Health * 300 
&#9;&#9;&#9;end 

&#9;&#9;&#9;jumpConnection = myHumanoid.Jumping:connect(function()&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;if myTorso and myTorso:FindFirstChild(&quot;BF&quot;) == nil  then&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local antigravForce = Instance.new(&quot;BodyForce&quot;)
&#9;&#9;&#9;&#9;&#9;antigravForce.force = Vector3.new(0, -990001, 0)
&#9;&#9;&#9;&#9;&#9;antigravForce.Name = &quot;BF&quot;
&#9;&#9;&#9;&#9;&#9;antigravForce.Parent = myTorso
&#9;&#9;&#9;&#9;&#9;wait(0.7)
&#9;&#9;&#9;&#9;&#9;if antigravForce then antigravForce:Remove() end 
&#9;&#9;&#9;&#9;end &#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;end)
&#9;&#9;
&#9;&#9;&#9;if myCatapult and myCatapult:FindFirstChild(&quot;Base&quot;) then 
&#9;&#9;&#9;&#9;local base = myCatapult.Base 
&#9;&#9;&#9;&#9;if base:FindFirstChild(&quot;FrontAxleWeld&quot;) and base:FindFirstChild(&quot;BackAxleWeld&quot;)  then 
&#9;&#9;&#9;&#9;&#9;frontAxleWeld = base.FrontAxleWeld 
&#9;&#9;&#9;&#9;&#9;backAxleWeld = base.BackAxleWeld
&#9;&#9;&#9;&#9;end 
&#9;&#9;&#9;end 

&#9;&#9;&#9;runningConnection = myHumanoid.Running:connect(function()
&#9;&#9;&#9;&#9;if frontAxleWeld and backAxleWeld then 
&#9;&#9;&#9;&#9;&#9;frontAxleWeld.C1 = CFrame.Angles(math.pi/8, 0, 0) * frontAxleWeld.C1 
&#9;&#9;&#9;&#9;&#9;backAxleWeld.C1 = CFrame.Angles(math.pi/8, 0, 0) * backAxleWeld.C1
&#9;&#9;&#9;&#9;end 
&#9;&#9;&#9;&#9;if myTorso and myTorso:FindFirstChild(&quot;BV&quot;) == nil then &#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;end 
&#9;&#9;&#9;end)

&#9;&#9;&#9;coroutine.resume(coroutine.create(function()
&#9;&#9;&#9;&#9;wait(90)
&#9;&#9;&#9;&#9;destroyCatapult()
&#9;&#9;&#9;end)) 

&#9;&#9;&#9;wait(2.0)
&#9;&#9;&#9;Tool.Enabled = true
&#9;&#9;else 
&#9;&#9;&#9;Tool.Enabled = true 
&#9;&#9;end 
&#9;else &#9;&#9;
&#9;&#9;local base = myCatapult:FindFirstChild(&quot;Base&quot;) 
&#9;&#9;if base then&#9;&#9;&#9;
&#9;&#9;&#9;local distance = (myTorso.Position - base.Position).magnitude
&#9;&#9;&#9;print(distance)
&#9;&#9;&#9;if distance &lt; 12 then
&#9;&#9;&#9;&#9;Tool.Enabled = false
&#9;&#9;&#9;&#9;-- Shoot warrocks
&#9;&#9;&#9;&#9;coroutine.resume(coroutine.create(function() 
&#9;&#9;&#9;&#9;&#9;if myCatapult and myCatapult:FindFirstChild(&quot;Base&quot;) then 
&#9;&#9;&#9;&#9;&#9;&#9;local base = myCatapult.Base 
&#9;&#9;&#9;&#9;&#9;&#9;local lWeld = base:FindFirstChild(&quot;LauncherWeld&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;if lWeld then 
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local frames = 9&#9;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local initCFrame = lWeld.C1 
&#9;&#9;&#9;&#9;&#9;&#9;&#9;while frames &gt; 0 do 
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if frames &lt; 5 then 
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- snap back
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;lWeld.C1 = lWeld.C1 * CFrame.Angles(math.pi/16, 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else 
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;lWeld.C1 = lWeld.C1 * CFrame.Angles(-math.pi/20, 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end 
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;frames = frames - 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;wait(0.15)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end 
&#9;&#9;&#9;&#9;&#9;&#9;&#9;lWeld.C1 = initCFrame
&#9;&#9;&#9;&#9;&#9;&#9;end &#9;
&#9;&#9;&#9;&#9;&#9;end 
&#9;&#9;&#9;&#9;end)) 
&#9;&#9;&#9;&#9;local target = myHumanoid.TargetPoint
&#9;&#9;&#9;&#9;wait(0.90)&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;local direction = (target - myTorso.Position)
&#9;&#9;&#9;&#9;local distance = (target - myTorso.Position).magnitude
&#9;&#9;&#9;&#9;shoot(target, direction, distance) 
&#9;&#9;&#9;&#9;wait(3.0) 
&#9;&#9;&#9;&#9;Tool.Enabled = true
&#9;&#9;&#9;end 
&#9;&#9;end 
&#9;end 
end 

function onEquipped()
&#9;vCharacter = Tool.Parent 
&#9;myTorso = vCharacter:FindFirstChild(&quot;Torso&quot;)
&#9;myHumanoid = vCharacter:FindFirstChild(&quot;Humanoid&quot;)
&#9;vPlayer = game.Players:GetPlayerFromCharacter(vCharacter)
&#9;
&#9;Catapult.Mesh.Scale = Vector3.new(0.5, 0.5, 0.5)
&#9;Tool.GripForward = Vector3.new(0, 1, 0)
&#9;Tool.GripPos = Vector3.new(0, -0.4, -1)
&#9;Tool.GripRight = Vector3.new(1, 0, 0)
&#9;Tool.GripUp = Vector3.new(0, 0, 1)
end

function onUnequipped()
&#9;destroyCatapult()
&#9;catapultHealth = 600
end 

Tool.Activated:connect(onActivated)
Tool.Equipped:connect(onEquipped)
Tool.Unequipped:connect(onUnequipped)

local breakIt = Tool:FindFirstChild(&quot;BreakCatapult&quot;)
while breakIt == nil do 
&#9;breakIt = Tool:FindFirstChild(&quot;BreakCatapult&quot;)
end 

breakIt.Changed:connect(function()
&#9;if breakIt and breakIt.Value == true and catapultActive and myCatapult and myCatapult:FindFirstChild(&quot;Base&quot;) then 
&#9;&#9;if catapultWeld then catapultWeld:Remove() end 
&#9;&#9;wait(0.35)
&#9;&#9;myCatapult.Base.CFrame = myCatapult.Base.CFrame + Vector3.new(1, 3.5, 0)
&#9;&#9;myCatapult.Base.Anchored = true
&#9;&#9;wait(0.6)
&#9;&#9;myCatapult.Base.Anchored = false 
&#9;&#9;if myCatapult then myCatapult:BreakJoints() end 
&#9;&#9;if myTorso and myTorso:FindFirstChild(&quot;CatapultWeld&quot;) then 
&#9;&#9;&#9;myTorso.CatapultWeld:Remove()
&#9;&#9;end

&#9;&#9;debris:AddItem(myCatapult, 3)&#9;&#9;&#9;&#9;
&#9;&#9;catapultActive = false 
&#9;&#9;if myHumanoid then
&#9;&#9;&#9;myHumanoid.WalkSpeed = 16
&#9;&#9;&#9;local ratio = myHumanoid.Health/myHumanoid.MaxHealth
&#9;&#9;&#9;myHumanoid.Health = ratio * 100 
&#9;&#9;&#9;myHumanoid.MaxHealth = 100
&#9;&#9;end 

&#9;&#9;if jumpConnection then jumpConnection:disconnect() end 
&#9;&#9;if runningConnection then runningConnection:disconnect() end

&#9;&#9;local players = game.Players:GetChildren()
&#9;&#9;for i = 1, #players do
&#9;&#9;&#9;if players[i] and players[i].Character and players[i].Character:FindFirstChild(&quot;Humanoid&quot;) and players[i].Character:FindFirstChild(&quot;Torso&quot;) and players[i] ~= vPlayer then 
&#9;&#9;&#9;&#9;local torso = players[i].Character.Torso 
&#9;&#9;&#9;&#9;local humanoid = players[i].Character.Humanoid 
&#9;&#9;&#9;&#9;local distance = (torso.Position - myTorso.Position).magnitude
&#9;&#9;&#9;&#9;if distance &lt; 12 then 
&#9;&#9;&#9;&#9;&#9;humanoid.Sit = true 
&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(40)
&#9;&#9;&#9;&#9;end 
&#9;&#9;&#9;end 
&#9;&#9;end 

&#9;&#9;Catapult.Transparency = 0.0
&#9;&#9;
&#9;&#9;wait(9.0)
&#9;&#9;breakIt.Value = false &#9;&#9;
&#9;else 
&#9;&#9;wait(5.0)
&#9;&#9;breakIt.Value = false 
&#9;end 
end) 
</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX5">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">BreakScript</string>
				<ProtectedString name="Source">local Tool = script.Parent
local Catapult = Tool.Handle

local vCharacter 
local myTorso 
local myHumanoid

local breakAnim

function breakIt(key)
&#9;if key:lower() == &quot;q&quot; then 
&#9;&#9;local breakC = Tool:FindFirstChild(&quot;BreakCatapult&quot;)
&#9;&#9;if breakC and breakC.Value == false then 
&#9;&#9;&#9;breakAnim = myHumanoid:LoadAnimation(Tool.BreakAnim)
&#9;&#9;&#9;if breakAnim then breakAnim:Play() end 
&#9;&#9;&#9;breakC.Value = true 
&#9;&#9;end
&#9;end 
end 

function onEquipped(mouse)
&#9;if mouse then 
&#9;&#9;vCharacter = Tool.Parent 
&#9;&#9;myTorso = vCharacter:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;myHumanoid = vCharacter:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;mouse.KeyDown:connect(breakIt) 
&#9;end 
end 

function onUnequipped()
&#9;if breakAnim then breakAnim:Stop() end
end 

Tool.Equipped:connect(onEquipped)
Tool.Unequipped:connect(onUnequipped)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="BoolValue" referent="RBX6">
			<Properties>
				<string name="Name">BreakCatapult</string>
				<bool name="Value">false</bool>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX7">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=69968304</url></Content>
				<string name="Name">BreakAnim</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX8">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>1.00222015</X>
					<Y>12.4640179</Y>
					<Z>-22.3085728</Z>
					<R00>0.21759209</R00>
					<R01>0.312921584</R01>
					<R02>-0.924518108</R02>
					<R10>-0</R10>
					<R11>0.94721365</R11>
					<R12>0.320603281</R12>
					<R20>0.976039886</R20>
					<R21>-0.0697607398</R21>
					<R22>0.206106141</R22>
				</CoordinateFrame>
				<CoordinateFrame name="Focus">
					<X>10.3713217</X>
					<Y>9.2150116</Y>
					<Z>-24.3972607</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>