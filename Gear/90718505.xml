<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.5</Y>
				<Z>0.5</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">ExponentialRocketLauncher</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=90780503</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.300000012</X>
					<Y>0</Y>
					<Z>-0.200000003</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.569999993</X>
					<Y>0.970000029</Y>
					<Z>2.41000009</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=90780700</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=90780623</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBX3">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-0.300000012</X>
						<Y>0.0189999994</Y>
						<Z>-1.18000007</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<token name="Material">256</token>
					<string name="Name">MotherRocket</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">3</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>0.25</X>
						<Y>0.25</Y>
						<Z>0.75</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX4">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=90780825</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
						<Content name="TextureId"><url>http://www.roblox.com/asset/?id=90780623</url></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Part" referent="RBX5">
					<Properties>
						<bool name="Anchored">false</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<int name="BrickColor">194</int>
						<CoordinateFrame name="CFrame">
							<X>-0.300000012</X>
							<Y>0.0189999994</Y>
							<Z>-1.28000009</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">false</bool>
						<float name="Elasticity">0.5</float>
						<float name="Friction">0.300000012</float>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">true</bool>
						<token name="Material">256</token>
						<string name="Name">ChildRocket</string>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">1</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="formFactorRaw">3</token>
						<token name="shape">1</token>
						<Vector3 name="size">
							<X>0.200000003</X>
							<Y>0.200000003</Y>
							<Z>0.400000006</Z>
						</Vector3>
					</Properties>
					<Item class="SpecialMesh" referent="RBX6">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><url>http://www.roblox.com/asset/?id=90780672</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
							<Content name="TextureId"><url>http://www.roblox.com/asset/?id=90780623</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Script" referent="RBX7">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">ChildRocket</string>
							<ProtectedString name="Source">--------------------
--| WaitForChild |--
--------------------

-- Waits for parent.child to exist then returns it
local function WaitForChild(parent, childName)
&#9;assert(parent, &quot;ERROR: WaitForChild: parent is nil&quot;)
&#9;while not parent:FindFirstChild(childName) do parent.ChildAdded:wait() end
&#9;return parent[childName]
end

------------------------------
--| Customizable Variables |--
------------------------------

local BlastRadius = 8 -- Blast radius of the explosion
local BlastDamage = 75 -- Amount of damage done to players
local BlastForce = 1000 -- Amount of force applied to parts
local TimeUntilDrop = 6

-- Rocket will fly through things named these
local RocketIgnoreList = {rocket = 1, handle = 1, effect = 1, water = 1} --NOTE: Keys must be lowercase, values must evaluate to true

-----------------------
--| Other Variables |--
-----------------------

local DebrisService = Game:GetService(&apos;Debris&apos;)
local PlayersService = Game:GetService(&apos;Players&apos;)

local ChildRocket = script.Parent
local CreatorTag = WaitForChild(ChildRocket, &apos;creator&apos;)
local MyPlayer = CreatorTag.Value

local Exploded = false

-----------------------
--| Local Functions |--
-----------------------

-- Removes any old creator tags and applies a new one to the specified target
local function ApplyTags(target)
&#9;while target:FindFirstChild(&apos;creator&apos;) do
&#9;&#9;target.creator:Destroy()
&#9;end
&#9;local tagClone = CreatorTag:Clone()
&#9;tagClone.Parent = target
&#9;DebrisService:AddItem(tagClone, 1.5)
end

-- Simulates explosive effects but doesn&apos;t affect teammates
local function OnExplosionHit(hitPart, hitDistance, blastCenter)
&#9;if hitPart and hitDistance then
&#9;&#9;local humanoid = nil
&#9;&#9;if hitPart.Parent and hitPart.Parent:FindFirstChild(&apos;Humanoid&apos;) then
&#9;&#9;&#9;humanoid = hitPart.Parent.Humanoid

&#9;&#9;&#9;-- Don&apos;t hurt self
&#9;&#9;&#9;if humanoid.Parent == MyPlayer.Character then return end

&#9;&#9;&#9;if not MyPlayer.Neutral then -- Ignore teammates caught in the blast
&#9;&#9;&#9;&#9;local player = PlayersService:GetPlayerFromCharacter(hitPart.Parent)
&#9;&#9;&#9;&#9;if player and player ~= MyPlayer and player.TeamColor == MyPlayer.TeamColor then
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if hitPart.Name == &apos;Torso&apos; and humanoid.Health &gt; 0 then -- Tag and damage the victim
&#9;&#9;&#9;&#9;ApplyTags(humanoid)
&#9;&#9;&#9;&#9;humanoid:TakeDamage(BlastDamage)
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;-- Loose parts and dead parts get blasted
&#9;&#9;if not humanoid or humanoid.Health &lt;= 0 then
&#9;&#9;&#9;if hitPart.Name ~= &apos;Handle&apos; then
&#9;&#9;&#9;&#9;hitPart:BreakJoints()
&#9;&#9;&#9;&#9;local blastForce = Instance.new(&apos;BodyForce&apos;, hitPart)
&#9;&#9;&#9;&#9;blastForce.force = (hitPart.Position - blastCenter).unit * BlastForce * hitPart:GetMass()
&#9;&#9;&#9;&#9;DebrisService:AddItem(blastForce, 0.1)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

local function OnTouched(otherPart)
&#9;if otherPart and not otherPart:IsDescendantOf(MyPlayer.Character) and not RocketIgnoreList[string.lower(otherPart.Name)] then
&#9;&#9;-- Fly through other players on my team
&#9;&#9;if not MyPlayer.Neutral and otherPart.Parent and otherPart.Parent:IsA(&apos;Model&apos;) then
&#9;&#9;&#9;local player = PlayersService:GetPlayerFromCharacter(otherPart.Parent)
&#9;&#9;&#9;if player and player ~= MyPlayer and player.TeamColor == MyPlayer.TeamColor then
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;Exploded = true

&#9;&#9;-- Create the explosion
&#9;&#9;local explosion = Instance.new(&apos;Explosion&apos;)
&#9;&#9;explosion.BlastPressure = 0 -- Completely safe explosion
&#9;&#9;explosion.BlastRadius = BlastRadius
&#9;&#9;explosion.Position = ChildRocket.Position
&#9;&#9;explosion.ExplosionType = Enum.ExplosionType.NoCraters
&#9;&#9;explosion.Parent = Workspace

&#9;&#9;-- Connect custom logic for the explosion
&#9;&#9;explosion.Hit:connect(function(hitPart, hitDistance) OnExplosionHit(hitPart, hitDistance, explosion.Position) end)

&#9;&#9;if ChildRocket:FindFirstChild(&apos;Boom&apos;) then
&#9;&#9;&#9;print(&quot;&quot;)
&#9;&#9;&#9;ChildRocket.Boom:Play()
&#9;&#9;end

&#9;&#9;-- Hide the rocket so it can keep running the connection but not be seen/heard

&#9;&#9;if ChildRocket:FindFirstChild(&apos;Fire&apos;) then
&#9;&#9;&#9;ChildRocket.Fire:Destroy()
&#9;&#9;end

&#9;&#9;if ChildRocket:FindFirstChild(&apos;Swoosh&apos;) then
&#9;&#9;&#9;ChildRocket.Swoosh:Stop()
&#9;&#9;end

&#9;&#9;ChildRocket.Transparency = 1
&#9;&#9;ChildRocket.Anchored = true
&#9;&#9;DebrisService:AddItem(ChildRocket, 3)
&#9;end
end

--------------------
--| Script Logic |--
--------------------

ChildRocket.Touched:connect(OnTouched)

wait(TimeUntilDrop)

if not Exploded then
&#9;-- Out of fuel
&#9;if ChildRocket:FindFirstChild(&apos;Fire&apos;) then
&#9;&#9;ChildRocket.Fire:Destroy()
&#9;end
&#9;ChildRocket.Velocity = ChildRocket.Velocity / 2

&#9;if ChildRocket:FindFirstChild(&apos;Swoosh&apos;) then
&#9;&#9;ChildRocket.Swoosh:Stop()
&#9;end

&#9;-- Drop this empty shell
&#9;if ChildRocket:FindFirstChild(&apos;Antigravity&apos;) then
&#9;&#9;ChildRocket.Antigravity.force = ChildRocket.Antigravity.force / 2
&#9;end
end
</ProtectedString>
						</Properties>
					</Item>
					<Item class="Script" referent="RBX8">
						<Properties>
							<bool name="Disabled">false</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">PermaWeld</string>
							<ProtectedString name="Source">-- Waits for parent.child to exist then returns it
local function WaitForChild(parent, childName)
&#9;assert(parent, &quot;ERROR: WaitForChild: parent is nil&quot;)
&#9;while not parent:FindFirstChild(childName) do parent.ChildAdded:wait() end
&#9;return parent[childName]
end

local Weld = WaitForChild(script, &apos;ChildToMother&apos;)

local function FindCharacterAncestor(subject)
&#9;if subject and subject ~= Workspace then
&#9;&#9;if subject:FindFirstChild(&apos;Humanoid&apos;) then
&#9;&#9;&#9;return subject
&#9;&#9;else
&#9;&#9;&#9;return FindCharacterAncestor(subject.Parent)
&#9;&#9;end
&#9;end
&#9;return nil
end

if Weld and Weld:IsA(&apos;JointInstance&apos;) then
&#9;local originalParent = Weld.Parent
&#9;local characterAncestor = FindCharacterAncestor(originalParent)
&#9;Weld.AncestryChanged:connect(function(child, parent)
&#9;&#9;if child == Weld and parent ~= originalParent then
&#9;&#9;&#9;if characterAncestor and characterAncestor.Humanoid.Health &lt;= 0 then return end
&#9;&#9;&#9;wait(0) -- Have to wait for the parent to finish being set
&#9;&#9;&#9;Weld.Parent = originalParent
&#9;&#9;end
&#9;end)
end
</ProtectedString>
						</Properties>
						<Item class="Weld" referent="RBX9">
							<Properties>
								<CoordinateFrame name="C0">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<CoordinateFrame name="C1">
									<X>0</X>
									<Y>0</Y>
									<Z>-0.100000001</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<string name="Name">ChildToMother</string>
								<Ref name="Part0">RBX5</Ref>
								<Ref name="Part1">RBX3</Ref>
							</Properties>
						</Item>
					</Item>
					<Item class="Sound" referent="RBX10">
						<Properties>
							<bool name="Looped">false</bool>
							<string name="Name">Boom</string>
							<float name="Pitch">1</float>
							<bool name="PlayOnRemove">false</bool>
							<Content name="SoundId"><url>rbxasset://sounds/collide.wav</url></Content>
							<float name="Volume">1</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Sound" referent="RBX11">
					<Properties>
						<bool name="Looped">false</bool>
						<string name="Name">Boom</string>
						<float name="Pitch">1</float>
						<bool name="PlayOnRemove">false</bool>
						<Content name="SoundId"><url>rbxasset://sounds/collide.wav</url></Content>
						<float name="Volume">1</float>
					</Properties>
				</Item>
				<Item class="Script" referent="RBX12">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">MotherRocket</string>
						<ProtectedString name="Source">--------------------
--| WaitForChild |--
--------------------

-- Waits for parent.child to exist then returns it
local function WaitForChild(parent, childName)
&#9;assert(parent, &quot;ERROR: WaitForChild: parent is nil&quot;)
&#9;while not parent:FindFirstChild(childName) do parent.ChildAdded:wait() end
&#9;return parent[childName]
end

------------------------------
--| Customizable Variables |--
------------------------------

local BlastRadius = 8 -- Blast radius of the explosion
local BlastDamage = 90 -- Amount of damage done to players
local BlastForce = 1500 -- Amount of force applied to parts
local TimeUntilSplit = 0.75
local RocketSpeed = 100 -- Speed of the spawned ChildRockets

-- Rocket will fly through things named these
local RocketIgnoreList = {rocket = 1, handle = 1, effect = 1, water = 1} --NOTE: Keys must be lowercase, values must evaluate to true

-- Offsets for the spawn positions of new rockets, list size determines how many are spawned
local SpawnOffsets = {Vector3.new(-1, 1, 0), Vector3.new(1, 1, 0), Vector3.new(0, -1, 0)}

-----------------------
--| Other Variables |--
-----------------------

local DebrisService = Game:GetService(&apos;Debris&apos;)
local PlayersService = Game:GetService(&apos;Players&apos;)

local MotherRocket = script.Parent
local ChildRocket = WaitForChild(MotherRocket, &apos;ChildRocket&apos;)
local CreatorTag = WaitForChild(MotherRocket, &apos;creator&apos;)
local MyPlayer = CreatorTag.Value

local Exploded = false

-----------------------
--| Local Functions |--
-----------------------

-- Removes any old creator tags and applies a new one to the specified target
local function ApplyTags(target)
&#9;while target:FindFirstChild(&apos;creator&apos;) do
&#9;&#9;target.creator:Destroy()
&#9;end
&#9;local tagClone = CreatorTag:Clone()
&#9;tagClone.Parent = target
&#9;DebrisService:AddItem(tagClone, 1.5)
end

-- Simulates explosive effects but doesn&apos;t affect teammates
local function OnExplosionHit(hitPart, hitDistance, blastCenter)
&#9;if hitPart and hitDistance and not RocketIgnoreList[string.lower(hitPart.Name)] then
&#9;&#9;local humanoid = nil
&#9;&#9;if hitPart.Parent and hitPart.Parent:FindFirstChild(&apos;Humanoid&apos;) then
&#9;&#9;&#9;humanoid = hitPart.Parent.Humanoid

&#9;&#9;&#9;-- Don&apos;t hurt self
&#9;&#9;&#9;if humanoid.Parent == MyPlayer.Character then return end

&#9;&#9;&#9;if not MyPlayer.Neutral then -- Ignore teammates caught in the blast
&#9;&#9;&#9;&#9;local player = PlayersService:GetPlayerFromCharacter(hitPart.Parent)
&#9;&#9;&#9;&#9;if player and player.TeamColor == MyPlayer.TeamColor then
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if hitPart.Name == &apos;Torso&apos; and humanoid.Health &gt; 0 then -- Tag and damage the victim
&#9;&#9;&#9;&#9;ApplyTags(humanoid)
&#9;&#9;&#9;&#9;humanoid:TakeDamage(BlastDamage)
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;-- Loose parts and dead parts get blasted
&#9;&#9;if not humanoid or humanoid.Health &lt;= 0 then
&#9;&#9;&#9;if hitPart.Name ~= &apos;Handle&apos; then
&#9;&#9;&#9;&#9;hitPart:BreakJoints()
&#9;&#9;&#9;&#9;local blastForce = Instance.new(&apos;BodyForce&apos;, hitPart)
&#9;&#9;&#9;&#9;blastForce.force = (hitPart.Position - blastCenter).unit * BlastForce * hitPart:GetMass()
&#9;&#9;&#9;&#9;DebrisService:AddItem(blastForce, 0.1)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

local function OnTouched(otherPart)
&#9;if otherPart and not otherPart:IsDescendantOf(MyPlayer.Character) and not RocketIgnoreList[string.lower(otherPart.Name)] then
&#9;&#9;-- Fly through other players on my team
&#9;&#9;if not MyPlayer.Neutral and otherPart.Parent and otherPart.Parent:IsA(&apos;Model&apos;) then
&#9;&#9;&#9;local player = PlayersService:GetPlayerFromCharacter(otherPart.Parent)
&#9;&#9;&#9;if player and player ~= MyPlayer and player.TeamColor == MyPlayer.TeamColor then
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;Exploded = true

&#9;&#9;-- Create the explosion
&#9;&#9;local explosion = Instance.new(&apos;Explosion&apos;)
&#9;&#9;explosion.BlastPressure = 0 -- Completely safe explosion
&#9;&#9;explosion.BlastRadius = BlastRadius
&#9;&#9;explosion.Position = MotherRocket.Position
&#9;&#9;explosion.ExplosionType = Enum.ExplosionType.NoCraters
&#9;&#9;explosion.Parent = Workspace

&#9;&#9;-- Connect custom logic for the explosion
&#9;&#9;explosion.Hit:connect(function(hitPart, hitDistance) OnExplosionHit(hitPart, hitDistance, explosion.Position) end)

&#9;&#9;if MotherRocket:FindFirstChild(&apos;Boom&apos;) then
&#9;&#9;&#9;MotherRocket.Boom:Play()
&#9;&#9;end

&#9;&#9;-- Hide the rocket so it can keep running the connection but not be seen/heard

&#9;&#9;if MotherRocket:FindFirstChild(&apos;Fire&apos;) then
&#9;&#9;&#9;MotherRocket.Fire:Destroy()
&#9;&#9;end

&#9;&#9;if MotherRocket:FindFirstChild(&apos;Swoosh&apos;) then
&#9;&#9;&#9;MotherRocket.Swoosh:Stop()
&#9;&#9;end

&#9;&#9;MotherRocket.Transparency = 1
&#9;&#9;MotherRocket.Anchored = true
&#9;&#9;DebrisService:AddItem(MotherRocket, 3)
&#9;end
end

--------------------
--| Script Logic |--
--------------------

MotherRocket.Touched:connect(OnTouched)

wait(TimeUntilSplit)

if not Exploded then
&#9;-- Spawn ChildRockets
&#9;for i = 1, #SpawnOffsets do
&#9;&#9;local childClone = ChildRocket:Clone()
&#9;&#9;DebrisService:AddItem(childClone, 30)
&#9;&#9;childClone.Name = &apos;Rocket&apos;

&#9;&#9;local tagClone = CreatorTag:Clone()
&#9;&#9;tagClone.Parent = childClone

&#9;&#9;childClone.Transparency = 0

&#9;&#9;-- Add fire
&#9;&#9;local fire = Instance.new(&apos;Fire&apos;, childClone)
&#9;&#9;fire.Heat = 5
&#9;&#9;fire.Size = 2

&#9;&#9;-- Add antigravity
&#9;&#9;local bodyForce = Instance.new(&apos;BodyForce&apos;, childClone)
&#9;&#9;bodyForce.Name = &apos;Antigravity&apos;
&#9;&#9;bodyForce.force = Vector3.new(0, childClone:GetMass() * 196.2, 0)

&#9;&#9;childClone.Position = MotherRocket.Position + MotherRocket.CFrame:vectorToObjectSpace(SpawnOffsets[i])
&#9;&#9;childClone.Parent = Workspace

&#9;&#9;childClone.Velocity = childClone.CFrame.lookVector * RocketSpeed
&#9;&#9;childClone.RotVelocity = Vector3.new(0, 0, 0)

&#9;&#9;-- Add sound
&#9;&#9;if MotherRocket:FindFirstChild(&apos;Swoosh&apos;) then
&#9;&#9;&#9;local swooshClone = MotherRocket.Swoosh:Clone()
&#9;&#9;&#9;swooshClone.Parent = childClone
&#9;&#9;&#9;wait(0)
&#9;&#9;&#9;if swooshClone then swooshClone:Play() end
&#9;&#9;end

&#9;&#9;local childScript = WaitForChild(childClone, &apos;ChildRocket&apos;)
&#9;&#9;childScript.Disabled = false
&#9;end

&#9;-- Out of fuel
&#9;if MotherRocket:FindFirstChild(&apos;Fire&apos;) then
&#9;&#9;MotherRocket.Fire:Destroy()
&#9;end
&#9;MotherRocket.Velocity = MotherRocket.Velocity / 2

&#9;if MotherRocket:FindFirstChild(&apos;Swoosh&apos;) then
&#9;&#9;MotherRocket.Swoosh:Stop()
&#9;end

&#9;-- Drop this empty shell
&#9;if MotherRocket:FindFirstChild(&apos;Antigravity&apos;) then
&#9;&#9;MotherRocket.Antigravity.force = MotherRocket.Antigravity.force / 2
&#9;end
end
</ProtectedString>
					</Properties>
				</Item>
				<Item class="Script" referent="RBX13">
					<Properties>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">PermaWeld</string>
						<ProtectedString name="Source">-- Waits for parent.child to exist then returns it
local function WaitForChild(parent, childName)
&#9;assert(parent, &quot;ERROR: WaitForChild: parent is nil&quot;)
&#9;while not parent:FindFirstChild(childName) do parent.ChildAdded:wait() end
&#9;return parent[childName]
end

local Weld = WaitForChild(script, &apos;MotherToHandle&apos;)

local function FindCharacterAncestor(subject)
&#9;if subject and subject ~= Workspace then
&#9;&#9;if subject:FindFirstChild(&apos;Humanoid&apos;) then
&#9;&#9;&#9;return subject
&#9;&#9;else
&#9;&#9;&#9;return FindCharacterAncestor(subject.Parent)
&#9;&#9;end
&#9;end
&#9;return nil
end

if Weld and Weld:IsA(&apos;JointInstance&apos;) then
&#9;local originalParent = Weld.Parent
&#9;local characterAncestor = FindCharacterAncestor(originalParent)
&#9;Weld.AncestryChanged:connect(function(child, parent)
&#9;&#9;if child == Weld and parent ~= originalParent then
&#9;&#9;&#9;if characterAncestor and characterAncestor.Humanoid.Health &lt;= 0 then return end
&#9;&#9;&#9;wait(0) -- Have to wait for the parent to finish being set
&#9;&#9;&#9;Weld.Parent = originalParent
&#9;&#9;end
&#9;end)
end
</ProtectedString>
					</Properties>
					<Item class="Weld" referent="RBX14">
						<Properties>
							<CoordinateFrame name="C0">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<CoordinateFrame name="C1">
								<X>0</X>
								<Y>0.0189999994</Y>
								<Z>-0.980000019</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<string name="Name">MotherToHandle</string>
							<Ref name="Part0">RBX3</Ref>
							<Ref name="Part1">RBX1</Ref>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Sound" referent="RBX15">
				<Properties>
					<bool name="Looped">true</bool>
					<string name="Name">Swoosh</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/Rocket whoosh 01.wav</url></Content>
					<float name="Volume">0.699999988</float>
				</Properties>
			</Item>
			<Item class="ObjectValue" referent="RBX16">
				<Properties>
					<string name="Name">creator</string>
					<Ref name="Value">null</Ref>
				</Properties>
				<Item class="StringValue" referent="RBX17">
					<Properties>
						<string name="Name">icon</string>
						<string name="Value"></string>
					</Properties>
				</Item>
			</Item>
			<Item class="Script" referent="RBX18">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">FirstRocket</string>
					<ProtectedString name="Source">--------------------
--| WaitForChild |--
--------------------

-- Waits for parent.child to exist then returns it
local function WaitForChild(parent, childName)
&#9;assert(parent, &quot;ERROR: WaitForChild: parent is nil&quot;)
&#9;while not parent:FindFirstChild(childName) do parent.ChildAdded:wait() end
&#9;return parent[childName]
end

------------------------------
--| Customizable Variables |--
------------------------------

local BlastRadius = 10 -- Blast radius of the explosion
local BlastDamage = 300 -- Amount of damage done to players
local BlastForce = 2000 -- Amount of force applied to parts
local TimeUntilSplit = 0.75
local RocketSpeed = 75 -- Speed of the spawned MotherRockets

-- Rocket will fly through things named these
local RocketIgnoreList = {rocket = 1, handle = 1, effect = 1, water = 1} --NOTE: Keys must be lowercase, values must evaluate to true

-- Offsets for the spawn positions of new rockets, list size determines how many are spawned
local SpawnOffsets = {Vector3.new(-3, 3, 0), Vector3.new(3, 3, 0), Vector3.new(0, -3, 0)}

-----------------------
--| Other Variables |--
-----------------------

local DebrisService = Game:GetService(&apos;Debris&apos;)
local PlayersService = Game:GetService(&apos;Players&apos;)

local FirstRocket = script.Parent
local CreatorTag = WaitForChild(FirstRocket, &apos;creator&apos;)
local MyPlayer = CreatorTag.Value

local Exploded = false

-----------------------
--| Local Functions |--
-----------------------

-- Removes any old creator tags and applies a new one to the specified target
local function ApplyTags(target)
&#9;while target:FindFirstChild(&apos;creator&apos;) do
&#9;&#9;target.creator:Destroy()
&#9;end
&#9;local tagClone = CreatorTag:Clone()
&#9;tagClone.Parent = target
&#9;DebrisService:AddItem(tagClone, 1.5)
end

-- Simulates explosive effects but doesn&apos;t affect teammates
local function OnExplosionHit(hitPart, hitDistance, blastCenter)
&#9;if hitPart and hitDistance and not RocketIgnoreList[string.lower(hitPart.Name)] then
&#9;&#9;local humanoid = nil
&#9;&#9;if hitPart.Parent and hitPart.Parent:FindFirstChild(&apos;Humanoid&apos;) then
&#9;&#9;&#9;humanoid = hitPart.Parent.Humanoid

&#9;&#9;&#9;-- Don&apos;t hurt self
&#9;&#9;&#9;if humanoid.Parent == MyPlayer.Character then return end

&#9;&#9;&#9;if not MyPlayer.Neutral then -- Ignore teammates caught in the blast
&#9;&#9;&#9;&#9;local player = PlayersService:GetPlayerFromCharacter(hitPart.Parent)
&#9;&#9;&#9;&#9;if player and player ~= MyPlayer and player.TeamColor == MyPlayer.TeamColor then
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if hitPart.Name == &apos;Torso&apos; and humanoid.Health &gt; 0 then -- Tag and damage the victim
&#9;&#9;&#9;&#9;ApplyTags(humanoid)
&#9;&#9;&#9;&#9;humanoid:TakeDamage(BlastDamage)
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;-- Loose parts and dead parts get blasted
&#9;&#9;if not humanoid or humanoid.Health &lt;= 0 then
&#9;&#9;&#9;if hitPart.Name ~= &apos;Handle&apos; then
&#9;&#9;&#9;&#9;hitPart:BreakJoints()
&#9;&#9;&#9;&#9;local blastForce = Instance.new(&apos;BodyForce&apos;, hitPart)
&#9;&#9;&#9;&#9;blastForce.force = (hitPart.Position - blastCenter).unit * BlastForce * hitPart:GetMass()
&#9;&#9;&#9;&#9;DebrisService:AddItem(blastForce, 0.1)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

local function OnTouched(otherPart)
&#9;if otherPart and not otherPart:IsDescendantOf(MyPlayer.Character) and not RocketIgnoreList[string.lower(otherPart.Name)] then
&#9;&#9;-- Fly through other players on my team
&#9;&#9;if not MyPlayer.Neutral and otherPart.Parent and otherPart.Parent:IsA(&apos;Model&apos;) then
&#9;&#9;&#9;local player = PlayersService:GetPlayerFromCharacter(otherPart.Parent)
&#9;&#9;&#9;if player and player ~= MyPlayer and player.TeamColor == MyPlayer.TeamColor then
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;Exploded = true

&#9;&#9;-- Create the explosion
&#9;&#9;local explosion = Instance.new(&apos;Explosion&apos;)
&#9;&#9;explosion.BlastPressure = 0 -- Completely safe explosion
&#9;&#9;explosion.BlastRadius = BlastRadius
&#9;&#9;explosion.Position = FirstRocket.Position
&#9;&#9;explosion.ExplosionType = Enum.ExplosionType.NoCraters
&#9;&#9;explosion.Parent = Workspace

&#9;&#9;-- Connect custom logic for the explosion
&#9;&#9;explosion.Hit:connect(function(hitPart, hitDistance) OnExplosionHit(hitPart, hitDistance, explosion.Position) end)

&#9;&#9;if FirstRocket:FindFirstChild(&apos;Boom&apos;) then
&#9;&#9;&#9;FirstRocket.Boom:Play()
&#9;&#9;end

&#9;&#9;-- Hide the rocket so it can keep running the connection but not be seen/heard

&#9;&#9;if FirstRocket:FindFirstChild(&apos;Fire&apos;) then
&#9;&#9;&#9;FirstRocket.Fire:Destroy()
&#9;&#9;end

&#9;&#9;if FirstRocket:FindFirstChild(&apos;Swoosh&apos;) then
&#9;&#9;&#9;FirstRocket.Swoosh:Stop()
&#9;&#9;end

&#9;&#9;FirstRocket.Transparency = 1
&#9;&#9;FirstRocket.Anchored = true
&#9;&#9;DebrisService:AddItem(FirstRocket, 3)
&#9;end
end

--------------------
--| Script Logic |--
--------------------

FirstRocket.Touched:connect(OnTouched)

wait(TimeUntilSplit)

if not Exploded then
&#9;-- Spawn MotherRockets
&#9;for i = 1, #SpawnOffsets do
&#9;&#9;local motherClone = FirstRocket:Clone()
&#9;&#9;DebrisService:AddItem(motherClone, 30)
&#9;&#9;motherClone.Name = &apos;Rocket&apos;

&#9;&#9;local thisScript = WaitForChild(motherClone, script.Name)
&#9;&#9;thisScript.Disabled = true

&#9;&#9;motherClone.Position = FirstRocket.Position + FirstRocket.CFrame:vectorToObjectSpace(SpawnOffsets[i])
&#9;&#9;motherClone.Parent = Workspace

&#9;&#9;motherClone.Velocity = motherClone.CFrame.lookVector * RocketSpeed
&#9;&#9;motherClone.RotVelocity = Vector3.new(0, 0, 0)

&#9;&#9;wait(0)
&#9;&#9;if motherClone:FindFirstChild(&apos;Swoosh&apos;) then
&#9;&#9;&#9;motherClone.Swoosh:Play()
&#9;&#9;end

&#9;&#9;local motherScript = WaitForChild(motherClone, &apos;MotherRocket&apos;)
&#9;&#9;motherScript.Disabled = false
&#9;end

&#9;-- Out of fuel
&#9;if FirstRocket:FindFirstChild(&apos;Fire&apos;) then
&#9;&#9;FirstRocket.Fire:Destroy()
&#9;end
&#9;FirstRocket.Velocity = FirstRocket.Velocity / 2

&#9;if FirstRocket:FindFirstChild(&apos;Swoosh&apos;) then
&#9;&#9;FirstRocket.Swoosh:Stop()
&#9;end

&#9;-- Drop this empty shell
&#9;if FirstRocket:FindFirstChild(&apos;Antigravity&apos;) then
&#9;&#9;FirstRocket.Antigravity.force = FirstRocket.Antigravity.force / 2
&#9;end
end
</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX19">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">GunCursor</string>
				<ProtectedString name="Source">local Tool = script.Parent

local StillEquipped = false

function onEquippedLocal(mouse)
&#9;StillEquipped = true

&#9;if not mouse then return end

&#9;while StillEquipped do
&#9;&#9;mouse.Icon = &apos;rbxasset://textures/GunCursor.png&apos;
&#9;&#9;while Tool.Enabled and StillEquipped do
&#9;&#9;&#9;wait(0.01)
&#9;&#9;end
&#9;&#9;mouse.Icon = &apos;rbxasset://textures/GunWaitCursor.png&apos;
&#9;&#9;while not Tool.Enabled and StillEquipped do
&#9;&#9;&#9;wait(0.01)
&#9;&#9;end
&#9;end
end

function onUnequippedLocal()
&#9;StillEquipped = false
end

Tool.Equipped:connect(onEquippedLocal)
Tool.Unequipped:connect(onUnequippedLocal)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX20">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">ExponentialRocketLauncher</string>
				<ProtectedString name="Source">--------------------
--| WaitForChild |--
--------------------

-- Waits for parent.child to exist then returns it
local function WaitForChild(parent, childName)
&#9;assert(parent, &quot;ERROR: WaitForChild: parent is nil&quot;)
&#9;while not parent:FindFirstChild(childName) do parent.ChildAdded:wait() end
&#9;return parent[childName]
end

------------------------------
--| Customizable Variables |--
------------------------------

local Cooldown = 3 -- Seconds until tool can be used again
local RocketSpeed = 75 -- Speed of the first rocket

-----------------------
--| Other Variables |--
-----------------------

local DebrisService = Game:GetService(&apos;Debris&apos;)
local PlayersService = Game:GetService(&apos;Players&apos;)

local Tool = script.Parent
local ToolHandle = Tool.Handle
local MotherRocket = WaitForChild(ToolHandle, &apos;MotherRocket&apos;)
local ChildRocket = WaitForChild(MotherRocket, &apos;ChildRocket&apos;)
local FirstRocketScript = WaitForChild(ToolHandle, &apos;FirstRocket&apos;)
local CreatorTag = WaitForChild(ToolHandle, &apos;creator&apos;)
local IconTag = WaitForChild(CreatorTag, &apos;icon&apos;)

local MyModel = nil
local MyPlayer = nil

-----------------------
--| Local Functions |--
-----------------------

local function OnEquipped()
&#9;MyModel = Tool.Parent
&#9;MyPlayer = PlayersService:GetPlayerFromCharacter(MyModel)
&#9;CreatorTag.Value = MyPlayer
end

local function OnActivated()
&#9;if not Tool.Enabled or not MyModel or not MyModel:FindFirstChild(&apos;Humanoid&apos;) then return end
&#9;Tool.Enabled = false

&#9;-- Clone the rocket part
&#9;local rocket = MotherRocket:Clone()
&#9;MotherRocket.Transparency = 1
&#9;DebrisService:AddItem(rocket, 30)
&#9;rocket.Name = &quot;Rocket&quot;

&#9;-- Add the tag
&#9;local tagClone = CreatorTag:Clone()
&#9;tagClone.Parent = rocket

&#9;-- Add fire
&#9;local fire = Instance.new(&apos;Fire&apos;, rocket)
&#9;fire.Heat = 5
&#9;fire.Size = 2

&#9;-- Add antigravity
&#9;local bodyForce = Instance.new(&apos;BodyForce&apos;, rocket)
&#9;bodyForce.Name = &apos;Antigravity&apos;
&#9;bodyForce.force = Vector3.new(0, (MotherRocket:GetMass() + ChildRocket:GetMass()) * 196.2, 0)

&#9;-- Arm the rocket with the FirstRocket script
&#9;local firstScriptClone = FirstRocketScript:Clone()
&#9;firstScriptClone.Parent = rocket
&#9;firstScriptClone.Disabled = false

&#9;-- Position the whole setup
&#9;rocket.CFrame = CFrame.new(rocket.CFrame.p, MyModel.Humanoid.TargetPoint) --NOTE: This must be set before assigning Parent
&#9;rocket.Parent = Workspace

&#9;-- Add sound
&#9;if ToolHandle:FindFirstChild(&apos;Swoosh&apos;) then
&#9;&#9;local swooshClone = ToolHandle.Swoosh:Clone()
&#9;&#9;swooshClone.Parent = rocket
&#9;&#9;wait(0)
&#9;&#9;if swooshClone then swooshClone:Play() end
&#9;end

&#9;-- Launch!
&#9;rocket.Velocity = rocket.CFrame.lookVector * RocketSpeed
&#9;rocket.RotVelocity = Vector3.new(0, 0, 0)

&#9;wait(Cooldown)

&#9;MotherRocket.Transparency = 0
&#9;Tool.Enabled = true
end

--------------------
--| Script Logic |--
--------------------

IconTag.Value = Tool.TextureId

Tool.Equipped:connect(OnEquipped)
Tool.Activated:connect(OnActivated)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX21">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-2.19076967</X>
					<Y>-0.16978164</Y>
					<Z>-1.85938656</Z>
					<R00>-0.659621298</R00>
					<R01>-0.0506100506</R01>
					<R02>-0.749892294</R02>
					<R10>-3.72529074e-009</R10>
					<R11>0.997730374</R11>
					<R12>-0.0673365667</R12>
					<R20>0.751598239</R20>
					<R21>-0.0444166288</R21>
					<R22>-0.658124149</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-0.300000012</X>
					<Y>0</Y>
					<Z>-0.200000048</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>