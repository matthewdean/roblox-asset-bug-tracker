<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXA24B8B03A5A943149DF7D0EF7CD850AB">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>0.200000003</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">CloakOfTheUndyingBat</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=94819016</url></Content>
			<string name="ToolTip">Double jump to turn into a bat!</string>
		</Properties>
		<Item class="Part" referent="RBXF64D72C8E78140CAA7A5BDE4ED87CF41">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-5.42277002</X>
					<Y>14.8123617</Y>
					<Z>22.6460571</Z>
					<R00>-0.945199311</R00>
					<R01>-4.40127157e-010</R01>
					<R02>-0.326493829</R02>
					<R10>0.0067749992</R10>
					<R11>0.999785542</R11>
					<R12>-0.0196136348</R12>
					<R20>0.326423347</R20>
					<R21>-0.0207507927</R21>
					<R22>-0.944996595</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.519999981</X>
					<Y>1.75</Y>
					<Z>0.610000014</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX4B81047E84A0409398D444243BB0DDD1">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=94821092</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=94820224</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="Weld" referent="RBXCBFE283254B74B35ABD1E7D15C83A05F">
					<Properties>
						<CoordinateFrame name="C0">
							<X>-1.50000012</X>
							<Y>-3.48521185</Y>
							<Z>1.62766361</Z>
							<R00>-1</R00>
							<R01>-1.56545444e-014</R01>
							<R02>-1.76876954e-015</R02>
							<R10>-1.56878769e-014</R10>
							<R11>0.999784708</R11>
							<R12>0.0207507778</R12>
							<R20>1.44354447e-015</R20>
							<R21>0.0207507778</R21>
							<R22>-0.999784708</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>-0.292753339</X>
							<Y>-3.44794989</Y>
							<Z>1.51336002</Z>
							<R00>-1</R00>
							<R01>-1.56545444e-014</R01>
							<R02>-1.76876954e-015</R02>
							<R10>-1.56878769e-014</R10>
							<R11>0.999784708</R11>
							<R12>0.0207507778</R12>
							<R20>1.44354447e-015</R20>
							<R21>0.0207507778</R21>
							<R22>-0.999784708</R22>
						</CoordinateFrame>
						<string name="Name">Weld</string>
						<Ref name="Part0">RBXF64D72C8E78140CAA7A5BDE4ED87CF41</Ref>
						<Ref name="Part1">RBXE38A8D941EDF4BB2BF596FEE3AD0092F</Ref>
					</Properties>
				</Item>
				<Item class="Weld" referent="RBXD9F1D2CA2E294452BA3C20B21EF0C10C">
					<Properties>
						<CoordinateFrame name="C0">
							<X>-1.50000012</X>
							<Y>-3.48521185</Y>
							<Z>1.62766361</Z>
							<R00>-1</R00>
							<R01>-1.56545444e-014</R01>
							<R02>-1.76876954e-015</R02>
							<R10>-1.56878769e-014</R10>
							<R11>0.999784708</R11>
							<R12>0.0207507778</R12>
							<R20>1.44354447e-015</R20>
							<R21>0.0207507778</R21>
							<R22>-0.999784708</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>-2.70700026</X>
							<Y>-3.44821048</Y>
							<Z>1.51766682</Z>
							<R00>-1</R00>
							<R01>-1.56545444e-014</R01>
							<R02>-1.76876954e-015</R02>
							<R10>-1.56878769e-014</R10>
							<R11>0.999784708</R11>
							<R12>0.0207507778</R12>
							<R20>1.44354447e-015</R20>
							<R21>0.0207507778</R21>
							<R22>-0.999784708</R22>
						</CoordinateFrame>
						<string name="Name">Weld</string>
						<Ref name="Part0">RBXF64D72C8E78140CAA7A5BDE4ED87CF41</Ref>
						<Ref name="Part1">RBXCA2F1A5217BA420A937605A87E70EABF</Ref>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBXE38A8D941EDF4BB2BF596FEE3AD0092F">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-4.31900072</X>
						<Y>14.7646875</Y>
						<Z>22.1447411</Z>
						<R00>-0.945199311</R00>
						<R01>-4.40127212e-010</R01>
						<R02>-0.326493859</R02>
						<R10>0.0067749992</R10>
						<R11>0.999785662</R11>
						<R12>-0.0196136367</R12>
						<R20>0.326423347</R20>
						<R21>-0.0207507946</R21>
						<R22>-0.944996715</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<token name="Material">256</token>
					<string name="Name">Left Wing</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">3</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>2.25</X>
						<Y>1.57000005</Y>
						<Z>0.200000003</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBXB4B11469873E45309C461A1177E5604B">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=94821113</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
						<Content name="TextureId"><url>http://www.roblox.com/asset/?id=94820224</url></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBXCA2F1A5217BA420A937605A87E70EABF">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-6.5995388</X>
						<Y>14.7813883</Y>
						<Z>22.9368706</Z>
						<R00>-0.945199311</R00>
						<R01>-4.40127101e-010</R01>
						<R02>-0.3264938</R02>
						<R10>0.0067749992</R10>
						<R11>0.999785423</R11>
						<R12>-0.0196136329</R12>
						<R20>0.326423347</R20>
						<R21>-0.0207507908</R21>
						<R22>-0.944996476</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<token name="Material">256</token>
					<string name="Name">Right Wing</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">3</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>2.25</X>
						<Y>1.57000005</Y>
						<Z>0.200000003</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBXC0C1CDD1CD0A4033A7612D9EFE94DF80">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=94821133</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
						<Content name="TextureId"><url>http://www.roblox.com/asset/?id=94820224</url></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Sound" referent="RBX32C11AE898A746C1B84DA08A8F0E7F92">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Base</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=94912586</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXDF1EAA01F6F54500BD5DE7A291A66613">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">WindBreath</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=94888779</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX71CAD26B9E26490B98B61A97B9AF6B08">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Squeak1</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=94899284</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX7D2E0D0221AE4189AC300886490D86FC">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Squeak2</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=94888905</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXF5B5F90293B2450F97A488D6E7ABCD75">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Squeak3</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=94888934</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX1CFCC3B407C54C6A8DA4F403DDD1C854">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">WindSqueak</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=94889839</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBX44922619257C4D30AD0CD1DDADFD4AD5">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=167272039</url></Content>
				<string name="Name">Idle</string>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX7DA03EE813DB429AA2DB68630B7D6F11">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-4.76140738</X>
					<Y>13.6983137</Y>
					<Z>19.9889774</Z>
					<R00>-0.945199311</R00>
					<R01>-0.00677500153</R01>
					<R02>-0.326423526</R02>
					<R10>0.0067749992</R10>
					<R11>0.99916333</R11>
					<R12>-0.040355742</R12>
					<R20>0.326423347</R20>
					<R21>-0.040355742</R21>
					<R22>-0.944362581</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">DisplayPart</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>0.200000003</Y>
					<Z>0.200000003</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXCC7C8B1F026846C88A90A77F7D4783EF">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=94820260</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.5</X>
						<Y>1.5</Y>
						<Z>1.5</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=94820166</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Weld" referent="RBX1FD6F6E120DD4D2BB1E3148667C2A786">
				<Properties>
					<CoordinateFrame name="C0">
						<X>-1.50000012</X>
						<Y>-3.48521185</Y>
						<Z>1.62766361</Z>
						<R00>-1</R00>
						<R01>-1.56545444e-014</R01>
						<R02>-1.76876954e-015</R02>
						<R10>-1.56878769e-014</R10>
						<R11>0.999784708</R11>
						<R12>0.0207507778</R12>
						<R20>1.44354447e-015</R20>
						<R21>0.0207507778</R21>
						<R22>-0.999784708</R22>
					</CoordinateFrame>
					<CoordinateFrame name="C1">
						<X>8.42324521e-022</X>
						<Y>-2.44031978</Y>
						<Z>-0.638683319</Z>
						<R00>-1</R00>
						<R01>-2.80774857e-022</R01>
						<R02>6.32483461e-021</R02>
						<R10>-2.80774857e-022</R10>
						<R11>1</R11>
						<R12>3.66728586e-022</R12>
						<R20>-6.32483461e-021</R20>
						<R21>3.66728586e-022</R21>
						<R22>-1</R22>
					</CoordinateFrame>
					<string name="Name">DisplayWeld</string>
					<Ref name="Part0">RBXF64D72C8E78140CAA7A5BDE4ED87CF41</Ref>
					<Ref name="Part1">RBX7DA03EE813DB429AA2DB68630B7D6F11</Ref>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBXD5D87479E3F34EB0989E0E9A0B959AE0">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
StarterGui = game:GetService(&quot;StarterGui&quot;)
ContentProvider = game:GetService(&quot;ContentProvider&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Animations = {}
InteractiveConnections = {}

Directions = {
&#9;Left = false,
&#9;Right = false,
&#9;Up = false,
&#9;Down = false,
&#9;Forward = false,
&#9;Backward = false
}

Equipped = false

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ClientControl.OnClientInvoke = (function(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;elseif Mode == &quot;Preload&quot; and Value then
&#9;&#9;ContentProvider:Preload(Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;elseif Mode == &quot;DisableJump&quot; then
&#9;&#9;DisableJump(Value)
&#9;elseif Mode == &quot;RequestCamera&quot; and Value then
&#9;&#9;local PropertyValue = nil
&#9;&#9;pcall(function()
&#9;&#9;&#9;PropertyValue = Camera[Value]
&#9;&#9;end)
&#9;&#9;return PropertyValue
&#9;elseif Mode == &quot;SetCamera&quot; and Value then
&#9;&#9;local Success = false
&#9;&#9;pcall(function()
&#9;&#9;&#9;Camera[Value.Property] = Value.Value
&#9;&#9;&#9;Success = true
&#9;&#9;end)
&#9;&#9;return Success
&#9;elseif Mode == &quot;SetCoreGuiEnabled&quot; and Value then
&#9;&#9;StarterGui:SetCoreGuiEnabled(Value.Enum, Value.Boolean)
&#9;elseif Mode == &quot;FunctionBat&quot; and Value then
&#9;&#9;Spawn(function()
&#9;&#9;&#9;FunctionBat(Value)
&#9;&#9;end)
&#9;end
end)

function InvokeServer(Mode, Value)
&#9;local ServerReturn = nil
&#9;pcall(function()
&#9;&#9;ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;end)
&#9;return ServerReturn
end

function KeyPress(Value)
&#9;local Key = Value.Key
&#9;local Down = Value.Down
&#9;if Key == &quot;w&quot; or Key == &quot;&#17;&quot; then
&#9;&#9;Directions.Forward = Down
&#9;elseif Key == &quot;s&quot; or Key == &quot;&#18;&quot; then
&#9;&#9;Directions.Backward = Down
&#9;elseif Key == &quot;a&quot; or Key == &quot;&#20;&quot; then
&#9;&#9;Directions.Left = Down
&#9;elseif Key == &quot;d&quot; or Key == &quot;&#19;&quot; then
&#9;&#9;Directions.Right = Down
&#9;elseif Key == &quot;e&quot; then
&#9;&#9;Directions.Up = Down
&#9;elseif Key == &quot;q&quot; then
&#9;&#9;Directions.Down = Down
&#9;elseif Key == &quot; &quot; and Down then
&#9;&#9;local CheckEquipped = InvokeServer(&quot;CheckEquipped&quot;)
&#9;&#9;if CheckEquipped then
&#9;&#9;&#9;InvokeServer(&quot;Transform&quot;)
&#9;&#9;end
&#9;end
end

function FunctionBat(BatBody)
&#9;if not BatBody then
&#9;&#9;return
&#9;end
&#9;local Consistency = 0.0001
&#9;local BatMoveFactor = 1.8
&#9;local TargetPoint = Vector3.new(0, 0, 0)
&#9;TargetPoint = Torso.Position
&#9;while BatBody and BatBody.Parent and BatBody.Parent.Parent == Character and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 do
&#9;&#9;local CoordinateFrame = Camera.CoordinateFrame
&#9;&#9;local CameraLookVector = CoordinateFrame.lookVector
&#9;&#9;local BatCFrame = CFrame.new(Torso.Position, Torso.Position + CameraLookVector)
&#9;&#9;local ForwardVector = BatCFrame.lookVector
&#9;&#9;local UpVector = BatCFrame:vectorToWorldSpace(Vector3.new(0, 1, 0))
&#9;&#9;local RightVector = ForwardVector:Cross(UpVector)
&#9;&#9;local MoveVector = Vector3.new(0, 0, 0)
&#9;&#9;if Directions.Forward then
&#9;&#9;&#9;MoveVector = (MoveVector + ForwardVector)
&#9;&#9;end
&#9;&#9;if Directions.Backward then
&#9;&#9;&#9;MoveVector = (MoveVector - ForwardVector)
&#9;&#9;end
&#9;&#9;if Directions.Left then
&#9;&#9;&#9;MoveVector = (MoveVector - RightVector)
&#9;&#9;end
&#9;&#9;if Directions.Right then
&#9;&#9;&#9;MoveVector = (MoveVector + RightVector)
&#9;&#9;end
&#9;&#9;if Directions.Up then
&#9;&#9;&#9;MoveVector = (MoveVector + UpVector)
&#9;&#9;end
&#9;&#9;if Directions.Down then
&#9;&#9;&#9;MoveVector = (MoveVector - UpVector)
&#9;&#9;end
&#9;&#9;TargetPoint = (TargetPoint + (MoveVector * BatMoveFactor))
&#9;&#9;BatCFrame = BatCFrame - Torso.Position + Torso.Position:Lerp(TargetPoint, 0.25)
&#9;&#9;Torso.CFrame = BatCFrame
&#9;&#9;Spawn(function()
&#9;&#9;&#9;local TemporaryTorso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;&#9;InvokeServer(&quot;CFramePart&quot;, {Part = TemporaryTorso, CFrame = BatCFrame})
&#9;&#9;end)
&#9;&#9;wait(Consistency)
&#9;end
&#9;for i, v in pairs(Directions) do
&#9;&#9;Directions[i] = false
&#9;end
&#9;if not Equipped then
&#9;&#9;for i, v in pairs(InteractiveConnections) do
&#9;&#9;&#9;if v then
&#9;&#9;&#9;&#9;v:disconnect()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;InteractiveConnections = {}
&#9;end
end

function DisableJump(Boolean)
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;if Boolean then
&#9;&#9;PreventJump = Humanoid.Changed:connect(function(Property)
&#9;&#9;&#9;if Property ==  &quot;Jump&quot; then
&#9;&#9;&#9;&#9;Humanoid.Jump = false
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;for i, v in pairs(InteractiveConnections) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;InteractiveConnections = {}
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;Button1Click&quot;, {Down = true})
&#9;end)
&#9;Mouse.Button1Up:connect(function()
&#9;&#9;InvokeServer(&quot;Button1Click&quot;, {Down = false})
&#9;end)
&#9;Mouse.Button2Down:connect(function()
&#9;&#9;InvokeServer(&quot;Button2Click&quot;, {Down = true})
&#9;end)
&#9;Mouse.Button2Up:connect(function()
&#9;&#9;InvokeServer(&quot;Button2Click&quot;, {Down = false})
&#9;end)
&#9;local KeyDown = PlayerMouse.KeyDown:connect(function(Key)
&#9;&#9;KeyPress({Key = Key, Down = true})
&#9;end)
&#9;local KeyUp = PlayerMouse.KeyUp:connect(function(Key)
&#9;&#9;KeyPress({Key = Key, Down = false})
&#9;end)
&#9;for i, v in pairs({KeyDown, KeyUp}) do
&#9;&#9;table.insert(InteractiveConnections, v)
&#9;end
&#9;Equipped = true
end

function Unequipped()
&#9;Equipped = false
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX75865F91E07F4F558F918343D5B55425">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

GearModule = require(172349822)

RbxUtility = GearModule.RbxUtility

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)
InsertService = game:GetService(&quot;InsertService&quot;)
ContentProvider = game:GetService(&quot;ContentProvider&quot;)

CharacterMonitor = script:WaitForChild(&quot;CharacterMonitor&quot;)
CFramePart = script:WaitForChild(&quot;CFramePart&quot;)

Display = Tool:FindFirstChild(&quot;DisplayPart&quot;)
GearModule.Destroy(Display)

BatModel = InsertService:LoadAsset(167116921)
Bat = BatModel:GetChildren()[1]:Clone()
GearModule.Destroy(BatModel)

BaseUrl = ContentProvider.BaseUrl

Cloak = GearModule.BasePart:Clone()
Cloak.Name = &quot;Cloak&quot;
Cloak.CanCollide = false
CloakMesh = RbxUtility.Create(&quot;SpecialMesh&quot;){
&#9;MeshType = Enum.MeshType.FileMesh,
&#9;MeshId = (BaseUrl .. &quot;asset/?id=94820260&quot;),
&#9;TextureId = (BaseUrl .. &quot;asset/?id=94820166&quot;),
&#9;Scale = Vector3.new(1.5, 1.5, 1.5),
&#9;Parent = Cloak
}

CloakFloatTime = 1
TouchDamage = 4

HeadWelds = {}
Clothing = {}
Limbs = {}
Motors = {}
TemporaryMotors = {}
OriginalLimbsResized = {}

Equip = false
Active = false
Transforming = false
Died = false

JumpTick = 0
Jumps = 0
JumpTime = 0.25
JumpsRequired = 2

ConsistentPlayerVariables = {
&#9;Player = nil,
&#9;Backpack = nil,
&#9;Character = nil,
&#9;Humanoid = nil,
&#9;Head = nil,
&#9;Torso = nil
}

Animations = {
&#9;Idle = {Animation = Tool:WaitForChild(&quot;Idle&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil}
}

Sounds = {
&#9;Base = Handle:WaitForChild(&quot;Base&quot;),
&#9;WindBreath = Handle:WaitForChild(&quot;WindBreath&quot;),
&#9;WindSqueak = Handle:WaitForChild(&quot;WindSqueak&quot;),
&#9;Squeak1 = Handle:WaitForChild(&quot;Squeak1&quot;),
&#9;Squeak2 = Handle:WaitForChild(&quot;Squeak2&quot;),
&#9;Squeak3 = Handle:WaitForChild(&quot;Squeak3&quot;)
}

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or RbxUtility.Create(&quot;RemoteFunction&quot;){
&#9;Name = &quot;ServerControl&quot;,
&#9;Parent = Tool
})

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or RbxUtility.Create(&quot;RemoteFunction&quot;){
&#9;Name = &quot;ClientControl&quot;,
&#9;Parent = Tool
})

ServerControl.OnServerInvoke = (function(player, Mode, Value)
&#9;if GearModule.CheckExistence({Player, player}) and player == Player then
&#9;&#9;if Mode == &quot;Button1Click&quot; and Value then
&#9;&#9;&#9;InvokeClient(&quot;PlaySound&quot;, Sounds.Base)
&#9;&#9;&#9;SuperJump()
&#9;&#9;elseif Mode == &quot;Transform&quot; then
&#9;&#9;&#9;if not Transforming then
&#9;&#9;&#9;&#9;if GearModule.CheckExistence(BatClone) and BatClone.Parent == ConsistentPlayerVariables.Character and CheckIfAlive(true) then
&#9;&#9;&#9;&#9;&#9;Untransform()
&#9;&#9;&#9;&#9;elseif Equipped and not Active and GearModule.CheckExistence(Character) and CheckIfAlive(false) then
&#9;&#9;&#9;&#9;&#9;if (tick() - JumpTick) &lt;= JumpTime or JumpTick == 0 then
&#9;&#9;&#9;&#9;&#9;&#9;JumpTick = tick()
&#9;&#9;&#9;&#9;&#9;&#9;Jumps = Jumps + 1
&#9;&#9;&#9;&#9;&#9;&#9;if Jumps &gt;= JumpsRequired then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;JumpTick = 0
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Jumps = 0
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Transform()
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;JumpTick = tick()
&#9;&#9;&#9;&#9;&#9;&#9;Jumps = 1
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;elseif Mode == &quot;CFramePart&quot; and Value then
&#9;&#9;&#9;for i, v in pairs(Players:GetChildren()) do
&#9;&#9;&#9;&#9;if v:IsA(&quot;Player&quot;) and v ~= ConsistentPlayerVariables.Player then
&#9;&#9;&#9;&#9;&#9;local CFramePartClone = CFramePart:Clone()
&#9;&#9;&#9;&#9;&#9;local PartValue = Instance.new(&quot;ObjectValue&quot;)
&#9;&#9;&#9;&#9;&#9;PartValue.Name = &quot;PartValue&quot;
&#9;&#9;&#9;&#9;&#9;PartValue.Value = Value.Part
&#9;&#9;&#9;&#9;&#9;PartValue.Parent = CFramePartClone
&#9;&#9;&#9;&#9;&#9;local CFrameValue = Instance.new(&quot;CFrameValue&quot;)
&#9;&#9;&#9;&#9;&#9;CFrameValue.Name = &quot;CFrameValue&quot;
&#9;&#9;&#9;&#9;&#9;CFrameValue.Value = Value.CFrame
&#9;&#9;&#9;&#9;&#9;CFrameValue.Parent = CFramePartClone
&#9;&#9;&#9;&#9;&#9;CFramePartClone.Disabled = false
&#9;&#9;&#9;&#9;&#9;local PlayerBackpack = v:FindFirstChild(&quot;Backpack&quot;)
&#9;&#9;&#9;&#9;&#9;local PlayerCharacter = v.Character
&#9;&#9;&#9;&#9;&#9;CFramePartClone.Parent = ((PlayerBackpack and PlayerBackpack) or (PlayerCharacter and PlayerCharacter))
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;return true
&#9;&#9;elseif Mode == &quot;CheckEquipped&quot; then
&#9;&#9;&#9;if (GearModule.CheckExistence(BatClone) and BatClone.Parent == ConsistentPlayerVariables.Character) or Equip then
&#9;&#9;&#9;&#9;return true
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;return false
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end)

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(((ConsistentPlayerVariables.Player and ConsistentPlayerVariables.Player) or Player), Mode, Value)
&#9;end)
&#9;return ClientReturn
end

function GetAllObjects(Parent, Classes)
&#9;local Objects = {}
&#9;local function GetObjects(Parent, Classes)
&#9;&#9;for i, v in pairs(Parent:GetChildren()) do
&#9;&#9;&#9;if GearModule.CheckInstanceClass(v, Classes) then
&#9;&#9;&#9;&#9;table.insert(Objects, v)
&#9;&#9;&#9;end
&#9;&#9;&#9;GetObjects(v, Classes)
&#9;&#9;end
&#9;end
&#9;GetObjects(Parent, Classes)
&#9;return Objects
end

function SuperJump()
&#9;if (not GearModule.CheckExistence(BatClone) or BatClone.Parent ~= Character) and not GearModule.CheckExistence(CloakAntiGravity) then
&#9;&#9;CloakAntiGravity = Instance.new(&quot;BodyForce&quot;)
&#9;&#9;CloakAntiGravity.Name = &quot;CloakAntiGravity&quot;
&#9;&#9;CloakAntiGravity.force = Vector3.new(0, (GearModule.GetTotalMass(Character) * GearModule.Gravity), 0)
&#9;&#9;GearModule.Destroy({ChildAddedConnection, ChildRemovedConnection})
&#9;&#9;ChildAddedConnection = Character.ChildRemoved:connect(function()
&#9;&#9;&#9;CloakAntiGravity.force = Vector3.new(0, (GearModule.GetTotalMass(Character) * GearModule.Gravity), 0)
&#9;&#9;end)
&#9;&#9;ChildRemovedConnection = Character.ChildAdded:connect(function()
&#9;&#9;&#9;CloakAntiGravity.force = Vector3.new(0, (GearModule.GetTotalMass(Character) * GearModule.Gravity), 0)
&#9;&#9;end)
&#9;&#9;CloakAntiGravity.Parent = Torso
&#9;&#9;Debris:AddItem(CloakAntiGravity, CloakFloatTime)
&#9;&#9;Delay(CloakFloatTime, function()
&#9;&#9;&#9;GearModule.Destroy({ChildAddedConnection, ChildRemovedConnection})
&#9;&#9;end)
&#9;end
end

function BatTouched(Hit)
&#9;if GearModule.CheckExistence(Hit) and Hit.Parent ~= ConsistentPlayerVariables.Character and Hit.Parent ~= BatClone then
&#9;&#9;local humanoid = Hit.Parent:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;if humanoid then
&#9;&#9;&#9;GearModule.UntagHumanoid(humanoid)
&#9;&#9;&#9;GearModule.TagHumanoid(humanoid, ConsistentPlayerVariables.Player)
&#9;&#9;&#9;humanoid:TakeDamage(TouchDamage)
&#9;&#9;end
&#9;end
end

function MakeTransparent(Parent, Transparency)
&#9;for i, v in pairs(Parent:GetChildren()) do
&#9;&#9;if v ~= BatClone and v ~= Tool then
&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;if v ~= ConsistentPlayerVariables.HumanoidRootPart then
&#9;&#9;&#9;&#9;&#9;v.Transparency = Transparency
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;&#9;MakeTransparent(v, Transparency)
&#9;&#9;end
&#9;end
end

function Die()
&#9;if not GearModule.CheckExistence(ConsistentPlayerVariables.Character) or Died then
&#9;&#9;return
&#9;end
&#9;Died = true
&#9;if GearModule.CheckExistence(ConsistentPlayerVariables.Humanoid) then
&#9;&#9;ConsistentPlayerVariables.Humanoid.Health = 0
&#9;end
&#9;ConsistentPlayerVariables.Character:BreakJoints()
end

function FunctionBat()
&#9;local Consistency = 0.0001
&#9;local Waiting = false
&#9;local WingsDown = true
&#9;local LastWingAngle = 0
&#9;local LastRandomSqueakTime = 0
&#9;local function IsClose(A, B, Epsilon)
&#9;&#9;Epsilon = (Epsilon or 0.01)
&#9;&#9;return (A &lt;= (B + Epsilon) and (A &gt;= (B - Epsilon)))
&#9;end
&#9;if not CheckIfAlive(true) then
&#9;&#9;return
&#9;end
&#9;while GearModule.CheckExistence(BatClone) and BatClone.Parent == ConsistentPlayerVariables.Character and Active do
&#9;&#9;if not CheckIfAlive(true) or not GearModule.CheckExistence({BatClone, BatBody, BatWeld, LeftShoulder, RightShoulder}) then
&#9;&#9;&#9;Die()
&#9;&#9;&#9;break
&#9;&#9;end
&#9;&#9;if not Waiting then
&#9;&#9;&#9;local Angle = ((WingsDown and 0.5) or -0.4)
&#9;&#9;&#9;LeftShoulder.DesiredAngle = Angle
&#9;&#9;&#9;RightShoulder.DesiredAngle = Angle
&#9;&#9;&#9;for i, v in pairs({LeftShoulder, RightShoulder}) do
&#9;&#9;&#9;&#9;v.MaxVelocity = 0.075
&#9;&#9;&#9;end
&#9;&#9;&#9;LastWingAngle = Angle
&#9;&#9;&#9;Waiting = true
&#9;&#9;else
&#9;&#9;&#9;if IsClose(LeftShoulder.CurrentAngle, LastWingAngle) or IsClose(RightShoulder.CurrentAngle, LastWingAngle) then
&#9;&#9;&#9;&#9;WingsDown = not WingsDown
&#9;&#9;&#9;&#9;Waiting = false
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local Now = time()
&#9;&#9;if (Now - LastRandomSqueakTime) &gt; 1 and math.random() &lt; 0.1 then
&#9;&#9;&#9;if #SqueakSounds &gt; 0 then
&#9;&#9;&#9;&#9;InvokeClient(&quot;PlaySound&quot;, SqueakSounds[math.random(1, #SqueakSounds)])
&#9;&#9;&#9;&#9;LastRandomSqueakTime = Now
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;wait(Consistency)
&#9;end
end


function Transform()
&#9;
&#9;Transforming = true

&#9;InvokeClient(&quot;SetCoreGuiEnabled&quot;, {Enum = Enum.CoreGuiType.Backpack, Boolean = false})
&#9;
&#9;ConsistentPlayerVariables.Player = Player
&#9;ConsistentPlayerVariables.Backpack = Backpack
&#9;ConsistentPlayerVariables.Character = Character
&#9;ConsistentPlayerVariables.Humanoid = Humanoid
&#9;ConsistentPlayerVariables.Head = Head
&#9;ConsistentPlayerVariables.Torso = Torso
&#9;ConsistentPlayerVariables.HumanoidRootPart = HumanoidRootPart
&#9;
&#9;BatClone = Bat:Clone()
&#9;BatBody = BatClone:FindFirstChild(&quot;Torso&quot;)
&#9;LeftShoulder = BatBody:FindFirstChild(&quot;Left Shoulder&quot;)
&#9;RightShoulder = BatBody:FindFirstChild(&quot;Right Shoulder&quot;)
&#9;
&#9;InvokeClient(&quot;SetCamera&quot;, {Property = &quot;CameraType&quot;, Value = Enum.CameraType.Follow})
&#9;InvokeClient(&quot;SetCamera&quot;, {Property = &quot;CameraSubject&quot;, Value = BatBody})
&#9;
&#9;for i, v in pairs({Sounds.WindSqueak, Sounds.Squeak1, Sounds.Squeak2, Sounds.Squeak3}) do
&#9;&#9;local Sound = v:Clone()
&#9;&#9;Sound.Parent = BatBody
&#9;end
&#9;
&#9;SqueakSounds = {BatBody:FindFirstChild(&quot;Squeak1&quot;), BatBody:FindFirstChild(&quot;Squeak2&quot;), BatBody:FindFirstChild(&quot;Squeak3&quot;)}
&#9;
&#9;local WindSqueak = BatBody:FindFirstChild(Sounds.WindSqueak.Name)
&#9;if WindSqueak then
&#9;&#9;InvokeClient(&quot;PlaySound&quot;, WindSqueak)
&#9;end
&#9;
&#9;if not CheckIfAlive(true) or not BatClone or not BatBody or not LeftShoulder or not RightShoulder then
&#9;&#9;return
&#9;end
&#9;
&#9;MakeTransparent(ConsistentPlayerVariables.Character, 1)
&#9;GearModule.Destroy(CloakClone)
&#9;
&#9;local CharacterMonitorClone = game:GetService(&quot;Workspace&quot;):FindFirstChild(ConsistentPlayerVariables.Player.Name .. CharacterMonitor.Name)
&#9;GearModule.Destroy(CharacterMonitorClone)
&#9;
&#9;CharacterMonitorClone = CharacterMonitor:Clone()
&#9;CharacterMonitorClone.Name = (ConsistentPlayerVariables.Player.Name .. CharacterMonitor.Name)
&#9;
&#9;local CreatorValue = RbxUtility.Create(&quot;ObjectValue&quot;){
&#9;&#9;Name = &quot;Creator&quot;,
&#9;&#9;Value = ConsistentPlayerVariables.Player,
&#9;&#9;Parent = CharacterMonitorClone
&#9;}
&#9;
&#9;local ModelValue = RbxUtility.Create(&quot;ObjectValue&quot;){
&#9;&#9;Name = &quot;Model&quot;,
&#9;&#9;Value = BatClone,
&#9;&#9;Parent = CharacterMonitorClone
&#9;}
&#9;
&#9;local ToolValue = RbxUtility.Create(&quot;ObjectValue&quot;){
&#9;&#9;Name = &quot;Tool&quot;,
&#9;&#9;Value = Tool,
&#9;&#9;Parent = CharacterMonitorClone
&#9;}
&#9;&#9;
&#9;CharacterMonitorClone.Disabled = false
&#9;CharacterMonitorClone.Parent = game:GetService(&quot;Workspace&quot;)
&#9;
&#9;BatBody.Anchored = true
&#9;for i, v in pairs(BatClone:GetChildren()) do
&#9;&#9;if v:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;v.Touched:connect(BatTouched)
&#9;&#9;end
&#9;end
&#9;
&#9;for i, v in pairs(ConsistentPlayerVariables.Head:GetChildren()) do
&#9;&#9;if v:IsA(&quot;Weld&quot;) and v.Name == &quot;HeadWeld&quot; then
&#9;&#9;&#9;if v.Part0 and v.Part1 and v.Part0 == ConsistentPlayerVariables.Head and v.Part1.Name == &quot;Handle&quot; and v.Part1.Parent:IsA(&quot;Hat&quot;) then
&#9;&#9;&#9;&#9;table.insert(HeadWelds, {Hat = v.Part1.Parent:Clone(), Weld = {Part0 = v.Part0, Part1 = v.Part1, C0 = v.C0, C1 = v.C1}})
&#9;&#9;&#9;&#9;GearModule.Destroy({v, v.Part1.Parent})
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;GearModule.Destroy(v)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;
&#9;local TemporaryClothing = GetAllObjects(ConsistentPlayerVariables.Character, {&quot;Decal&quot;, &quot;Texture&quot;})
&#9;for i, v in pairs(TemporaryClothing) do
&#9;&#9;table.insert(Clothing, {Object = v:Clone(), Parent = v.Parent})
&#9;&#9;GearModule.Destroy(v)
&#9;end&#9;
&#9;
&#9;for i, v in pairs(ConsistentPlayerVariables.Torso:GetChildren()) do
&#9;&#9;if v:IsA(&quot;JointInstance&quot;) and v:IsA(&quot;Motor&quot;) and v.Part0 and v.Part1 and v.Part0 == ConsistentPlayerVariables.Torso and v.Part1 ~= ConsistentPlayerVariables.Head then
&#9;&#9;&#9;table.insert(Limbs, {Limb = {Part = v.Part1:Clone(), Parent = v.Part1.Parent}, Motor = {Name = v.Name, MaxVelocity = v.MaxVelocity, Part0 = v.Part0, Part1 = v.Part1, C0 = v.C0, C1 = v.C1, Parent = v.Parent}})
&#9;&#9;&#9;GearModule.Destroy(v.Part1)
&#9;&#9;end
&#9;end
&#9;
&#9;local LimbsResized = {}
&#9;for i, v in pairs({ConsistentPlayerVariables.Torso, ConsistentPlayerVariables.HumanoidRootPart}) do
&#9;&#9;for ii, vv in pairs(v:GetChildren()) do
&#9;&#9;&#9;if vv:IsA(&quot;JointInstance&quot;) and vv:IsA(&quot;Motor&quot;) and vv.Part0 and vv.Part1 then
&#9;&#9;&#9;&#9;table.insert(Motors, {Name = vv.Name, MaxVelocity = vv.MaxVelocity, Part0 = vv.Part0, Part0Size = vv.Part0.Size, Part1 = vv.Part1, Part1Size = vv.Part1.Size, C0 = vv.C0, C1 = vv.C1, Parent = v})
&#9;&#9;&#9;&#9;local Motor = RbxUtility.Create(&quot;Motor6D&quot;){
&#9;&#9;&#9;&#9;&#9;Name = vv.Name,
&#9;&#9;&#9;&#9;&#9;MaxVelocity = 0,
&#9;&#9;&#9;&#9;&#9;C0 = CFrame.new(0, 0, 0),
&#9;&#9;&#9;&#9;&#9;C1 = CFrame.new(0, 0, 0),
&#9;&#9;&#9;&#9;&#9;Part0 = vv.Part0,
&#9;&#9;&#9;&#9;&#9;Part1 = vv.Part1,
&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;for iii, vvv in pairs({vv.Part0, vv.Part1}) do
&#9;&#9;&#9;&#9;&#9;if not GearModule.CheckTableForInstance(LimbsResized, vvv) then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(LimbsResized, vvv)
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(OriginalLimbsResized, {Limb = vvv, Size = vvv.Size})
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;table.insert(TemporaryMotors, {Motor = Motor, Parent = v})
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(LimbsResized) do
&#9;&#9;v.FormFactor = Enum.FormFactor.Custom
&#9;&#9;v.Size = Vector3.new(0.2, 0.2, 0.2)
&#9;end
&#9;for i, v in pairs(TemporaryMotors) do
&#9;&#9;v.Motor.Parent = v.Parent
&#9;end
&#9;
&#9;FakeHeadWeld = RbxUtility.Create(&quot;Weld&quot;){
&#9;&#9;Name = &quot;HeadWeld&quot;,
&#9;&#9;Parent = ConsistentPlayerVariables.Head
&#9;}
&#9;&#9;
&#9;BatWeld = RbxUtility.Create(&quot;Motor6D&quot;){
&#9;&#9;Name = &quot;BatWeld&quot;,
&#9;&#9;Part0 = BatBody,
&#9;&#9;Part1 = ConsistentPlayerVariables.Torso,
&#9;&#9;Parent = BatBody
&#9;}
&#9;
&#9;BatBody.CFrame = ConsistentPlayerVariables.Torso.CFrame
&#9;BatBody.Velocity = Vector3.new(0, 0, 0)
&#9;BatBody.RotVelocity = Vector3.new(0, 0, 0)
&#9;BatClone.Parent = ConsistentPlayerVariables.Character
&#9;
&#9;local Smoke = RbxUtility.Create(&quot;Smoke&quot;){
&#9;&#9;Enabled = true,
&#9;&#9;Parent = BatBody
&#9;}
&#9;Delay(0.3, function()
&#9;&#9;if GearModule.CheckExistence(Smoke) then
&#9;&#9;&#9;Smoke.Enabled = false
&#9;&#9;end
&#9;end)
&#9;Debris:AddItem(Smoke, 5)
&#9;
&#9;HumanoidDied = ConsistentPlayerVariables.Humanoid.Died:connect(Die)
&#9;
&#9;ToolAdded = ConsistentPlayerVariables.Character.ChildAdded:connect(function(Child)
&#9;&#9;if Child:IsA(&quot;Tool&quot;) and Child ~= Tool then
&#9;&#9;&#9;Delay(0.1, function()
&#9;&#9;&#9;&#9;GearModule.Destroy(Child)
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;end)
&#9;
&#9;for i, v in pairs(ConsistentPlayerVariables.Character:GetChildren()) do
&#9;&#9;if v:IsA(&quot;Tool&quot;) and v ~= Tool then
&#9;&#9;&#9;v.Parent = ConsistentPlayerVariables.Backpack
&#9;&#9;end
&#9;end
&#9;
&#9;Active = true
&#9;
&#9;local Weld = Instance.new(&quot;Weld&quot;)
&#9;Weld.Part0 = Handle
&#9;Weld.Part1 = ConsistentPlayerVariables.Torso
&#9;Weld.Parent = Handle
&#9;
&#9;Spawn(function()
&#9;&#9;FunctionBat()
&#9;end)
&#9;InvokeClient(&quot;FunctionBat&quot;, BatBody)
&#9;
&#9;Transforming = false
&#9;
&#9;return BatClone
end

function Untransform()
&#9;
&#9;InvokeClient(&quot;SetCoreGuiEnabled&quot;, {Enum = Enum.CoreGuiType.Backpack, Boolean = false})
&#9;&#9;
&#9;InvokeClient(&quot;SetCamera&quot;, {Property = &quot;CameraType&quot;, Value = Enum.CameraType.Custom})
&#9;InvokeClient(&quot;SetCamera&quot;, {Property = &quot;CameraSubject&quot;, Value = ConsistentPlayerVariables.Humanoid})
&#9;
&#9;InvokeClient(&quot;PlaySound&quot;, Sounds.WindBreath)
&#9;local SmokePart = GearModule.BasePart:Clone()
&#9;SmokePart.Transparency = 1
&#9;SmokePart.Anchored = true
&#9;SmokePart.CanCollide = false
&#9;local Smoke = RbxUtility.Create(&quot;Smoke&quot;){
&#9;&#9;Enabled = true,
&#9;&#9;Parent = SmokePart
&#9;}
&#9;Delay(0.3, function()
&#9;&#9;if GearModule.CheckExistence(Smoke) then
&#9;&#9;&#9;Smoke.Enabled = false
&#9;&#9;end
&#9;end)
&#9;Debris:AddItem(SmokePart, 5)
&#9;SmokePart.Parent = game:GetService(&quot;Workspace&quot;)
&#9;SmokePart.CFrame = BatBody.CFrame
&#9;GearModule.Destroy({ToolAdded, HumanoidDied, BatClone, FakeHeadWeld, TemporaryMotors})
&#9;local LimbsResized = {}
&#9;TemporaryMotors = {}
&#9;for i, v in pairs(Motors) do
&#9;&#9;local Motor = RbxUtility.Create(&quot;Motor6D&quot;){
&#9;&#9;&#9;Name = v.Name,
&#9;&#9;&#9;MaxVelocity = v.MaxVelocity,
&#9;&#9;&#9;C0 = v.C0,
&#9;&#9;&#9;C1 = v.C1,
&#9;&#9;&#9;Part0 = v.Part0,
&#9;&#9;&#9;Part1 = v.Part1,
&#9;&#9;}
&#9;&#9;table.insert(TemporaryMotors, {Motor = Motor, Parent = v.Parent})
&#9;end
&#9;for i, v in pairs(OriginalLimbsResized) do
&#9;&#9;v.Limb.FormFactor = Enum.FormFactor.Custom
&#9;&#9;v.Limb.Size = v.Size
&#9;end
&#9;for i, v in pairs(TemporaryMotors) do
&#9;&#9;v.Motor.Parent = v.Parent
&#9;end
&#9;for i, v in pairs(Limbs) do
&#9;&#9;local Limb = v.Limb.Part:Clone()
&#9;&#9;local Motor = RbxUtility.Create(&quot;Motor6D&quot;){
&#9;&#9;&#9;Name = v.Motor.Name,
&#9;&#9;&#9;MaxVelocity = v.Motor.MaxVelocity,
&#9;&#9;&#9;C0 = v.Motor.C0,
&#9;&#9;&#9;C1 = v.Motor.C1,
&#9;&#9;&#9;Part0 = ConsistentPlayerVariables.Torso,
&#9;&#9;&#9;Part1 = Limb,
&#9;&#9;&#9;Parent = v.Motor.Parent
&#9;&#9;}
&#9;&#9;Limb.Parent = v.Limb.Parent
&#9;end
&#9;for i, v in pairs(Clothing) do
&#9;&#9;if GearModule.CheckExistence(v.Parent) then
&#9;&#9;&#9;local Object = v.Object:Clone()
&#9;&#9;&#9;Object.Parent = v.Parent
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(HeadWelds) do
&#9;&#9;local Hat = v.Hat:Clone()
&#9;&#9;local handle = Hat:FindFirstChild(&quot;Handle&quot;)
&#9;&#9;if handle then
&#9;&#9;&#9;local Motor = RbxUtility.Create(&quot;Weld&quot;){
&#9;&#9;&#9;&#9;Name = &quot;HeadWeld&quot;,
&#9;&#9;&#9;&#9;C0 = v.Weld.C0,
&#9;&#9;&#9;&#9;C1 = v.Weld.C1,
&#9;&#9;&#9;&#9;Part0 = ConsistentPlayerVariables.Head,
&#9;&#9;&#9;&#9;Part1 = handle,
&#9;&#9;&#9;&#9;Parent = ConsistentPlayerVariables.Head
&#9;&#9;&#9;}
&#9;&#9;&#9;Hat.Parent = ConsistentPlayerVariables.Character
&#9;&#9;end
&#9;end
&#9;HeadWelds = {}
&#9;Clothing = {}
&#9;Limbs = {}
&#9;Motors = {}
&#9;TemporaryMotors = {}
&#9;OriginalLimbsResized = {}
&#9;MakeTransparent(ConsistentPlayerVariables.Character, 0)
&#9;ConsistentPlayerVariables.Torso.Velocity = Vector3.new(0, 0, 0)
&#9;ConsistentPlayerVariables.Torso.RotVelocity = Vector3.new(0, 0, 0)
&#9;Active = false
&#9;Equipped()
end

function SetToolTransparency()
&#9;local ToolParent = Tool.Parent
&#9;local MakeTransparent = true
&#9;if not ToolParent:IsA(&quot;Backpack&quot;) and not Players:GetPlayerFromCharacter(ToolParent) then
&#9;&#9;for i, v in pairs(ConsistentPlayerVariables) do
&#9;&#9;&#9;ConsistentPlayerVariables[i] = nil
&#9;&#9;end
&#9;&#9;Die()
&#9;&#9;MakeTransparent = false
&#9;&#9;Active = false
&#9;end
&#9;local HandlePieces = Handle:GetChildren()
&#9;table.insert(HandlePieces, Handle)
&#9;for i, v in pairs(HandlePieces) do
&#9;&#9;if v:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;v.Transparency = ((MakeTransparent and 1) or 0)
&#9;&#9;end
&#9;end
end
function CheckIfAlive(Current)
&#9;return (GearModule.CheckExistence({((Current and ConsistentPlayerVariables.Player) or Player), ((Current and ConsistentPlayerVariables.Backpack) or Backpack), ((Current and ConsistentPlayerVariables.Humanoid) or Humanoid), ((Current and ConsistentPlayerVariables.Head) or Head), ((Current and ConsistentPlayerVariables.Torso) or Torso), ((Current and ConsistentPlayerVariables.HumanoidRootPart) or HumanoidRootPart)}) and ((Current and ConsistentPlayerVariables.Humanoid.Health &gt; 0) or Humanoid.Health &gt; 0))
end

function Equipped()
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;if not Player then
&#9;&#9;return
&#9;end
&#9;Backpack = Player:FindFirstChild(&quot;Backpack&quot;)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Head = Character:FindFirstChild(&quot;Head&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;HumanoidRootPart = Character:FindFirstChild(&quot;HumanoidRootPart&quot;)
&#9;if not CheckIfAlive(false) then
&#9;&#9;Unequipped()
&#9;&#9;return
&#9;end
&#9;if Active then
&#9;&#9;return
&#9;end
&#9;Spawn(function()
&#9;&#9;SetToolTransparency()
&#9;&#9;for i, v in pairs(Character:GetChildren()) do
&#9;&#9;&#9;if v:IsA(&quot;BasePart&quot;) and v.Name == Cloak.Name then
&#9;&#9;&#9;&#9;v:Destroy()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;CloakClone = Cloak:Clone()
&#9;&#9;local Weld = RbxUtility.Create(&quot;Weld&quot;){
&#9;&#9;&#9;Name = &quot;CloakWeld&quot;,
&#9;&#9;&#9;Part0 = Torso,
&#9;&#9;&#9;Part1 = CloakClone,
&#9;&#9;&#9;C1 = CFrame.new(0, 0.545642853, -0.638683319),
&#9;&#9;&#9;Parent = Torso
&#9;&#9;}
&#9;&#9;CloakClone.Parent = Character
&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.Idle)
&#9;end)
&#9;Humanoid.WalkSpeed = 22
&#9;Equip = true
end

function Unequipped()
&#9;Equip = false
&#9;if GearModule.CheckExistence(Humanoid) then
&#9;&#9;Humanoid.WalkSpeed = 16
&#9;end
&#9;GearModule.Destroy({CloakClone, CloakAntiGravity, ChildAddedConnection, ChildRemovedConnection})
&#9;for i, v in pairs(Animations) do
&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;end
&#9;if Active then
&#9;&#9;return
&#9;end
end

Tool.Changed:connect(function(Property)
&#9;if Property == &quot;Parent&quot; then
&#9;&#9;SetToolTransparency()
&#9;end
end)

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX74D373C7507349C0A0F89389BD039E52">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">CharacterMonitor</string>
					<ProtectedString name="Source">--Made by Luckymaxer

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

Creator = script:WaitForChild(&quot;Creator&quot;)
Model = script:WaitForChild(&quot;Model&quot;)
Tool = script:WaitForChild(&quot;Tool&quot;)
FixCamera = script:WaitForChild(&quot;FixCamera&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Player = Creator.Value
Bat = Model.Value
ToolObject = Tool.Value

Destroyed = false

function DestroyScript(Delay)
&#9;if Delay then
&#9;&#9;Debris:AddItem(script, Delay)
&#9;else
&#9;&#9;script:Destroy()
&#9;end
end

function FixPlayer(Delay)
&#9;if Destroyed then
&#9;&#9;return
&#9;end
&#9;Destroyed = true
&#9;local FixCameraClone = FixCamera:Clone()
&#9;FixCameraClone.Disabled = false
&#9;local Character = Player.Character
&#9;local Backpack = Player:FindFirstChild(&quot;Backpack&quot;)
&#9;FixCameraClone.Parent = (((Backpack and Backpack) or (Character and Character)) or nil)
&#9;DestroyScript(Delay)
end

if Player and Player:IsA(&quot;Player&quot;) and Bat then
&#9;Player.Changed:connect(function(Property)
&#9;&#9;if Propety == &quot;Parent&quot; and not Player.Parent then
&#9;&#9;&#9;DestroyScript()
&#9;&#9;elseif Property == &quot;Character&quot; then
&#9;&#9;&#9;FixPlayer()
&#9;&#9;end
&#9;end)
&#9;Bat.Changed:connect(function(Property)
&#9;&#9;if Property == &quot;Parent&quot; and not Bat.Parent then
&#9;&#9;&#9;FixPlayer()
&#9;&#9;end
&#9;end)
&#9;ToolObject.Changed:connect(function(Property)
&#9;&#9;if (not ToolObject.Parent or not ToolObject.Parent.Parent or (ToolObject.Parent ~= Player.Character and ToolObject.Parent.Parent ~= Player)) then
&#9;&#9;&#9;Spawn(function()
&#9;&#9;&#9;&#9;if Player.Character and Player.Character.Parent then
&#9;&#9;&#9;&#9;&#9;Player.Character:BreakJoints()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;&#9;Spawn(function()
&#9;&#9;&#9;&#9;FixPlayer()
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;end)
else
&#9;DestroyScript(1)
end</ProtectedString>
				</Properties>
				<Item class="LocalScript" referent="RBXEB688FDFD85B40198241FFCBF3B99657">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">FixCamera</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Self = script.Parent

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)
StarterGui = game:GetService(&quot;StarterGui&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Player = (Self:IsA(&quot;Backpack&quot;) and Self.Parent) or (Players:GetPlayerFromCharacter(Self))

if Player then
&#9;Character = Player.Character
&#9;if Character then
&#9;&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;if Humanoid then
&#9;&#9;&#9;StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
&#9;&#9;&#9;Camera.CameraSubject = Humanoid
&#9;&#9;&#9;Camera.CameraType = Enum.CameraType.Custom
&#9;&#9;end
&#9;end
end

Debris:AddItem(script, 1)</ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX1301A3B1119A4F69AFBFB86522DD935D">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">CFramePart</string>
					<ProtectedString name="Source">--Made by Luckymaxer

Debris = game:GetService(&quot;Debris&quot;)

function DestroyScript()
&#9;Debris:AddItem(script, 3)
end

DestroyScript()

PartValue = script:WaitForChild(&quot;PartValue&quot;).Value
CFrameValue = script:WaitForChild(&quot;CFrameValue&quot;).Value

PartValue.CFrame = CFrameValue</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX83472C2711B8416488A129C7547D2E4E">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">5</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-6.46914482</X>
					<Y>15.2741385</Y>
					<Z>25.651144</Z>
					<R00>0.992876351</R00>
					<R01>0.01284023</R01>
					<R02>-0.11845538</R02>
					<R10>9.31322575e-010</R10>
					<R11>0.994176209</R11>
					<R12>0.10776592</R12>
					<R20>0.119149275</R20>
					<R21>-0.106998235</R21>
					<R22>0.987094104</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-6.24408007</X>
					<Y>15.0693836</Y>
					<Z>23.7756691</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>