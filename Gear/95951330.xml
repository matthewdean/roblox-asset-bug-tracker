<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0.939999998</X>
				<Y>-4.69999981</Y>
				<Z>-0.159999996</Z>
				<R00>0</R00>
				<R01>0</R01>
				<R02>1</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>-0</R12>
				<R20>-1</R20>
				<R21>0</R21>
				<R22>-0</R22>
			</CoordinateFrame>
			<string name="Name">BoneScythe</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=95891250</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>0.999998569</R00>
					<R01>0.000805960735</R01>
					<R02>5.06639481e-007</R02>
					<R10>-0.000806277676</R10>
					<R11>0.999998569</R11>
					<R12>0.000124309096</R12>
					<R20>8.94069672e-008</R20>
					<R21>-0.000124018639</R21>
					<R22>0.999999285</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>4.59999704</X>
					<Y>2.20000029</Y>
					<Z>0.500000358</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=95891318</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.800000012</X>
						<Y>0.800000012</Y>
						<Z>0.800000012</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=95891299</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX3">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">SwordSlash</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds//swordslash.wav</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX4">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Gong</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=96098241</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX5">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">ScytheScript</string>
				<ProtectedString name="Source">-----------------
--| Constants |--
-----------------

local HIT_DAMAGE = 20
local LIMB_DEBRIS_TIME = 4 --NOTE: Should be less than respawn time

local SLASH_COOLDOWN = 0.7

local IGNORE_LIST = {torso = 1, handle = 1, effect = 1, water = 1} --NOTE: Keys must be lowercase, values must evaluate to true

--------------------
--| WaitForChild |--
--------------------

-- Waits for parent.child to exist, then returns it
local function WaitForChild(parent, childName)
&#9;assert(parent, &quot;ERROR: WaitForChild: parent is nil&quot;)
&#9;while not parent:FindFirstChild(childName) do parent.ChildAdded:wait() end
&#9;return parent[childName]
end

-----------------
--| Variables |--
-----------------

local DebrisService = Game:GetService(&apos;Debris&apos;)
local PlayersService = Game:GetService(&apos;Players&apos;)

local Tool = script.Parent
local ToolHandle = Tool.Handle

local MyModel = nil
local MyPlayer = nil

-------------------------
--| Utility Functions |--
-------------------------

-- Returns a character ancestor and its Humanoid, or nil
local function FindCharacterAncestor(subject)
&#9;if subject and subject ~= Workspace then
&#9;&#9;local humanoid = subject:FindFirstChild(&apos;Humanoid&apos;)
&#9;&#9;if humanoid then
&#9;&#9;&#9;return subject, humanoid
&#9;&#9;else
&#9;&#9;&#9;return FindCharacterAncestor(subject.Parent)
&#9;&#9;end
&#9;end
&#9;return nil
end

-- Removes any old creator tags and applies new ones to the specified target
local function ApplyTags(target)
&#9;while target:FindFirstChild(&apos;creator&apos;) do
&#9;&#9;target.creator:Destroy()
&#9;end

&#9;local creatorTag = Instance.new(&apos;ObjectValue&apos;)
&#9;creatorTag.Value = MyPlayer
&#9;creatorTag.Name = &apos;creator&apos; --NOTE: Must be called &apos;creator&apos; for website stats

&#9;local iconTag = Instance.new(&apos;StringValue&apos;)
&#9;iconTag.Value = Tool.TextureId
&#9;iconTag.Name = &apos;icon&apos;

&#9;iconTag.Parent = creatorTag
&#9;creatorTag.Parent = target
&#9;DebrisService:AddItem(creatorTag, 4)
end

-----------------------
--| Other Functions |--
-----------------------

local function OnTouched(otherPart)
&#9;if otherPart and not IGNORE_LIST[string.lower(otherPart.Name)] then
&#9;&#9;local character, humanoid = FindCharacterAncestor(otherPart)
&#9;&#9;if character and humanoid and character ~= MyModel then
&#9;&#9;&#9;ApplyTags(humanoid)
&#9;&#9;&#9;humanoid:TakeDamage(HIT_DAMAGE)
&#9;&#9;&#9;if humanoid.Health &gt; 0 and humanoid.Torso then -- Cut limbs
&#9;&#9;&#9;&#9;for _, child in pairs(humanoid.Torso:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;if child:IsA(&apos;JointInstance&apos;) and (child.Part0 == otherPart or child.Part1 == otherPart) then
&#9;&#9;&#9;&#9;&#9;&#9;child:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;DebrisService:AddItem(otherPart, LIMB_DEBRIS_TIME)
&#9;&#9;&#9;&#9;&#9;&#9;otherPart.Parent = Workspace
&#9;&#9;&#9;&#9;&#9;&#9;otherPart.CanCollide = true
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

local function OnEquipped()
&#9;MyModel = Tool.Parent
&#9;MyPlayer = PlayersService:GetPlayerFromCharacter(MyModel)
end

local function OnActivated()
&#9;if Tool.Enabled and MyModel:FindFirstChild(&apos;Humanoid&apos;) and MyModel.Humanoid.Health &gt; 0 then
&#9;&#9;Tool.Enabled = false --NOTE: Starts the animation

&#9;&#9;local connection = ToolHandle.Touched:connect(OnTouched)
&#9;&#9;Delay(0.4, function() --NOTE: Hardcoded length of animation :[
&#9;&#9;&#9;if connection then
&#9;&#9;&#9;&#9;connection:disconnect()
&#9;&#9;&#9;end
&#9;&#9;end)

&#9;&#9;local slashSound = ToolHandle:FindFirstChild(&apos;SwordSlash&apos;)
&#9;&#9;if slashSound then
&#9;&#9;&#9;slashSound:Play()
&#9;&#9;end

&#9;&#9;wait(SLASH_COOLDOWN)

&#9;&#9;Tool.Enabled = true
&#9;end
end

--------------------
--| Script Logic |--
--------------------

Tool.Equipped:connect(OnEquipped)
Tool.Activated:connect(OnActivated)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX6">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MostAnimations</string>
				<ProtectedString name="Source">--------------------
--| WaitForChild |--
--------------------

-- Waits for parent.child to exist, then returns it
local function WaitForChild(parent, childName)
&#9;assert(parent, &quot;ERROR: WaitForChild: parent is nil&quot;)
&#9;while not parent:FindFirstChild(childName) do parent.ChildAdded:wait() end
&#9;return parent[childName]
end

-----------------
--| Variables |--
-----------------

local Tool = script.Parent

local ScytheEquipAnimation = WaitForChild(script, &apos;ScytheEquip2&apos;)
local ScytheIdleAnimation = WaitForChild(script, &apos;ScytheIdle2&apos;)
local ScytheSlashAnimation = WaitForChild(script, &apos;ScytheSlash&apos;)

local ScytheEquipTrack = nil
local ScytheIdleTrack = nil
local ScytheSlashTrack = nil

-----------------
--| Functions |--
-----------------

local function OnEquipped()
&#9;local myModel = Tool.Parent
&#9;local humanoid = myModel:FindFirstChild(&apos;Humanoid&apos;)
&#9;if humanoid then -- Preload animations
&#9;&#9;ScytheEquipTrack = humanoid:LoadAnimation(ScytheEquipAnimation)
&#9;&#9;if ScytheEquipTrack then ScytheEquipTrack:Play() end

&#9;&#9;ScytheIdleTrack = humanoid:LoadAnimation(ScytheIdleAnimation)
&#9;&#9;if ScytheIdleTrack then ScytheIdleTrack:Play() end

&#9;&#9;ScytheSlashTrack = humanoid:LoadAnimation(ScytheSlashAnimation)
&#9;end
end

local function OnChanged(property)
&#9;if property == &apos;Enabled&apos; and Tool.Enabled == false then
&#9;&#9;if ScytheSlashTrack then ScytheSlashTrack:Play() end
&#9;end
end

local function OnUnequipped()
&#9;-- Stop all animations
&#9;if ScytheEquipTrack then ScytheEquipTrack:Stop() end
&#9;if ScytheIdleTrack then ScytheIdleTrack:Stop() end
&#9;if ScytheSlashTrack then ScytheSlashTrack:Stop() end
end

--------------------
--| Script Logic |--
--------------------

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
Tool.Unequipped:connect(OnUnequipped)
</ProtectedString>
			</Properties>
			<Item class="Animation" referent="RBX7">
				<Properties>
					<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=96064636</url></Content>
					<string name="Name">ScytheEquip2</string>
				</Properties>
			</Item>
			<Item class="Animation" referent="RBX8">
				<Properties>
					<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=96065457</url></Content>
					<string name="Name">ScytheIdle2</string>
				</Properties>
			</Item>
			<Item class="Animation" referent="RBX9">
				<Properties>
					<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=96071496</url></Content>
					<string name="Name">ScytheSlash</string>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX10">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">RaiseSkeletons</string>
				<ProtectedString name="Source">-----------------
--| Constants |--
-----------------

local SPAWN_RADIUS = 8 -- Studs

local SUMMON_COOLDOWN = 8

local SKELETON_ASSET_ID = 53604463

local SKELETON_DURATION = 30

--------------------
--| WaitForChild |--
--------------------

-- Waits for parent.child to exist, then returns it
local function WaitForChild(parent, childName)
&#9;assert(parent, &quot;ERROR: WaitForChild: parent is nil&quot;)
&#9;while not parent:FindFirstChild(childName) do parent.ChildAdded:wait() end
&#9;return parent[childName]
end

-----------------
--| Variables |--
-----------------

local InsertService = Game:GetService(&apos;InsertService&apos;)
local DebrisService = Game:GetService(&apos;Debris&apos;)
local PlayersService = Game:GetService(&apos;Players&apos;)

local Tool = script.Parent
local ToolHandle = Tool.Handle

local MyPlayer = PlayersService.LocalPlayer

local SkeletonScript = WaitForChild(script, &apos;SkeletonScript&apos;)
local Fire = WaitForChild(script, &apos;Fire&apos;)
local SummonAnimation = WaitForChild(script, &apos;Summon&apos;)

local GongSound = WaitForChild(ToolHandle, &apos;Gong&apos;)

local MyModel = nil
local Skeleton = nil
local LastSummonTime = 0
local SummonTrack = nil

-----------------
--| Functions |--
-----------------

local function MakeSkeleton()
&#9;Skeleton = InsertService:LoadAsset(SKELETON_ASSET_ID):GetChildren()[1]
&#9;if Skeleton then
&#9;&#9;local head = Skeleton:FindFirstChild(&apos;Head&apos;)
&#9;&#9;if head then
&#9;&#9;&#9;head.Transparency = 0.99
&#9;&#9;end

&#9;&#9;local skeletonScriptClone = SkeletonScript:Clone()
&#9;&#9;skeletonScriptClone.Parent = Skeleton
&#9;&#9;skeletonScriptClone.Disabled = false

&#9;&#9;local creatorTag = Instance.new(&apos;ObjectValue&apos;)
&#9;&#9;creatorTag.Name = &apos;creator&apos; --NOTE: Must be called &apos;creator&apos; for website stats
&#9;&#9;creatorTag.Value = MyPlayer
&#9;&#9;local iconTag = Instance.new(&apos;StringValue&apos;, creatorTag)
&#9;&#9;iconTag.Name = &apos;icon&apos;
&#9;&#9;iconTag.Value = Tool.TextureId
&#9;&#9;creatorTag.Parent = Skeleton
&#9;end
end

local function SpawnSkeleton(spawnPosition)
&#9;if Skeleton then
&#9;&#9;-- Hellfire
&#9;&#9;local firePart = Instance.new(&apos;Part&apos;)
&#9;&#9;firePart.Name = &apos;Effect&apos;
&#9;&#9;firePart.Transparency = 1
&#9;&#9;firePart.FormFactor = Enum.FormFactor.Custom
&#9;&#9;firePart.Size = Vector3.new()
&#9;&#9;firePart.Anchored = true
&#9;&#9;firePart.CanCollide = false
&#9;&#9;firePart.CFrame = CFrame.new(spawnPosition - Vector3.new(0, 4, 0))
&#9;&#9;local fireClone = Fire:Clone()
&#9;&#9;fireClone.Parent = firePart
&#9;&#9;Delay(0.5, function()
&#9;&#9;&#9;if fireClone then
&#9;&#9;&#9;&#9;fireClone.Enabled = false
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;&#9;DebrisService:AddItem(firePart, 3)
&#9;&#9;firePart.Parent = Workspace

&#9;&#9;-- Spawn
&#9;&#9;local skeletonClone = Skeleton:Clone()
&#9;&#9;DebrisService:AddItem(skeletonClone, SKELETON_DURATION)
&#9;&#9;skeletonClone.Parent = Workspace
&#9;&#9;skeletonClone:MoveTo(spawnPosition) --NOTE: Model must be in Workspace

&#9;&#9;-- Rise!
&#9;&#9;local torso = skeletonClone:FindFirstChild(&apos;Torso&apos;)
&#9;&#9;if torso then
&#9;&#9;&#9;torso.CFrame = torso.CFrame - Vector3.new(0, 4.5, 0)
&#9;&#9;&#9;for i = 0, 4.5, 0.45 do
&#9;&#9;&#9;&#9;torso.CFrame = torso.CFrame + Vector3.new(0, i, 0)
&#9;&#9;&#9;&#9;wait(1/30)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

local function RaiseSkeletons()
&#9;if not Skeleton then -- Try again
&#9;&#9;MakeSkeleton()
&#9;end
&#9;for theta = -135, -45, 45 do
&#9;&#9;SpawnSkeleton(MyModel.Torso.CFrame:pointToWorldSpace(Vector3.new(math.cos(theta), 0, math.sin(theta)) * SPAWN_RADIUS))
&#9;end
end

--NOTE: Ugly!
local function OnKeyDown(key)
&#9;key = string.lower(key)
&#9;if key == &apos;e&apos; then
&#9;&#9;local now = time()
&#9;&#9;if now &gt; LastSummonTime + SUMMON_COOLDOWN then
&#9;&#9;&#9;LastSummonTime = now
&#9;&#9;&#9;local humanoid = MyModel:FindFirstChild(&apos;Humanoid&apos;)
&#9;&#9;&#9;if humanoid then
&#9;&#9;&#9;&#9;humanoid.WalkSpeed = 0
&#9;&#9;&#9;end
&#9;&#9;&#9;Spawn(function()
&#9;&#9;&#9;&#9;for i = 1, 3 do
&#9;&#9;&#9;&#9;&#9;if GongSound then GongSound:Play() end
&#9;&#9;&#9;&#9;&#9;wait(1.5)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;&#9;if SummonTrack then
&#9;&#9;&#9;&#9;SummonTrack:Play()
&#9;&#9;&#9;&#9;wait(3.125)
&#9;&#9;&#9;end
&#9;&#9;&#9;RaiseSkeletons()
&#9;&#9;&#9;wait(1)
&#9;&#9;&#9;if humanoid then
&#9;&#9;&#9;&#9;humanoid.WalkSpeed = 16
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

local function OnEquipped(mouse)
&#9;MyModel = Tool.Parent
&#9;mouse.KeyDown:connect(OnKeyDown)

&#9;local humanoid = MyModel:FindFirstChild(&apos;Humanoid&apos;)
&#9;if humanoid then -- Preload animations
&#9;&#9;SummonTrack = humanoid:LoadAnimation(SummonAnimation)
&#9;end
end

local function OnUnequipped()
&#9;if SummonTrack then SummonTrack:Stop() end
end

--------------------
--| Script Logic |--
--------------------

MakeSkeleton()
Tool.Equipped:connect(OnEquipped)
Tool.Unequipped:connect(OnUnequipped)
</ProtectedString>
			</Properties>
			<Item class="Fire" referent="RBX11">
				<Properties>
					<Color3 name="Color">4294901760</Color3>
					<bool name="Enabled">true</bool>
					<string name="Name">Fire</string>
					<Color3 name="SecondaryColor">4278190080</Color3>
					<float name="heat_xml">25</float>
					<float name="size_xml">10</float>
				</Properties>
			</Item>
			<Item class="Animation" referent="RBX12">
				<Properties>
					<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=93693205</url></Content>
					<string name="Name">Summon</string>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX13">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">SkeletonScript</string>
					<ProtectedString name="Source">--Made by Stickmasterluke

--Zombie artificial stupidity script
--(Modified for skeletons)

sp=script.Parent
lastattack=0
nextrandom=0
--nextsound=0
nextjump=0
chasing=false

variance=4

damage=11
attackrange=4.5
sightrange=60
runspeed=18
wonderspeed=8
healthregen=false
colors={&quot;Sand red&quot;,&quot;Dusty Rose&quot;,&quot;Medium blue&quot;,&quot;Sand blue&quot;,&quot;Lavender&quot;,&quot;Earth green&quot;,&quot;Brown&quot;,&quot;Medium stone grey&quot;,&quot;Brick yellow&quot;}

function raycast(spos,vec,currentdist)
&#9;local hit2,pos2=game.Workspace:FindPartOnRay(Ray.new(spos+(vec*.01),vec*currentdist),sp)
&#9;if hit2~=nil and pos2 then
&#9;&#9;if hit2.Transparency&gt;=.8 or hit2.Name==&quot;Handle&quot; or string.sub(hit2.Name,1,6)==&quot;Effect&quot; then
&#9;&#9;&#9;local currentdist=currentdist-(pos2-spos).magnitude
&#9;&#9;&#9;return raycast(pos2,vec,currentdist)
&#9;&#9;end
&#9;end
&#9;return hit2,pos2
end

function waitForChild(parent,childName)
&#9;local child=parent:findFirstChild(childName)
&#9;if child then return child end
&#9;while true do
&#9;&#9;child=parent.ChildAdded:wait()
&#9;&#9;if child.Name==childName then return child end
&#9;end
end

-- ANIMATION

-- declarations

local Torso=waitForChild(sp,&quot;Torso&quot;)
local Head=waitForChild(sp,&quot;Head&quot;)
local RightShoulder=waitForChild(Torso,&quot;Right Shoulder&quot;)
local LeftShoulder=waitForChild(Torso,&quot;Left Shoulder&quot;)
local RightHip=waitForChild(Torso,&quot;Right Hip&quot;)
local LeftHip=waitForChild(Torso,&quot;Left Hip&quot;)
local Neck=waitForChild(Torso,&quot;Neck&quot;)
local Humanoid=waitForChild(sp,&quot;Humanoid&quot;)
local BodyColors=waitForChild(sp,&quot;Body Colors&quot;)
local pose=&quot;Standing&quot;
--local hitsound=waitForChild(Torso,&quot;HitSound&quot;)
--[[
local sounds={
&#9;waitForChild(Torso,&quot;GroanSound&quot;),
&#9;waitForChild(Torso,&quot;RawrSound&quot;)
}
--]]
if healthregen then
&#9;local regenscript=waitForChild(sp,&quot;HealthRegenerationScript&quot;)
&#9;regenscript.Disabled=false
end
Humanoid.WalkSpeed=wonderspeed

local toolAnim=&quot;None&quot;
local toolAnimTime=0

BodyColors.HeadColor=BrickColor.new(&quot;Grime&quot;)
local randomcolor1=colors[math.random(1,#colors)]
BodyColors.TorsoColor=BrickColor.new(randomcolor1)
BodyColors.LeftArmColor=BrickColor.new(randomcolor1)
BodyColors.RightArmColor=BrickColor.new(randomcolor1)
local randomcolor2=colors[math.random(1,#colors)]
BodyColors.LeftLegColor=BrickColor.new(randomcolor2)
BodyColors.RightLegColor=BrickColor.new(randomcolor2)


function onRunning(speed)
&#9;if speed&gt;0 then
&#9;&#9;pose=&quot;Running&quot;
&#9;else
&#9;&#9;pose=&quot;Standing&quot;
&#9;end
end
function onDied()
&#9;pose=&quot;Dead&quot;
end
function onJumping()
&#9;pose=&quot;Jumping&quot;
end
function onClimbing()
&#9;pose=&quot;Climbing&quot;
end
function onGettingUp()
&#9;pose = &quot;GettingUp&quot;
end
function onFreeFall()
&#9;pose = &quot;FreeFall&quot;
end
function onFallingDown()
&#9;pose = &quot;FallingDown&quot;
end
function onSeated()
&#9;pose = &quot;Seated&quot;
end
function onPlatformStanding()
&#9;pose = &quot;PlatformStanding&quot;
end

function moveJump()
&#9;RightShoulder.MaxVelocity = 0.5
&#9;LeftShoulder.MaxVelocity = 0.5
  RightShoulder.DesiredAngle=3.14
&#9;LeftShoulder.DesiredAngle=-3.14
&#9;RightHip.DesiredAngle=0
&#9;LeftHip.DesiredAngle=0
end

function moveFreeFall()
&#9;RightShoulder.MaxVelocity = 0.5
&#9;LeftShoulder.MaxVelocity =0.5
&#9;RightShoulder.DesiredAngle=3.14
&#9;LeftShoulder.DesiredAngle=-3.14
&#9;RightHip.DesiredAngle=0
&#9;LeftHip.DesiredAngle=0
end

function moveSit()
&#9;RightShoulder.MaxVelocity = 0.15
&#9;LeftShoulder.MaxVelocity = 0.15
&#9;RightShoulder.DesiredAngle=3.14 /2
&#9;LeftShoulder.DesiredAngle=-3.14 /2
&#9;RightHip.DesiredAngle=3.14 /2
&#9;LeftHip.DesiredAngle=-3.14 /2
end

function animate(time)
&#9;local amplitude
&#9;local frequency
&#9;if (pose == &quot;Jumping&quot;) then
&#9;&#9;moveJump()
&#9;&#9;return
&#9;end
&#9;if (pose == &quot;FreeFall&quot;) then
&#9;&#9;moveFreeFall()
&#9;&#9;return
&#9;end
&#9;if (pose == &quot;Seated&quot;) then
&#9;&#9;moveSit()
&#9;&#9;return
&#9;end
&#9;local climbFudge = 0
&#9;if (pose == &quot;Running&quot;) then
&#9;&#9;RightShoulder.MaxVelocity = 0.15
&#9;&#9;LeftShoulder.MaxVelocity = 0.15
&#9;&#9;amplitude = 1
&#9;&#9;frequency = 9
&#9;elseif (pose == &quot;Climbing&quot;) then
&#9;&#9;RightShoulder.MaxVelocity = 0.5 
&#9;&#9;LeftShoulder.MaxVelocity = 0.5
&#9;&#9;amplitude = 1
&#9;&#9;frequency = 9
&#9;&#9;climbFudge = 3.14
&#9;else
&#9;&#9;amplitude = 0.1
&#9;&#9;frequency = 1
&#9;end
&#9;desiredAngle = amplitude * math.sin(time*frequency)
&#9;if not chasing and frequency==9 then
&#9;&#9;frequency=4
&#9;end
&#9;if chasing then
&#9;&#9;RightShoulder.DesiredAngle=math.pi/2
&#9;&#9;LeftShoulder.DesiredAngle=-math.pi/2
&#9;&#9;RightHip.DesiredAngle=-desiredAngle*2
&#9;&#9;LeftHip.DesiredAngle=-desiredAngle*2
&#9;else
&#9;&#9;RightShoulder.DesiredAngle=desiredAngle + climbFudge
&#9;&#9;LeftShoulder.DesiredAngle=desiredAngle - climbFudge
&#9;&#9;RightHip.DesiredAngle=-desiredAngle
&#9;&#9;LeftHip.DesiredAngle=-desiredAngle
&#9;end
end


function attack(time,attackpos)
&#9;if time-lastattack&gt;=1 then
&#9;&#9;local hit,pos=raycast(Torso.Position,(attackpos-Torso.Position).unit,attackrange)
&#9;&#9;if hit and hit.Parent~=nil and hit.Parent.Name~=sp.Name then
&#9;&#9;&#9;local h=hit.Parent:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;if h then
&#9;&#9;&#9;&#9;local creator=sp:FindFirstChild(&quot;creator&quot;)
&#9;&#9;&#9;&#9;if creator then
&#9;&#9;&#9;&#9;&#9;if creator.Value~=nil then
&#9;&#9;&#9;&#9;&#9;&#9;if creator.Value~=game.Players:GetPlayerFromCharacter(h.Parent) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i,oldtag in ipairs(h:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if oldtag.Name==&quot;creator&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;oldtag:remove()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;creator:clone().Parent=h
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;h:TakeDamage(damage)
--[[
&#9;&#9;&#9;&#9;hitsound.Volume=.5+(.5*math.random())
&#9;&#9;&#9;&#9;hitsound.Pitch=.5+math.random()
&#9;&#9;&#9;&#9;hitsound:Play()
--]]
&#9;&#9;&#9;&#9;if RightShoulder and LeftShoulder then
&#9;&#9;&#9;&#9;&#9;RightShoulder.CurrentAngle=0
&#9;&#9;&#9;&#9;&#9;LeftShoulder.CurrentAngle=0
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;lastattack=time
&#9;end
end


Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(onJumping)
Humanoid.Climbing:connect(onClimbing)
Humanoid.GettingUp:connect(onGettingUp)
Humanoid.FreeFalling:connect(onFreeFall)
Humanoid.FallingDown:connect(onFallingDown)
Humanoid.Seated:connect(onSeated)
Humanoid.PlatformStanding:connect(onPlatformStanding)


function populatehumanoids(mdl)
&#9;if mdl.ClassName==&quot;Humanoid&quot; then
&#9;&#9;table.insert(humanoids,mdl)
&#9;end
&#9;for i2,mdl2 in ipairs(mdl:GetChildren()) do
&#9;&#9;populatehumanoids(mdl2)
&#9;end
end
--[[
function playsound(time)
&#9;nextsound=time+5+(math.random()*5)
&#9;local randomsound=sounds[math.random(1,#sounds)]
&#9;randomsound.Volume=.5+(.5*math.random())
&#9;randomsound.Pitch=.5+(.5*math.random())
&#9;randomsound:Play()
end
--]]
while sp.Parent~=nil and Humanoid and Humanoid.Parent~=nil and Humanoid.Health&gt;0 and Torso and Head and Torso~=nil and Torso.Parent~=nil do
&#9;local _,time=wait(1/3)
&#9;humanoids={}
&#9;populatehumanoids(game.Workspace)
&#9;closesttarget=nil
&#9;closestdist=sightrange
&#9;local creator=sp:FindFirstChild(&quot;creator&quot;)
&#9;for i,h in ipairs(humanoids) do
&#9;&#9;if h and h.Parent~=nil then
&#9;&#9;&#9;if h.Health&gt;0 and h.Parent.Name~=sp.Name and h.Parent~=sp then
&#9;&#9;&#9;&#9;local plr=game.Players:GetPlayerFromCharacter(h.Parent)
&#9;&#9;&#9;&#9;if creator==nil or plr==nil or creator.Value~=plr then
&#9;&#9;&#9;&#9;&#9;local t=h.Parent:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;&#9;&#9;&#9;if t~=nil then
&#9;&#9;&#9;&#9;&#9;&#9;local dist=(t.Position-Torso.Position).magnitude
&#9;&#9;&#9;&#9;&#9;&#9;if dist&lt;closestdist then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;closestdist=dist
&#9;&#9;&#9;&#9;&#9;&#9;&#9;closesttarget=t
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;if closesttarget~=nil then
&#9;&#9;if not chasing then
&#9;&#9;&#9;--playsound(time)
&#9;&#9;&#9;chasing=true
&#9;&#9;&#9;Humanoid.WalkSpeed=runspeed
&#9;&#9;end
&#9;&#9;Humanoid:MoveTo(closesttarget.Position+(Vector3.new(1,1,1)*(variance*((math.random()*2)-1))),closesttarget)
&#9;&#9;if math.random()&lt;.5 then
&#9;&#9;&#9;attack(time,closesttarget.Position)
&#9;&#9;end
&#9;else
&#9;&#9;if chasing then
&#9;&#9;&#9;chasing=false
&#9;&#9;&#9;Humanoid.WalkSpeed=wonderspeed
&#9;&#9;end
&#9;&#9;if time&gt;nextrandom then
&#9;&#9;&#9;nextrandom=time+3+(math.random()*5)
&#9;&#9;&#9;local randompos=Torso.Position+((Vector3.new(1,1,1)*math.random()-Vector3.new(.5,.5,.5))*40)
&#9;&#9;&#9;Humanoid:MoveTo(randompos,game.Workspace.Terrain)
&#9;&#9;end
&#9;end
--[[
&#9;if time&gt;nextsound then
&#9;&#9;playsound(time)
&#9;end
--]]
&#9;if time&gt;nextjump then
&#9;&#9;nextjump=time+7+(math.random()*5)
&#9;&#9;Humanoid.Jump=true
&#9;end
&#9;animate(time)
end

wait(4)
sp:remove() --Rest In Pizza
</ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX14">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-0.827448845</X>
					<Y>-3.25369072</Y>
					<Z>-5.93450403</Z>
					<R00>-0.980955124</R00>
					<R01>-0.019291399</R01>
					<R02>-0.193274498</R02>
					<R10>-0</R10>
					<R11>0.995055616</R11>
					<R12>-0.0993199348</R12>
					<R20>0.194234908</R20>
					<R21>-0.0974283963</R21>
					<R22>-0.976104736</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-0.440899849</X>
					<Y>-3.05505085</Y>
					<Z>-3.98229456</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>